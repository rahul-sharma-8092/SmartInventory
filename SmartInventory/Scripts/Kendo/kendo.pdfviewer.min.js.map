{"version":3,"sources":["raw-js/kendo.pdfviewer.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Pdfviewer","MobileScroller","Toolbar","Pager","Combobox","Textbox","Core","Drawing","Upload","PdfviewerCommonCmnChunk","this","kendo_mobile_scroller_js","kendo_toolbar_js","kendo_pager_js","kendo_combobox_js","kendo_textbox_js","kendo_core_js","kendo_drawing_js","kendo_upload_js","kendo_pdfviewerCommon_cmn_chunk_js","$","Class","extend","parseJSON","progress","UploadHelper","window","DPLProcessor","init","options","viewer","that","read","upload","download","fetchDocument","deferred","Deferred","errorMessages","messages","ajax","type","url","dataType","success","data","stringify","resolve","JSON","parse","error","xhr","_triggerError","responseText","message","parseError","fetchPageData","number","page","document","pages","pageField","geometries","length","downloadFile","fileName","location","fromJSON","json","_clearPages","total","_renderPages","resize","activatePage","pdfviewer","dpl","processor","jQuery","pdfjs","lib","pdfjsLib","ui","_initUpload","uploadElement","extendUploadOptions","uploadOptions","select","_onSelect","bind","_onSuccess","_onError","complete","_onComplete","showFileList","multiple","validation","allowedExtensions","async","saveUrl","autoUpload","saveField","kendoUpload","getKendoUpload","pageContainer","e","response","isPlainObject","XMLHttpRequest","notSupported","fileToUpload","files","trigger","file","extension","toLowerCase","reader","FileReader","onload","target","result","fromFile","onerror","readAsArrayBuffer","rawFile","noop","drawing","Group","Surface","geometryTypes","Path","MultiPath","Rect","Image","Text","Page","pageNumber","element","attr","_updatePageSize","width","height","ratio","pageElement","Math","min","size","destroy","render","BlankPage","_externalDropZoneId","_uploadHelper","_upload","find","dropZone","DPLPage","draw","group","surface","_drawGeometries","load","loaded","then","_initSurface","surfaceOptions","view","kGeometry","i","geometry","_drawPath","_drawRect","_drawImage","_drawText","append","rectGeo","point","transform","_getMatrix","fill","fillOptions","stroke","strokeOptions","imageRect","src","font","content","path","paths","subPath","segments","moveTo","apply","j","segment","points","lineTo","curveTo","closed","close","matrix","Object","create","Matrix","prototype","Command","OpenCommand","fn","call","exec","click","PageChangeCommand","current","targetPage","value","isNaN","_pageNum","numPages","Number","DownloadCommand","notFound","info","title","defaultFileName","_isDPLProcessor","d","pdf","blob","saveOptions","ExportCommand","dialog","_saveDialog","_initDialog","_updateModel","pagesCount","open","viewModel","exportImage","exportSVG","dialogs","ExportAsDialog","EnableSelectionCommand","_toggleSelection","EnablePanCommand","OpenSearchCommand","searchDialog","SearchDialog","pageContainerWrapper","position","top","offset","left","search","_open","next","_next","prev","_prev","_close","searchService","Promise","all","_loadAllPages","S","textContainers","get","changeHandler","_change","searchModel","toolbar","unbind","matches","matchIndex","_updateSearchModel","ev","text","matchCase","field","pdfScroller","g","scroller","a","model","set","_closeDialog","ZoomCommand","scale","processingLib","_calculateZoom","zoomScale","_setPageContainerScaleFactor","r","pdfDoc","zoom","dom","rootElement","loadOnDemand","done","pdfPages","currentPageIndex","c","_pageRenderPromise","_triggerZoomEnd","preventZoom","viewerOptions","scaleValue","_allowResize","_autoFit","zoomIn","zoomRate","zoomOut","_autoZoomScale","parseFloat","toString","match","parseInt","replace","b","zoomMin","zoomMax","updateComboBox","_updateZoomComboBox","PrintCommand","p","onPrintComplete","onPrintError","popupBlocked","encode","htmlEncode","Draggable","outerWidth","_outerWidth","EXTENSIONS","keys","ErrorDialog","actions","okText","_dialog","kendoDialog","getKendoDialog","center","fileFormats","description","exportAsDialog","png","svg","_initializeDialog","autoFocus","resizable","modal","preventScroll","maxWidth","template","labels","saveAsType","save","cancel","dialogMessages","kendoWindow","getKendoWindow","observable","name","dragHandle","icon","iconClass","inputLabel","of","previous","_showSearchDialog","_hideSearchDialog","css","innerWidth","kendoStop","kendoAnimate","effects","direction","fade","duration","properties","hide","dialogElm","prepend","_draggable","filter","axis","dragstart","wnd","containment","startPosition","x","client","getOffset","_innerWidth","clientWidth","support","scrollbar","maxLeft","drag","indexOf","max","userEvents","stopPropagation","boundValue","searchText","matchCaseClick","onKeyup","key","keyCode","navigationFn","shiftKey","ENTER","preventDefault","ESC","onInput","NS","PLUS","MINUS","ZERO","NUMPAD_ZERO","Widget","SCROLL","RENDER","ERROR","KEYDOWN","MOUSEWHEEL","UPDATE","PAGE_CHANGE","ZOOMCOMMAND","CHANGE","DISABLED","PROCESSORS","styles","PREDEFINED_ZOOM_VALUES","PDFViewer","deepExtend","_processMessages","_wrapper","_renderToolbar","_initProcessor","_renderPageContainer","_loadDPLDocument","_loadPdfJSDocument","notify","_showWatermarkOverlay","wrapper","events","pdfjsProcessing","dplProcessing","items","defaultPageSize","zoomLevel","actualWidth","autoWidth","fitToWidth","fitToPage","exportAs","print","toggleSelection","togglePan","defaultTools","pager","overflow","component","componentOptions","navigatable","_isToolbarItem","spacer","zoomInOut","fillMode","buttons","command","showText","enable","dataTextField","dataValueField","valuePrimitive","clearOnEscape","commandOn","togglable","selected","spacer2","exportAsTool","addClass","on","_keydown","D","_resizeHandler","onResize","plusShortcuts","NUMPAD_PLUS","minusShortcuts","NUMPAD_MINUS","zeroShortcuts","shouldExecute","args","ctrlKey","_blankPage","includes","execute","_handlePageChangeEvent","event","_pageChangeFromScroll","index","_showPagerInputLabels","inputElements","children","eq","add","is","show","_resizePager","responsive","pagerWidth","visibleToolbarItems","Array","from","containerWidth","visibleToolsWidth","gap","temp","elementsToShrink","hidden","removeClass","input","processingOptions","GlobalWorkerOptions","workerSrc","pdfjsWorker","console","_hasPagerTool","tools","hasPager","tool","toolbarOptions","_processTools","pagerMessages","currentPagerOptions","parentMessages","toolbarElement","appendTo","ToolBar","_toolbarClick","update","_updateToolbar","flatMap","t","zoomLevels","percent","comboOptions","map","concat","dataSource","pageOptions","toolbarEl","zoomCombo","toFocus","first","_getAllItems","isBlank","action","updatePager","pageChangeFromScroll","_updatePager","_updateOnBlank","_resetTabIndex","parent","pagerDataSource","DataSource","pageSize","setDataSource","_togglePagerDisabledClass","totalPages","hasClass","isPredefined","round","currentTarget","val","_initErrorDialog","_errorDialog","dialogInstance","style","setProperty","pagesData","viewerPage","pageData","push","_attachContainerEvents","_getVisiblePagesCount","_renderBlankPage","_resize","clearTimeout","setTimeout","_resizePages","forEach","pageWidth","_pageInfo","emptyPage","currentRatio","_wheel","throttle","activeElement","_scroll","_onDemandScroll","pageToLoadNum","containerHeight","pageNum","pageIndex","_preventScroll","_scrollingStarted","nextPageIndex","_loadVisiblePages","loadPage","originalEvent","wheelDelta","detail","preventComboBoxChange","commandOptions","parentNode","enablePanEventsTracking","ArrayBuffer","arrayBuffer","l","loadOnDemandPageSize","notFoundError","alertMessage","_setPageNumberAttributes","each","el","preventTrigger","intervalId","setInterval","rendered","renderInProgress","clearInterval","f","_scrollToActivatedPage","s","loadedPagesHeight","updatedVisiblePagesCount","clientHeight","_visiblePagesCount","minVisiblePageNum","maxVisiblePageNum","_visiblePages","slice","promises","_updateDocument","rootGroup","background","fromRect","color","saveAs","dataURI","proxyURL","forceProxy","proxyTarget","setOptions","unbindResize","off","empty","disablePanEventsTracking","toggleClass","plugin","kendo$1","__meta__","id","category","depends","default","defineProperty"],"mappings":"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","file":"kendo.pdfviewer.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.mobile.scroller.js'), require('kendo.toolbar.js'), require('kendo.pager.js'), require('kendo.combobox.js'), require('kendo.textbox.js'), require('kendo.core.js'), require('kendo.drawing.js'), require('kendo.upload.js'), require('kendo.pdfviewer-common.cmn.chunk.js'), require('kendo.dialog.js'), require('kendo.window.js'), require('kendo.binder.js'), require('kendo.numerictextbox.js'), require('kendo.dropdownlist.js'), require('kendo.icons.js'), require('kendo.draganddrop.js'), require('kendo.pdfjs.loader.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.mobile.scroller', 'kendo.toolbar', 'kendo.pager', 'kendo.combobox', 'kendo.textbox', 'kendo.core', 'kendo.drawing', 'kendo.upload', 'kendo.pdfviewer-common.cmn.chunk', 'kendo.dialog', 'kendo.window', 'kendo.binder', 'kendo.numerictextbox', 'kendo.dropdownlist', 'kendo.icons', 'kendo.draganddrop', 'kendo.pdfjs.loader'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Pdfviewer = {}), global.kendo._globals.MobileScroller, global.kendo._globals.Toolbar, global.kendo._globals.Pager, global.kendo._globals.Combobox, global.kendo._globals.Textbox, global.kendo._globals.Core, global.kendo._globals.Drawing, global.kendo._globals.Upload, global.kendo._globals.PdfviewerCommonCmnChunk));\n})(this, (function (exports, kendo_mobile_scroller_js, kendo_toolbar_js, kendo_pager_js, kendo_combobox_js, kendo_textbox_js, kendo_core_js, kendo_drawing_js, kendo_upload_js, kendo_pdfviewerCommon_cmn_chunk_js) {\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Class = kendo.Class;\n\n        var DPLProcessor = Class.extend({\n            init: function(options, viewer) {\n                var that = this;\n\n                that.options = options;\n                that.read = options.read;\n                that.upload = options.upload;\n                that.download = options.download;\n\n                that.viewer = viewer;\n            },\n            fetchDocument: function() {\n                var that = this,\n                    deferred = $.Deferred(),\n                    errorMessages = that.viewer.options.messages.errorMessages;\n\n                if (!that.read) {\n                    return deferred.resolve();\n                }\n\n                $.ajax({\n                    type: that.read.type,\n                    url: that.read.url,\n                    dataType: that.read.dataType,\n                    success: function(data) {\n                        if (typeof data != \"string\") {\n                            data = kendo.stringify(data);\n                        }\n                        deferred.resolve(JSON.parse(data));\n                    },\n                    error: function(xhr) {\n                        that.viewer._triggerError({\n                            error: xhr.responseText,\n                            message: errorMessages.parseError\n                        });\n                    }\n                });\n\n                return deferred;\n            },\n            fetchPageData: function(number) {\n                var that = this;\n                var deferred = $.Deferred();\n                var page = that.viewer.document.pages[number - 1];\n                var data = {};\n                data[that.read.pageField] = number;\n\n                if (!page.geometries.length) {\n                    $.ajax({\n                        type: that.read.type,\n                        url: that.read.url,\n                        data: data,\n                        success: function(data) {\n                            deferred.resolve(JSON.parse(data));\n                        },\n                        error: function(xhr) {\n                            that.viewer._triggerError({\n                                error: xhr.responseText,\n                                message: that.viewer.options.messages.errorMessages.parseError\n                            });\n                        }\n                    });\n                } else {\n                    deferred.resolve(page);\n                }\n\n                return deferred;\n            },\n            downloadFile: function(fileName) {\n                window.location = this.download.url + \"?file=\" + fileName;\n            },\n\n            fromJSON: function(json)\n            {\n                var viewer = this.viewer;\n                viewer._clearPages();\n\n                viewer.document = json;\n                viewer.document.total = viewer.document.pages.length;\n\n                viewer._renderPages();\n                viewer.resize(true);\n\n                viewer.activatePage(1);\n            }\n        });\n\n        extend(kendo, {\n            pdfviewer: {\n                dpl: {\n                    processor: DPLProcessor\n                }\n            }\n        });\n    })(window.kendo.jQuery);\n\n    /* eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\n    function isLoaded() {\n        if (!window.pdfjsLib) {\n            console?.error(`PDF.JS library is required. Make sure that it is properly loaded <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.3.136/pdf.mjs\" type=\"module\"></script>`);\n            return false;\n        }\n\n        if (!window.pdfjsLib?.GlobalWorkerOptions?.workerSrc && !window.pdfjsWorker) {\n            console?.error(`The pdf.worker.mjs script is not loaded. The PDF.JS library will not work correctly.\n    Either load the script:\n    \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.3.136/pdf.worker.mjs\" type=\"module\"></script>\n    \n    Or set it to the GlobalWorkerOptions.workerSrc property:\n    \n    <script type=\"module\">\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.3.136/pdf.worker.mjs';\n    </script>`);\n        return false;\n        }\n\n        return true;\n    }\n\n    kendo.pdfviewer.pdfjs = { lib: window.pdfjsLib };\n\n    (function($, undefined$1) {\n        var Class = kendo.Class,\n            extend = $.extend,\n            parseJSON = JSON.parse,\n            progress = kendo.ui.progress,\n            Class = kendo.Class,\n            OPEN = \"open\";\n\n        var UploadHelper = Class.extend({\n            init: function(viewer) {\n                this.viewer = viewer;\n                this.errorMessages = this.viewer.options.messages.errorMessages;\n                this.upload = this.viewer.processor && this.viewer.processor.upload;\n            },\n            _initUpload: function(uploadElement, extendUploadOptions) {\n                var uploadOptions = extend({\n                    select: this._onSelect.bind(this),\n                    success: this._onSuccess.bind(this),\n                    error: this._onError.bind(this),\n                    complete: this._onComplete.bind(this),\n                    showFileList: false,\n                    multiple: false,\n                    validation: {\n                        allowedExtensions: [\".pdf\"]\n                    }\n                }, extendUploadOptions || {});\n\n                if (this.upload) {\n                    extend(uploadOptions, {\n                        async: {\n                            saveUrl: this.upload.url,\n                            autoUpload: true,\n                            saveField: this.upload.saveField\n                        }\n                    });\n                }\n\n                var upload = (uploadElement || $('<input name=\"files\" accept=\".pdf\" type=\"file\" />')).kendoUpload(uploadOptions).getKendoUpload();\n\n                return upload;\n            },\n            _onComplete: function() {\n                progress(this.viewer.pageContainer, false);\n            },\n            _onSuccess: function(e) {\n                var json = parseJSON(e.response);\n\n                if ($.isPlainObject(json)) {\n                    this.viewer.processor.fromJSON(json);\n                }\n                else {\n                    this.viewer._triggerError({\n                        error: json,\n                        message: this.errorMessages.parseError\n                    });\n                }\n            },\n            _onError: function(e) {\n                this.viewer._triggerError({\n                    error: e.XMLHttpRequest.responseText,\n                    message: this.errorMessages.notSupported\n                });\n            },\n            _onSelect: function(e) {\n                var that = this;\n                var fileToUpload = e.files[0];\n\n                progress(that.viewer.pageContainer, true);\n\n                if (that.viewer.trigger(OPEN, { file: fileToUpload }) || that.upload) {\n                    return;\n                } else if (fileToUpload.extension.toLowerCase() !== \".pdf\") {\n                    that.viewer._triggerError({\n                        error: fileToUpload,\n                        message: that.errorMessages.notSupported\n                    });\n                    return;\n                }\n\n                var reader = new FileReader();\n                reader.onload = function(e) {\n                    var document = e.target.result;\n                    that.viewer.fromFile(document);\n                };\n                reader.onerror = function() {\n                    that.viewer._triggerError({\n                        error: fileToUpload,\n                        message: that.errorMessages.parseError\n                    });\n                };\n\n                reader.readAsArrayBuffer(fileToUpload.rawFile);\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            UploadHelper: UploadHelper\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var extend = $.extend,\n            noop = $.noop,\n            drawing = kendo.drawing,\n            Group = drawing.Group,\n            Surface = drawing.Surface,\n            RENDER = \"render\",\n            Class = kendo.Class,\n            UploadHelper = kendo.pdfviewer.UploadHelper,\n\n            DEFAULT_DPR = 2;\n\n        var geometryTypes = {\n            Path: \"path\",\n            MultiPath: \"multipath\",\n            Rect: \"rect\",\n            Image: \"image\",\n            Text: \"text\"\n        };\n\n        var BLANK_PAGE_TEMPLATE = (dropzoneId) => `<div class=\"k-page k-blank-page\">\n        <div id=\"${dropzoneId}\" class=\"k-external-dropzone\">\n            <div class=\"k-dropzone-inner\">\n                <span class=\"k-dropzone-icon k-icon k-svg-icon k-icon-xxxl k-svg-i-upload\">\n                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                        <path d=\"M32 384v96h448v-96H32zm192-64h64V192h96L256 32 128 192h96v128z\"></path>\n                    </svg>\n                </span>\n                <span class=\"k-dropzone-hint\">Drag and drop files here to upload</span>\n            </div>\n        </div>\n        <input name=\"files\" accept=\".pdf\" type=\"file\" ref-pdfviewer-blank-page-upload>\n    </div>`;\n\n        var Page = Class.extend({\n            init: function(options, viewer) {\n                this.viewer = viewer;\n                this.processor = options.processor;\n                this.options = options;\n                this.pageNumber = options.number;\n\n                this.element = $(\"<div class='k-page' />\");\n                this.element.attr(kendo.attr(\"number\"), this.pageNumber);\n\n                this._updatePageSize(options);\n                this.width = options.width;\n                this.height = options.height;\n            },\n            resize: function(ratio) {\n                var pageElement = this.element;\n\n                this._updatePageSize({\n                    width: Math.min(pageElement.width() * ratio, this.width),\n                    height: Math.min(pageElement.height() * ratio, this.height)\n                });\n            },\n            _updatePageSize: function(size) {\n                this.element\n                        .width(size.width)\n                        .height(size.height);\n            },\n            destroy: function() {\n                kendo.destroy(this.element);\n            },\n            render: noop\n        });\n\n        var BlankPage = Page.extend({\n            init: function(options, viewer) {\n                this.viewer = viewer;\n                this.options = options;\n                this._externalDropZoneId = `${viewer.element.attr(\"id\")}-external-dropzone`;\n                this.element = $(BLANK_PAGE_TEMPLATE(this._externalDropZoneId));\n                this._uploadHelper = new UploadHelper(viewer);\n            },\n            _initUpload: function() {\n                this._upload = this._uploadHelper._initUpload(this.element.find(\"input[ref-pdfviewer-blank-page-upload]\"), {\n                    dropZone: `#${this._externalDropZoneId}`,\n                    showFileList: false,\n                    async: {\n                        autoUpload: false,\n                        saveUrl: \"save\"\n                    }\n                });\n            },\n            resize: noop,\n            _updatePageSize: noop,\n            destroy: function() {\n                if (this._upload) {\n                    this._upload.destroy();\n                }\n\n                kendo.destroy(this.element);\n            },\n            render: noop\n        });\n\n        var DPLPage = Page.extend({\n            draw: function() {\n                var that = this,\n                    geometries = that.options.geometries;\n\n                that.group = new Group();\n                that.surface.draw(that.group);\n\n                that._drawGeometries(geometries);\n\n                that.viewer.trigger(RENDER, { page: this });\n                kendo.ui.progress(that.element, false);\n            },\n            load: function() {\n                var that = this;\n\n                if (that.loaded || !that.processor)\n                {\n                    return;\n                }\n\n                that.processor.fetchPageData(that.pageNumber).then(function(data) {\n                    that.options = data;\n                    that._initSurface();\n                    that.draw();\n                });\n\n                that.loaded = true;\n            },\n            _initSurface: function() {\n                var size = {\n                    width: this.element.width(),\n                    height: this.element.height()\n                };\n                var surfaceOptions = extend({ width: this.width, height: this.height }, this.viewer.options.view);\n                this.surface = new Surface(this.element, surfaceOptions);\n                this._updatePageSize(size);\n            },\n            _drawGeometries: function(geometries) {\n                var that = this,\n                    kGeometry;\n\n                if (!geometries) {\n                    return;\n                }\n\n                for (var i = 0; i <= geometries.length; i++) {\n                    var geometry = geometries[i];\n\n                    if (!geometry) {\n                        continue;\n                    }\n\n                    switch (geometry.type) {\n                        case geometryTypes.Path:\n                        case geometryTypes.MultiPath:\n                            kGeometry = that._drawPath(geometry);\n                            break;\n                        case geometryTypes.Rect:\n                            kGeometry = that._drawRect(geometry);\n                            break;\n                        case geometryTypes.Image:\n                            kGeometry = that._drawImage(geometry);\n                            break;\n                        case geometryTypes.Text:\n                            kGeometry = that._drawText(geometry);\n                            break;\n                        default:\n                            kGeometry = null;\n                            break;\n                    }\n\n                    if (kGeometry)\n                    {\n                        that.group.append(kGeometry);\n                    }\n                }\n            },\n            _drawRect: function(geometry)\n            {\n                var rectGeo = new kendo.geometry.Rect(geometry.point, geometry.size);\n\n                return new drawing.Rect(rectGeo, {\n                    transform: this._getMatrix(geometry.transform),\n                    fill: geometry.fillOptions,\n                    stroke: geometry.strokeOptions\n                });\n            },\n\n            _drawImage: function(geometry)\n            {\n                var imageRect = new kendo.geometry.Rect(geometry.point, geometry.size);\n                return new drawing.Image(geometry.src, imageRect, {\n                    transform: this._getMatrix(geometry.transform)\n                });\n            },\n\n            _drawText: function(geometry)\n            {\n                var options = {\n                    transform: this._getMatrix(geometry.transform),\n                    stroke: geometry.strokeOptions,\n                    fill: geometry.fillOptions,\n                    font: geometry.font\n                };\n                return new kendo.drawing.Text(geometry.content, geometry.point, options);\n            },\n\n            _drawPath: function(geometry)\n            {\n                var options = {\n                    transform: this._getMatrix(geometry.transform),\n                    stroke: geometry.strokeOptions,\n                    fill: geometry.fillOptions\n                };\n                var path = new drawing.MultiPath(options);\n\n                for (var i = 0; i < geometry.paths.length; i++) {\n                    var subPath = geometry.paths[i];\n\n                    if (!subPath.segments)\n                    {\n                        return;\n                    }\n\n                    path.moveTo.apply(path, subPath.point);\n\n                    for (var j = 0; j < subPath.segments.length; j++) {\n                        var segment = subPath.segments[j];\n                        var drawAction = segment.points.length === 1 ? path.lineTo : path.curveTo;\n                        drawAction.apply(path, segment.points);\n                    }\n\n                    if (subPath.closed) {\n                        path.close();\n                    }\n                }\n\n                return path;\n            },\n\n            _getMatrix: function(transform) {\n                var matrix = Object.create(kendo.geometry.Matrix.prototype);\n                kendo.geometry.Matrix.apply(matrix, transform);\n                return matrix;\n            }\n        });\n\n        extend(kendo.pdfviewer.dpl, {\n            geometryTypes: geometryTypes,\n            Page: DPLPage\n        });\n        extend(kendo.pdfviewer, {\n            BlankPage: BlankPage\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            parseJSON = JSON.parse,\n            progress = kendo.ui.progress,\n            Class = kendo.Class,\n            UploadHelper = kendo.pdfviewer.UploadHelper,\n            OPEN = \"open\",\n            ZOOMSTART = \"zoomStart\",\n            ZOOMEND = \"zoomEnd\";\n\n        var Command = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.viewer = options.viewer;\n                this.errorMessages = this.viewer.options.messages.errorMessages;\n            }\n        });\n\n        var OpenCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n                this._uploadHelper = new UploadHelper(this.viewer);\n            },\n            exec: function() {\n                this.viewer._upload = this.viewer._upload || this._uploadHelper._initUpload();\n                this.viewer._upload.element.click();\n            },\n        });\n\n        var PageChangeCommand = Command.extend({\n            exec: function() {\n                var targetPage = this.options.value,\n                    viewer = this.viewer,\n                    current, total;\n\n                if (isNaN(targetPage)) {\n                    current = viewer._pageNum;\n                    total = viewer.document.total || viewer.document.numPages;\n\n                    switch (targetPage) {\n                        case \"first\": targetPage = 1;\n                            break;\n                        case \"prev\": targetPage = current > 1 ? current - 1 : 1;\n                            break;\n                        case \"next\": targetPage = current < total ? current + 1 : total;\n                            break;\n                        case \"last\": targetPage = total;\n                            break;\n                    }\n                } else {\n                    targetPage = Number(targetPage);\n                }\n\n                viewer.activatePage(targetPage, false);\n            }\n        });\n\n        var DownloadCommand = Command.extend({\n            exec: function() {\n                const that = this;\n                if (!that.viewer.document) {\n                    that.viewer._triggerError({\n                        message: that.errorMessages.notFound\n                    });\n                    return;\n                }\n\n                const fileName = (that.viewer.document.info && that.viewer.document.info.title) ||\n                that.viewer.options.messages.defaultFileName;\n\n                if (that.viewer._isDPLProcessor()) {\n                    that.viewer.processor.downloadFile(fileName);\n                } else {\n                    kendo_pdfviewerCommon_cmn_chunk_js.d(\n                        { pdf: this.viewer.document, error: (e) => { that.viewer._triggerError({ message: e.message }); } },\n                        fileName,\n                        {},\n                        (blob, fileName, saveOptions) => false\n                    );\n                }\n            }\n        });\n\n        var ExportCommand = Command.extend({\n            init: function(options) {\n                options = $.extend(options, this.options);\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var dialog = (this.viewer._saveDialog || this._initDialog());\n\n                dialog._updateModel({\n                    pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                    page: this.viewer.options.page\n                });\n\n                dialog.open();\n            },\n            apply: function(viewModel) {\n                var extension = viewModel.extension;\n\n                if (extension === \".png\") {\n                    this.viewer.exportImage(viewModel);\n                } else if (extension === \".svg\") {\n                    this.viewer.exportSVG(viewModel);\n                }\n            },\n            _initDialog: function() {\n                this.viewer._saveDialog = new kendo.pdfviewer.dialogs.ExportAsDialog({\n                    apply: this.apply.bind(this),\n                    pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                    messages: this.viewer.options.messages\n                });\n                return this.viewer._saveDialog;\n            }\n        });\n\n        var EnableSelectionCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    viewer = that.viewer;\n\n                    viewer._toggleSelection(true);\n            }\n        });\n\n        var EnablePanCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    viewer = that.viewer;\n\n                    viewer._toggleSelection(false);\n            }\n        });\n\n        const OpenSearchCommand = Command.extend({\n            init: function(options) {\n                const that = this;\n\n                that.viewer = options.viewer;\n\n                if (!that.viewer.searchDialog) {\n                    that.viewer.searchDialog = new kendo.pdfviewer.dialogs.SearchDialog({\n                        pageContainer: that.viewer.pageContainerWrapper,\n                        position: {\n                            top: that.viewer.pageContainer.offset().top,\n                            left: that.viewer.pageContainer.offset().left\n                        },\n                        messages: that.viewer.options.messages.dialogs.search,\n                        open: that._open.bind(that),\n                        next: that._next.bind(that),\n                        prev: that._prev.bind(that),\n                        close: that._close.bind(that)\n                    });\n                }\n\n                Command.fn.init.call(that, options);\n            },\n            exec: function() {\n                const that = this;\n\n                that.viewer.searchDialog.open();\n            },\n            _open: function() {\n                const that = this;\n\n                if (!that.searchService) {\n                    Promise.all(that.viewer._loadAllPages()).then(() => {\n                        // Pages, On success, On error\n                        that.searchService = new kendo_pdfviewerCommon_cmn_chunk_js.S({\n                            textContainers: that.viewer.pageContainer.find('.k-text-layer').get() || []\n                        });\n\n                        that.changeHandler = that._change.bind(that);\n                        that.viewer.searchDialog.searchModel.bind(\"change\", that.changeHandler);\n                    });\n                }\n            },\n            _close: function() {\n                const that = this;\n                that.searchService.destroy();\n                that.searchService = null;\n                that.viewer.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                that.viewer.searchDialog.searchModel.unbind(\"change\", that.changeHandler);\n                that.matches = [];\n                that.matchIndex = null;\n                that._updateSearchModel();\n            },\n            _change: function(ev) {\n                const that = this,\n                    text = that.viewer.searchDialog.searchModel[\"searchText\"],\n                    matchCase = that.viewer.searchDialog.searchModel[\"matchCase\"];\n\n                if (ev.field === \"searchText\" || ev.field === \"matchCase\") {\n                    that.matches = that.searchService.search({ text: text, matchCase: matchCase });\n                    that.matchIndex = that.matches.length ? 1 : 0;\n                    that._updateSearchModel();\n                }\n            },\n            _next: function() {\n                const that = this,\n                    pdfScroller = that.viewer.pdfScroller;\n\n                kendo_pdfviewerCommon_cmn_chunk_js.g({ search: that.searchService, scroller: pdfScroller });\n                that.matchIndex = that.matchIndex + 1 > that.matches.length ? 1 : that.matchIndex + 1;\n                that._updateSearchModel();\n            },\n            _prev: function() {\n                const that = this,\n                    pdfScroller = that.viewer.pdfScroller;\n\n                kendo_pdfviewerCommon_cmn_chunk_js.a({ search: that.searchService, scroller: pdfScroller });\n                that.matchIndex = that.matchIndex - 1 < 1 ? that.matches.length : that.matchIndex - 1;\n                that._updateSearchModel();\n            },\n            _updateSearchModel: function() {\n                const that = this,\n                    model = that.viewer.searchDialog.searchModel;\n\n                if (that.matches && that.matches.length) {\n                    model.set(\"matches\", that.matches.length);\n                    model.set(\"matchIndex\", that.matchIndex);\n                } else {\n                    model.set(\"searchText\", \"\");\n                    model.set(\"matches\", 0);\n                    model.set(\"matchIndex\", 0);\n                }\n            },\n            _closeDialog: function() {\n                const that = this;\n                that.viewer.searchDialog.close();\n            }\n        });\n\n        var ZoomCommand = Command.extend({\n            exec: function() {\n                const that = this,\n                    options = that.options,\n                    viewer = that.viewer;\n                let scale = options.value || options.scale;\n\n                if (viewer.processingLib === \"dpl\") {\n                    return;\n                }\n\n                scale = that._calculateZoom();\n\n                if (!scale) {\n                    return;\n                }\n\n                viewer.zoomScale = scale;\n\n                viewer._setPageContainerScaleFactor(scale);\n\n                if (that.viewer.document) {\n                    kendo_pdfviewerCommon_cmn_chunk_js.r({\n                        pdfDoc: viewer.document,\n                        zoom: scale,\n                        dom: viewer.pageContainer[0],\n                        rootElement: viewer.element[0],\n                        loadOnDemand: true,\n                        done: (pdfPages) => {\n                            const currentPageIndex = kendo_pdfviewerCommon_cmn_chunk_js.c(viewer.element[0]);\n                            viewer._pageRenderPromise(pdfPages[currentPageIndex], true);\n                            that._triggerZoomEnd(scale);\n                        },\n                        error: (e) => {\n                            that._triggerZoomEnd(scale);\n                        }\n                    });\n                }\n            },\n\n            _calculateZoom: function() {\n                var options = this.options,\n                    viewer = this.viewer,\n                    viewerOptions = viewer.options,\n                    pageContainer = viewer.pageContainer,\n                    scale = options.value || options.scale,\n                    scaleValue = scale,\n                    preventZoom;\n\n                viewer._allowResize = false;\n                viewer._autoFit = false;\n\n                if (options.zoomIn) {\n                    scaleValue = scale = viewer.zoomScale + viewerOptions.zoomRate;\n                } else if (options.zoomOut) {\n                    scaleValue = scale = viewer.zoomScale - viewerOptions.zoomRate;\n                } else if (scale === \"auto\") {\n                    viewer._allowResize = true;\n                    scaleValue = viewer._autoZoomScale;\n                } else if (typeof scale === \"string\" && !kendo.parseFloat(scale)) {\n                    scaleValue = kendo_pdfviewerCommon_cmn_chunk_js.b(0, scale, viewer.zoomScale, pageContainer[0]);\n                } else if (scale && scale.toString().match(/^[0-9]+%?$/)) {\n                    scale = parseInt(scale.replace('%', ''), 10) / 100;\n                    scaleValue = scale;\n                } else {\n                    preventZoom = isNaN(scale);\n                }\n\n                if (!preventZoom) {\n                    preventZoom = scale < viewerOptions.zoomMin || scale > viewerOptions.zoomMax;\n                }\n\n                if (preventZoom || viewer.trigger(ZOOMSTART, { scale: scale })) {\n                    return;\n                }\n\n                if (options.updateComboBox && viewer.toolbar)\n                {\n                    viewer._updateZoomComboBox(scale);\n                }\n\n                return scaleValue;\n            },\n\n            _triggerZoomEnd: function(scale) {\n                var that = this,\n                    viewer = that.viewer;\n\n                viewer.trigger(ZOOMEND, { scale: scale });\n            }\n        });\n\n        var PrintCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                const that = this;\n\n                 if (!that.viewer.document) {\n                    that.viewer._triggerError({\n                        message: this.errorMessages.notFound\n                    });\n                    return;\n                }\n\n                progress(that.viewer.pageContainer, true);\n                Promise.all(that.viewer._loadAllPages()).then(() => {\n                    // Pages, On success, On error\n                    kendo_pdfviewerCommon_cmn_chunk_js.p(that.viewer.pages, that.onPrintComplete.bind(that), that.onPrintError.bind(that));\n                });\n            },\n            onPrintComplete: function() {\n                const that = this;\n                progress(that.viewer.pageContainer, false);\n            },\n            onPrintError: function() {\n                const that = this;\n                progress(that.viewer.pageContainer, false);\n\n                that.viewer._triggerError({\n                    message: that.errorMessages.popupBlocked\n                });\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            OpenCommand: OpenCommand,\n            PageChangeCommand: PageChangeCommand,\n            DownloadCommand: DownloadCommand,\n            EnableSelectionCommand: EnableSelectionCommand,\n            EnablePanCommand: EnablePanCommand,\n            ExportCommand: ExportCommand,\n            PrintCommand: PrintCommand,\n            OpenSearchCommand: OpenSearchCommand,\n            ZoomCommand: ZoomCommand\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n            Class = kendo.Class,\n            Draggable = kendo.ui.Draggable,\n            outerWidth = kendo._outerWidth,\n            EXTENSIONS = {\n                svg: \".svg\",\n                png: \".png\"\n            },\n            keys = kendo.keys;\n\n        var ErrorDialog = Class.extend({\n            init: function(options) {\n                this.options = extend(options, {\n                    actions: [{\n                        text: options.messages.dialogs.okText\n                    }]\n                });\n                this._dialog = $(\"<div />\")\n                        .kendoDialog(this.options)\n                        .getKendoDialog();\n            },\n            open: function() {\n                this._dialog.center().open();\n            }\n        });\n\n        var ExportAsDialog = Class.extend({\n            init: function(options) {\n                this.options = extend(options, this.options, {\n                    fileFormats: [{\n                        description: options.messages.dialogs.exportAsDialog.png,\n                        extension: EXTENSIONS.png\n                    }, {\n                        description: options.messages.dialogs.exportAsDialog.svg,\n                        extension: EXTENSIONS.svg\n                    }],\n                    title: options.messages.dialogs.exportAsDialog.title,\n                    open: function() {\n                        this.center();\n                    }\n                });\n                this._initializeDialog();\n                return this;\n            },\n            options: {\n                extension: EXTENSIONS.png,\n                autoFocus: true,\n                resizable: false,\n                modal: {\n                    preventScroll: true\n                },\n                width: \"90%\",\n                maxWidth: 520,\n                template: ({ messages, total }) =>\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.fileName)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                        \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input class='k-input-inner' data-bind='value: name' /></span>\" +\n                    \"</div>\" +\n                    \"<div>\" +\n                        `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.saveAsType)}:</label></div>` +\n                        \"<div class='k-edit-field'>\" +\n                        \"<select data-role='dropdownlist' class='k-file-format' \" +\n                            \"data-text-field='description' \" +\n                            \"data-value-field='extension' \" +\n                            \"data-bind='value: extension, source: fileFormats'></select>\" +\n                        \"</div>\" +\n                    \"</div>\" +\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.page)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                        `<input data-role='numerictextbox' data-format='n0' data-min='1' data-max='${encode(total)}' data-bind='value: page' />` +\n                    \"</div>\" +\n                    \"<div class='k-actions'>\" +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-bind='click: apply'><span class='k-button-text'>${encode(messages.save)}</span></button>` +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-bind='click: close'><span class='k-button-text'>${encode(messages.cancel)}</span></button>` +\n                    \"</div>\"\n            },\n            _updateModel: function(options) {\n                if (options.pagesCount) {\n                    this.viewModel.set(\"pagesCount\", options.pagesCount);\n                }\n                if (options.page) {\n                    this.viewModel.set(\"page\", options.page);\n                }\n            },\n            _initializeDialog: function() {\n                var that = this;\n                var options = that.options;\n                var dialogMessages = options.messages.dialogs;\n                var dialog = $(\"<div class='k-pdf-viewer-window k-action-window k-popup-edit-form' />\")\n                        .append(kendo.template(options.template)({\n                            total: options.pagesCount,\n                            messages: dialogMessages\n                        }))\n                        .kendoWindow(options)\n                        .getKendoWindow();\n\n                that.viewModel = kendo.observable({\n                    title: dialogMessages.exportAsDialog.title,\n                    name: dialogMessages.exportAsDialog.defaultFileName,\n                    extension: options.extension,\n                    fileFormats: options.fileFormats,\n                    pagesCount: options.pagesCount,\n                    page: 1,\n                    apply: that.apply.bind(this),\n                    close: function() {\n                        dialog.close();\n                    }\n                });\n\n                that._dialog = dialog;\n\n                kendo.bind(dialog.element, that.viewModel);\n                return dialog;\n            },\n            open: function() {\n                this._dialog.center().open();\n            },\n            apply: function() {\n                this._dialog.close();\n                this.options.apply({\n                    fileName: this.viewModel.name + this.viewModel.extension,\n                    extension: this.viewModel.extension,\n                    page: this.viewModel.page\n                });\n            }\n        });\n\n        var SearchDialog = Class.extend({\n            init: function(options) {\n                var that = this;\n                that.options = extend({}, options, that.options);\n            },\n            options: {\n                resizable: false,\n                template: ({ messages }) => '<div class=\"k-search-panel k-pos-sticky k-top-center\">' +\n                              `<button aria-label='${encode(messages.dragHandle)}' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-search-dialog-draghandle'>${kendo.ui.icon({ icon: \"handle-drag\", iconClass: \"k-button-icon\" })}</button>` +\n                              \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                                  `<input class='k-search-dialog-input k-input-inner' data-bind='value: boundValue, events: { keyup: onKeyup, input: onInput }' aria-label='${encode( messages.inputLabel)}' title='${encode(messages.inputLabel)}' />` +\n                                  `<span class='k-input-suffix'><button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-match-case-button k-match-case-button' data-bind='css: {k-selected: matchCase}, click: matchCaseClick' aria-label='${encode(messages.matchCase)}' title='${encode(messages.matchCase)}'>${kendo.ui.icon({ icon: \"convert-lowercase\", iconClass: \"k-button-icon\" })}</button></span>` +\n                              \"</span>\" +\n                              `<span class='k-search-matches'><span data-bind='text: matchIndex'></span> ${encode(messages.of)} <span data-bind='text: matches'></span></span>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: prev' aria-label='${encode(messages.previous)}' title='${encode(messages.previous)}'>${kendo.ui.icon({ icon: \"arrow-up\", iconClass: \"k-button-icon\" })}</button>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: next' aria-label='${encode(messages.next)}' title='${encode(messages.next)}'>${kendo.ui.icon({ icon: \"arrow-down\", iconClass: \"k-button-icon\" })}</button>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: close' aria-label='${encode(messages.close)}' title='${encode(messages.close)}'>${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}</button>` +\n                          \"</div>\"\n            },\n            open: function() {\n                var that = this;\n\n                if (!that.dialog) {\n                    that._initializeDialog();\n                }\n\n                that.options.open();\n                that._showSearchDialog();\n            },\n            close: function() {\n                var that = this;\n                that.options.close();\n                that._hideSearchDialog();\n            },\n            _showSearchDialog: function() {\n                var that = this;\n\n                that.dialog.css(\"left\",`${(that.options.pageContainer.innerWidth() / 2) - (outerWidth(that.dialog, true) / 2)}px`);\n\n                that.dialog.kendoStop().kendoAnimate({\n                    effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                    duration: 350,\n                    complete: function(ev) {\n                        that.dialog.find(\".k-search-dialog-input\").trigger(\"focus\");\n                    }\n                });\n            },\n            _hideSearchDialog: function() {\n                var that = this;\n\n                that.dialog.kendoStop().kendoAnimate({\n                    effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                    duration: 350,\n                    hide: true\n                });\n            },\n            _initializeDialog: function() {\n                var that = this;\n                var template = kendo.template(that.options.template);\n                var dialogElm = $(template({\n                    messages: that.options.messages\n                }));\n\n                that.options.pageContainer.prepend(dialogElm);\n                that.dialog = dialogElm;\n\n                that._draggable = new Draggable(dialogElm, {\n                    filter: \".k-search-dialog-draghandle\",\n                    axis: \"x\",\n                    dragstart: function(e) {\n                        var wnd = that.dialog;\n                        var containment = that.options.pageContainer;\n\n                        wnd.startPosition = {\n                            left: e.x.client - kendo.getOffset(wnd, \"position\").left,\n                        };\n\n                        if (!containment) {\n                            return null;\n                        }\n\n                        containment._innerWidth = containment.innerWidth();\n\n                        if (parseInt(containment._innerWidth, 10) > containment[0].clientWidth) {\n                            containment._innerWidth -= kendo.support.scrollbar();\n                        }\n\n                        wnd.maxLeft = containment._innerWidth - outerWidth(wnd, true);\n                    },\n                    drag: function(e) {\n                        var wnd = that.dialog;\n                        var position = {};\n                        var left;\n\n                        left = e.x.client - wnd.startPosition.left;\n\n                        if (left && isNaN(left) && left.toString().indexOf(\"px\") < 0) {\n                            position.left = left;\n                        } else {\n                            position.left = Math.max(\n                                Math.min(parseInt(left, 10), parseInt(wnd.maxLeft, 10)),\n                                0\n                            );\n                        }\n\n                        wnd.css(position);\n                    },\n                });\n\n                that._draggable.userEvents.stopPropagation = false;\n\n                that.searchModel = kendo.observable({\n                    boundValue: \"\",\n                    searchText: \"\",\n                    matchCase: false,\n                    matchIndex: 0,\n                    matches: 0,\n                    matchCaseClick: function() {\n                        this.set(\"matchCase\", !this.matchCase);\n                    },\n                    next: that.options.next,\n                    prev: that.options.prev,\n                    close: function() {\n                        this.set(\"boundValue\", \"\");\n                        that.close();\n                    },\n                    onKeyup: function(ev) {\n                        var key = ev.keyCode;\n                        var navigationFn = ev.shiftKey ? this.prev : this.next;\n\n                        if (key === keys.ENTER) {\n                            navigationFn();\n                            ev.preventDefault();\n                        } else if (key == keys.ESC) {\n                            this.close();\n                        }\n                    },\n                    onInput: function(ev) {\n                        this.set(\"searchText\", ev.target.value);\n                    }\n                });\n\n                kendo.bind(dialogElm, that.searchModel);\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            dialogs: {\n                ErrorDialog: ErrorDialog,\n                ExportAsDialog: ExportAsDialog,\n                SearchDialog: SearchDialog\n            }\n        });\n    })(window.kendo.jQuery);\n\n    const __meta__ = {\n        id: \"pdfviewer\",\n        name: \"PDFViewer\",\n        category: \"web\",\n        description: \"PDFViewer to display pdfs in the browser\",\n        depends: [\"core\", \"window\", \"dialog\", \"toolbar\", \"draganddrop\", \"upload\", \"combobox\", \"drawing\", \"binder\", \"dropdownlist\", \"numerictextbox\", \"textbox\", \"pager\", \"pdfviewer-common.cmn.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var NS = \".kendoPDFViewer\",\n            kendo = window.kendo,\n            ui = kendo.ui,\n            extend = $.extend,\n            drawing = kendo.drawing,\n            keys = $.extend({ PLUS: 187, MINUS: 189, ZERO: 48, NUMPAD_ZERO: 96 }, kendo.keys),\n            Page,\n            BlankPage = kendo.pdfviewer.BlankPage,\n            Widget = ui.Widget,\n            progress = kendo.ui.progress,\n            SCROLL = \"scroll\",\n            RENDER = \"render\",\n            OPEN = \"open\",\n            ERROR = \"error\",\n            KEYDOWN = \"keydown\" + NS,\n            MOUSEWHEEL = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n            UPDATE = \"update\",\n            PAGE_CHANGE = \"pagechange\",\n            ZOOMSTART = \"zoomStart\",\n            ZOOMEND = \"zoomEnd\",\n            ZOOMCOMMAND = \"ZoomCommand\",\n            WHITECOLOR = \"#ffffff\",\n            TABINDEX = \"tabindex\",\n            CLICK = \"click\",\n            CHANGE = \"change\",\n            TOGGLE = \"toggle\",\n            DISABLED = 'k-disabled',\n            PROCESSORS = {\n                pdfjs: \"pdfjs\",\n                dpl: \"dpl\"\n            },\n            styles = {\n                viewer: \"k-pdf-viewer\",\n                scroller: \"k-canvas k-pdf-viewer-canvas k-pos-relative k-overflow-auto\",\n                enableTextSelection: \"k-enable-text-select\",\n                enablePanning: \"k-enable-panning\",\n                highlightClass: \"k-search-highlight\",\n                highlightMarkClass: \"k-search-highlight-mark\",\n                charClass: \"k-text-char\"\n            },\n            PREDEFINED_ZOOM_VALUES = {\n                auto: \"auto\",\n                actual: \"ActualWidth\",\n                fitToWidth: \"FitToWidth\",\n                fitToPage: \"FitToPage\"\n            };\n\n        var PDFViewer = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, kendo.deepExtend({}, this.options, options));\n\n                that._processMessages();\n\n                that._wrapper();\n\n                if (that.options.toolbar) {\n                    that._renderToolbar();\n                }\n\n                that._initProcessor(options || {});\n                that._renderPageContainer();\n\n                if (that._isDPLProcessor()) {\n                    that._loadDPLDocument();\n                } else {\n                    that._loadPdfJSDocument();\n                }\n\n                kendo.notify(that, kendo.ui);\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.wrapper[0]);\n                }\n            },\n\n            events: [\n                RENDER,\n                OPEN,\n                ERROR,\n                ZOOMSTART,\n                ZOOMEND\n            ],\n\n            options: {\n                name: \"PDFViewer\",\n                view: {\n                    type: \"canvas\"\n                },\n                pdfjsProcessing: {\n                    file: null,\n                    loadOnDemand: true\n                },\n                dplProcessing: {\n                    read: {\n                        url: null,\n                        type: \"GET\",\n                        dataType: \"json\",\n                        pageField: \"pageNumber\"\n                    },\n                    upload: {\n                        url: null,\n                        saveField: \"file\"\n                    },\n                    download: {\n                        url: null\n                    },\n                    loadOnDemand: false\n                },\n                toolbar: {\n                    items: []\n                },\n                width: 1000,\n                height: 1200,\n                page: 1,\n                defaultPageSize: {\n                    width: 794,\n                    height: 1123\n                },\n                scale: null,\n                zoomMin: 0.5,\n                zoomMax: 4,\n                zoomRate: 0.25,\n                messages: {\n                    defaultFileName: \"Document\",\n                    toolbar: {\n                        zoom: {\n                            zoomLevel: \"zoom level\",\n                            zoomOut: \"Zoom Out\",\n                            zoomIn: \"Zoom In\",\n                            actualWidth: \"Actual Width\",\n                            autoWidth: \"Automatic Width\",\n                            fitToWidth: \"Fit to Width\",\n                            fitToPage: \"Fit to Page\"\n                        },\n                        open: \"Open\",\n                        exportAs: \"Export\",\n                        download: \"Download\",\n                        print: \"Print\",\n                        toggleSelection: \"Enable Selection\",\n                        togglePan: \"Enable Panning\",\n                        search: \"Search\"\n                    },\n                    errorMessages: {\n                        notSupported: \"Only pdf files allowed.\",\n                        parseError: \"PDF file fails to process.\",\n                        notFound: \"File is not found.\",\n                        popupBlocked: \"Popup is blocked.\"\n                    },\n                    dialogs: {\n                        exportAsDialog: {\n                            title: \"Export...\",\n                            defaultFileName: \"Document\",\n                            pdf: \"Portable Document Format (.pdf)\",\n                            png: \"Portable Network Graphics (.png)\",\n                            svg: \"Scalable Vector Graphics (.svg)\",\n                            labels: {\n                                fileName: \"File name\",\n                                saveAsType: \"Save as\",\n                                page: \"Page\"\n                            }\n                        },\n                        okText: \"OK\",\n                        save: \"Save\",\n                        cancel: \"Cancel\",\n                        search: {\n                            inputLabel: \"Search Text\",\n                            matchCase: \"Match Case\",\n                            next: \"Next Match\",\n                            previous: \"Previous Match\",\n                            close: \"Close\",\n                            of: \"of\",\n                            dragHandle: \"Drag search\"\n                        }\n                    }\n                }\n            },\n\n            defaultTools: {\n                pager: {\n                    type: \"component\",\n                    name: \"pager\",\n                    overflow: \"never\",\n                    component: \"Pager\",\n                    element: '<div></div>',\n                    componentOptions: {\n                        navigatable: true,\n                        _isToolbarItem: true,\n                    }\n                },\n                spacer: { type: \"spacer\" },\n                zoomInOut: {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    buttons: [\n                        { type: \"button\", icon: \"zoom-out\", name: \"zoomOut\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomOut\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                        { type: \"button\", icon: \"zoom-in\", name: \"zoomIn\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomIn\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                    ]\n                },\n                zoom: {\n                    type: \"component\",\n                    name: \"zoom\",\n                    command: \"ZoomCommand\",\n                    overflow: \"never\",\n                    component: \"ComboBox\",\n                    data: [50, 100, 150, 200, 300, 400],\n                    componentOptions: {\n                        enable: false,\n                        dataTextField: \"text\",\n                        dataValueField: \"percent\",\n                        valuePrimitive: true,\n                        clearOnEscape: false,\n                        commandOn: \"change\",\n                        fillMode: 'flat',\n                    }\n                },\n                toggleSelection: {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    buttons: [\n                        {\n                            togglable: true,\n                            command: \"EnableSelectionCommand\",\n                            icon: \"pointer\",\n                            showText: \"overflow\",\n                            name: \"toggleSelection\",\n                            group: \"toggle-pan\",\n                            fillMode: \"flat\"\n                        }, {\n                            togglable: true,\n                            command: \"EnablePanCommand\",\n                            icon: \"hand\",\n                            showText: \"overflow\",\n                            name: \"togglePan\",\n                            group: \"toggle-pan\",\n                            selected: true,\n                            fillMode: \"flat\"\n                        }\n                    ]\n                },\n                spacer2: { type: \"spacer\" },\n                search: {\n                    type: \"button\",\n                    command: \"OpenSearchCommand\",\n                    icon: \"search\",\n                    name: \"search\",\n                    showText: \"overflow\",\n                    enable: false,\n                    fillMode: \"flat\"\n                },\n                open: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"open\",\n                    icon: \"folder-open\",\n                    command: \"OpenCommand\",\n                    fillMode: \"flat\"\n                },\n                download: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"download\",\n                    icon: \"download\",\n                    command: \"DownloadCommand\",\n                    enable: false,\n                    fillMode: \"flat\"\n                },\n                print: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"print\",\n                    icon: \"print\",\n                    command: \"PrintCommand\",\n                    enable: false,\n                    fillMode: \"flat\"\n                }\n            },\n\n            exportAsTool: {\n                exportAs: { type: \"button\", showText: \"overflow\", name: \"exportAs\", icon: \"image-export\", command: \"ExportCommand\", fillMode: \"flat\" }\n            },\n\n\n            _processMessages: function() {\n                var messages = this.options.messages.toolbar,\n                    zoom = messages.zoom;\n\n                if ($.isPlainObject(zoom)) {\n                    this.options.messages.toolbar = $.extend({}, this.options.messages.toolbar, zoom);\n                    this.options.messages.toolbar.zoom = zoom.zoomLevel || this.options.messages.toolbar.zoom;\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options;\n\n                that.wrapper = that.element;\n\n                that.wrapper\n                        .width(options.width)\n                        .height(options.height)\n                        .addClass(styles.viewer)\n                        .on(KEYDOWN, that._keydown.bind(that));\n\n                that._allowResize = that.options.scale === null;\n                that._autoZoomScale = kendo_pdfviewerCommon_cmn_chunk_js.D;\n                that.zoomScale = that.options.scale || that._autoZoomScale;\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n\n                that._pageNum = that.options.page;\n            },\n\n            _keydown: function(e) {\n                var plusShortcuts = [keys.PLUS, keys.NUMPAD_PLUS],\n                    minusShortcuts = [keys.MINUS, keys.NUMPAD_MINUS],\n                    zeroShortcuts = [keys.ZERO, keys.NUMPAD_ZERO],\n                    shouldExecute = false,\n                    args = {\n                        command: ZOOMCOMMAND,\n                        options: { updateComboBox: true }\n                    };\n\n                if (!e.ctrlKey || this._blankPage || this.processingLib === PROCESSORS.dpl) {\n                    return;\n                }\n\n                if (plusShortcuts.includes(e.keyCode)) {\n                    args.options.zoomIn = true;\n                    shouldExecute = true;\n                } else if (minusShortcuts.includes(e.keyCode)) {\n                    args.options.zoomOut = true;\n                    shouldExecute = true;\n                } else if (zeroShortcuts.includes(e.keyCode)) {\n                    args.options.value = kendo_pdfviewerCommon_cmn_chunk_js.D;\n                    shouldExecute = true;\n                }\n\n                if (shouldExecute) {\n                    this.execute(args);\n                    e.preventDefault();\n                }\n            },\n\n            _handlePageChangeEvent: function(event) {\n                const that = this;\n\n                if (!that._pageChangeFromScroll) {\n                    this.activatePage(event.index, false);\n                    that._showPagerInputLabels();\n                }\n\n                delete that._pageChangeFromScroll;\n            },\n\n            _showPagerInputLabels: function() {\n                const that = this;\n                const inputElements = that.pager.element.find(\".k-pager-input\").children();\n                if (inputElements) {\n                    const labels = inputElements.eq(0).add(inputElements.eq(2));\n\n                    if (!$(labels).is(\":visible\")) {\n                        labels.show();\n                    }\n                }\n            },\n\n            _resizePager: function() {\n                const that = this;\n\n                if (!that.pager || !that.pager.options.responsive) {\n                    return;\n                }\n\n                const pagerWidth = kendo._outerWidth(that.pager.element);\n                const visibleToolbarItems = Array.from(that.toolbar.element.children(':not(.k-hidden):not(:has(.k-pager))'));\n                const containerWidth = kendo._outerWidth(that.element);\n\n                let visibleToolsWidth = 0;\n\n                const pattern = /(em|ex|%|px|cm|mm|in|pt|pc|ch|rem|vh|vw|vmin|vmax)$/;\n                const gap = Number(that.toolbar.element.css(\"gap\").replace(pattern,''));\n\n                if (visibleToolbarItems.length > 0) {\n                    let temp = 0;\n                    for (let i = 0; i < visibleToolbarItems.length; i++) {\n                        temp += kendo._outerWidth(visibleToolbarItems[i]) + gap;\n                    }\n                    if (temp) {\n                        visibleToolsWidth = temp;\n                    }\n                }\n\n                const elementsToShrink = that.pager.element.find(\".k-pager-nav\");\n\n                if ((pagerWidth + visibleToolsWidth + gap) > containerWidth) {\n\n                    for (var i = elementsToShrink.length - 1; i >= 0; i--) {\n                        const element = elementsToShrink.eq(i);\n                            element.addClass(\"k-hidden\");\n                    }\n                }\n\n                if ((pagerWidth + visibleToolsWidth + gap) < containerWidth) {\n                    const hidden = that.pager.element.find(\".k-hidden\");\n\n                    for (var i = 0; i < hidden.length; i++) {\n                        const hiddenElement = hidden.eq(i);\n\n                        hiddenElement.removeClass('k-hidden');\n                    }\n                }\n\n                if (that.pager.options.input) {\n                    that._showPagerInputLabels();\n                }\n            },\n\n            _initProcessor: function(options) {\n                var that = this,\n                    processingOptions;\n\n                processingOptions = options.dplProcessing ? that.options.dplProcessing : that.options.pdfjsProcessing;\n                that.processingLib = options.dplProcessing ? PROCESSORS.dpl : PROCESSORS.pdfjs;\n\n                if (that._isDPLProcessor()) {\n                    that.processor = new kendo.pdfviewer[that.processingLib].processor(processingOptions, that);\n                    Page = kendo.pdfviewer[that.processingLib].Page;\n                } else {\n                    isLoaded();\n                }\n            },\n\n            _isDPLProcessor: function() {\n                return this.processingLib === PROCESSORS.dpl;\n            },\n\n            _hasPagerTool: function(tools) {\n                let hasPager = false;\n                let index;\n\n                for (let i = 0; i < tools.length; i++) {\n                    const tool = tools[i];\n                    if (typeof tool === 'string') {\n                        hasPager = tool.toLowerCase() === 'pager';\n                        index = i;\n                    } else {\n                        if (tool.type) {\n                            hasPager = tool.type.toLowerCase() === 'pager';\n                            index = i;\n                        } else if (tool.name) {\n                            hasPager = tool.name.toLowerCase() === 'pager';\n                            if (hasPager) {\n                                delete tool.name;\n                            }\n                            index = i;\n                        }\n                    }\n\n                    if (hasPager) {\n                        break;\n                    }\n                }\n\n                return {\n                    hasPager,\n                    index\n                };\n            },\n\n            _renderToolbar: function() {\n                var that = this,\n                    options = that.options,\n                    toolbarOptions = extend({}, options.toolbar),\n                    tools = toolbarOptions.items && toolbarOptions.items.length ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n\n                const { hasPager, index } = that._hasPagerTool(tools);\n\n\n                tools = that._processTools(tools);\n\n                if (hasPager) {\n                    let pagerMessages = that.options.messages.toolbar.pager;\n\n                    if (pagerMessages) {\n                        if (pagerMessages.of) {\n                            pagerMessages.of = `${pagerMessages.of} {0}`;\n                            if (pagerMessages.pages) {\n                                pagerMessages.of = pagerMessages.of + ' ' + pagerMessages.pages;\n                                delete pagerMessages.pages;\n                            }\n                        }\n                    }\n                    that.defaultTools.pager.componentOptions.messages = pagerMessages;\n                    options.messages.toolbar.pager = \"Pager\";\n\n                    const currentPagerOptions = that.defaultTools.pager.componentOptions;\n                    if (typeof tools[index] !== 'string') {\n                        that.defaultTools.pager.componentOptions = $.extend(tools[index], currentPagerOptions);\n\n                        tools[index] = that.defaultTools.pager;\n                    }\n                }\n\n                toolbarOptions = {\n                    defaultTools: $.extend({}, that.defaultTools, that.exportAsTool),\n                    parentMessages: options.messages.toolbar,\n                    tools: tools,\n                    resizable: true,\n                    fillMode: 'flat'\n                };\n\n                var toolbarElement = $(\"<div />\");\n\n                toolbarElement.appendTo(that.element);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n\n                that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n                if (hasPager) {\n                    that.pager = that.toolbar.element.find('.k-pager');\n                    if (that.pager.length > 0) {\n                        that.pager = that.pager.data('kendoPager');\n                    }\n                    that.pager.bind(CHANGE, that._handlePageChangeEvent.bind(that));\n                }\n\n                that.bind({\n                    update: that._updateToolbar.bind(that)\n                });\n\n                return that.toolbar;\n            },\n\n            _processTools: function(tools) {\n                var that = this,\n                    messages = that.options.messages.toolbar;\n\n                tools = tools.flatMap(t => {\n                    if (t === \"zoom\") {\n                        t = that.defaultTools.zoom;\n                    }\n\n                    if (t.name === \"zoom\") {\n                        t = $.extend({}, that.defaultTools.zoom, t);\n\n                        var zoomLevels = [{\n                            percent: PREDEFINED_ZOOM_VALUES.auto,\n                            text: messages.autoWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.actual,\n                            text: messages.actualWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.fitToWidth,\n                            text: messages.fitToWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.fitToPage,\n                            text: messages.fitToPage\n                        }];\n\n                        // eslint-disable-next-line\n                        var comboOptions = t.data.map(i => { return { percent: i, text: i + \"%\" } });\n                        var value = that.options.scale ? that.options.scale * 100 + \"%\" : \"auto\";\n\n                        zoomLevels = zoomLevels.concat(comboOptions);\n                        t.componentOptions.dataSource = zoomLevels;\n                        t.componentOptions.value = value;\n                    }\n\n                    return t;\n                });\n\n                return tools;\n            },\n\n            _updateToolbar: function(e) {\n                var pageOptions = {\n                        page: e.page || 1,\n                        total: e.total || 1\n                    },\n                    toolbar = this.toolbar,\n                    toolbarEl = toolbar.element,\n                    zoomCombo = toolbarEl.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\"),\n                    toFocus = toolbarEl.find(\".k-focus\");\n\n                if (toFocus.length === 0) {\n                    toFocus = toolbarEl.find(\"[tabindex=0]\").first();\n\n                    if (toFocus.length === 0) {\n                        toFocus = toolbar._getAllItems().first();\n                    }\n                }\n\n                if (zoomCombo) {\n                    zoomCombo.enable(!e.isBlank);\n                    if (e.action === \"zoom\") {\n                        this._updateZoomComboBox(e.zoom);\n                    }\n                }\n\n                if (((e.action === \"pagechange\" && e.updatePager !== false) || e.isBlank) && this.pager) {\n                    if (e.updatePager) {\n                        pageOptions.updatePager = true;\n                    }\n\n                    if (e.pageChangeFromScroll) {\n                        pageOptions.pageChangeFromScroll = true;\n                    }\n\n                    this._updatePager(pageOptions);\n                }\n\n                this._updateOnBlank(e.isBlank);\n\n                toolbar._resetTabIndex(toFocus);\n            },\n\n            _updateOnBlank: function(isBlank) {\n                var toolbar = this.toolbar,\n                    toolbarEl = toolbar.element;\n\n                toolbar.enable(toolbarEl.find(\"[data-command=EnableSelectionCommand]\").parent(), !isBlank);\n                toolbar.enable(toolbarEl.find(\"[data-command=ZoomCommand][role=button]\").parent(), !isBlank);\n\n                toolbar.enable(toolbarEl.find(\"[data-command='OpenSearchCommand']\"), !isBlank);\n                toolbar.enable(toolbarEl.find(\"[data-command='DownloadCommand']\"), !isBlank);\n                toolbar.enable(toolbarEl.find(\"[data-command='PrintCommand']\"), !isBlank);\n            },\n\n            _updatePager: function(options) {\n                const that = this;\n                if (options.updatePager) {\n                    const isDPLProcessed = that.processingLib === 'dpl';\n\n                    const data = isDPLProcessed ? (that.document && that.document.pages ? that.document.pages : []) : that.pages ?? [];\n\n                    const pagerDataSource = new kendo.data.DataSource({\n                    data: data ?? [],\n                    pageSize: 1\n                });\n                    that.pager.setDataSource(pagerDataSource);\n                    that._resizePager();\n                } else {\n                    const current = that.pager.page();\n\n                    if (current !== options.page) {\n                        if (options.pageChangeFromScroll) {\n                            that._pageChangeFromScroll = true;\n                        }\n                        that.pager.page(options.page);\n                    }\n                }\n                that._showPagerInputLabels();\n                that._togglePagerDisabledClass();\n            },\n\n            _togglePagerDisabledClass: function() {\n                const that = this;\n                const pager = that.pager;\n\n                if (pager.totalPages() <= 1 ) {\n                    pager.element.addClass(DISABLED);\n                } else if (pager.element.hasClass(DISABLED)) {\n                    pager.element.removeClass(DISABLED);\n                }\n            },\n\n            _updateZoomComboBox: function(value) {\n                var isPredefined = value === PREDEFINED_ZOOM_VALUES.auto ||\n                    value === PREDEFINED_ZOOM_VALUES.actual ||\n                    value === PREDEFINED_ZOOM_VALUES.fitToPage ||\n                    value === PREDEFINED_ZOOM_VALUES.fitToWidth,\n                    zoomCombo = this.toolbar.element.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\");\n\n                if (!isPredefined) {\n                    value = Math.round(value * 100) + '%';\n                }\n\n                if (zoomCombo) {\n                    zoomCombo.value(value);\n                }\n            },\n\n            _toolbarClick: function(ev) {\n                let target = $(ev.target),\n                    command = target.data(\"command\"),\n                    options = target.data(\"options\");\n\n                if (!command && !options) {\n                    target = $(ev.currentTarget);\n                    command = target.data(\"command\");\n                    options = target.data(\"options\");\n                }\n\n                options = extend({}, { value: target.val() }, options);\n\n                if (!command) {\n                    return;\n                }\n\n                this.execute({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _initErrorDialog: function(options) {\n                var that = this;\n\n                if (!that._errorDialog) {\n                    options = extend(options, {\n                        messages: that.options.messages\n                    });\n                    var dialogInstance = new kendo.pdfviewer.dialogs.ErrorDialog(options);\n                    that._errorDialog = dialogInstance._dialog;\n                }\n                return that._errorDialog;\n            },\n\n            _renderPageContainer: function() {\n                var that = this;\n\n                if (!that.pageContainer) {\n                    that.pageContainerWrapper = $(\"<div />\");\n                    that.pageContainerWrapper.addClass(styles.scroller);\n\n                    that.pageContainer = $(`<div class=\"k-pdf-viewer-pages\" />`);\n                    that.pageContainer[0].style.setProperty(\"--scale-factor\", that.zoomScale);\n                    that.pageContainer.attr(TABINDEX, 0);\n\n                    that.pageContainerWrapper.append(that.pageContainer);\n                    that.wrapper.append(that.pageContainerWrapper);\n                }\n            },\n\n            _setPageContainerScaleFactor(scale) {\n                var that = this;\n\n                if (that.pageContainer) {\n                    that.pageContainer[0].style.setProperty(\"--scale-factor\", scale);\n                }\n            },\n\n            _triggerError: function(options) {\n                var dialog = this._initErrorDialog();\n                extend(options, {\n                    dialog: dialog\n                });\n                if (this.pageContainer) {\n                    progress(this.pageContainer, false);\n                }\n\n                if (this.trigger(ERROR, options))\n                {\n                    return;\n                }\n\n                dialog.open().content(options.message);\n            },\n\n            _renderPages: function() {\n                var that = this,\n                    document = that.document,\n                    pagesData;\n\n                that.pages = [];\n\n                if (!document || !document.total) {\n                    that._renderBlankPage();\n                    return;\n                }\n\n                pagesData = document.pages;\n\n                for (var i = 1; i <= document.total; i++) {\n                    var viewerPage,\n                        pageData = {\n                            processor: that.processor,\n                            number: i\n                        };\n\n                    if (pagesData && pagesData.length) {\n                        pageData = extend(pageData, pagesData[i - 1]);\n                    }\n\n                    viewerPage = new Page(pageData, that);\n                    that.pages.push(viewerPage);\n                    that.pageContainer.append(viewerPage.element);\n                }\n\n                that._attachContainerEvents();\n                that._getVisiblePagesCount();\n                that._updatePager({ updatePager: true });\n            },\n\n            _renderBlankPage: function() {\n                this._blankPage = new BlankPage(this.options.defaultPageSize, this);\n\n                this.pageContainer.append(this._blankPage.element);\n\n                this._blankPage._initUpload();\n                this.trigger(UPDATE, { isBlank: true });\n            },\n\n            _resize: function() {\n                var that = this,\n                    containerWidth,\n                    ratio;\n\n                if (!that._allowResize) {\n                    return;\n                }\n\n                if (!that.pages || !that.pages.length) {\n                    if (that._blankPage) {\n                        ratio = containerWidth / that._blankPage.element.width();\n                        that._blankPage.resize(ratio);\n                    }\n                    return;\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.resize(true);\n                }\n\n\n                if (that._resizeHandler) {\n                    clearTimeout(that._resizeHandler);\n                }\n                that._resizeHandler = setTimeout(that._resizePages.bind(that), 100);\n            },\n\n            _resizePages: function() {\n                const that = this,\n                    containerWidth = that.pageContainer[0].clientWidth;\n                let ratio = 0;\n\n                that.pages.forEach(function(page) {\n                    const pageWidth = page.element ? page.element.width() : $(page._pageInfo.emptyPage.pageElement).width();\n                    const currentRatio = containerWidth / pageWidth;\n\n                    if (currentRatio > ratio) {\n                        ratio = currentRatio;\n                    }\n                });\n\n\n                if (that._autoFit) {\n                    that.zoom(that._autoFit, true);\n                    return;\n                }\n\n                ratio = Math.min(Math.max(ratio, that.options.zoomMin), kendo_pdfviewerCommon_cmn_chunk_js.D);\n                if (ratio != that.zoomScale) {\n                    that.zoom(ratio, true);\n                    that.zoomScale = ratio;\n                    that._allowResize = true;\n                }\n\n                if (that.pager && that.pager.element) {\n                    that._resizePager();\n                }\n            },\n\n            _attachContainerEvents: function() {\n                var that = this;\n\n                that._wheel = kendo.throttle(\n                    that._wheel.bind(that),\n                    300\n                );\n\n                if (that.processingLib !== PROCESSORS.dpl) {\n                    that.pageContainer.on(MOUSEWHEEL, function(e) {\n                        if (!e.ctrlKey) {\n                            return;\n                        }\n\n                        if (document.activeElement !== that.pageContainer[0]) {\n                            that.pageContainer.trigger(\"focus\");\n                        }\n\n                        that._wheel(e);\n                        e.preventDefault();\n                    });\n                }\n\n                that.pageContainer.addClass(styles.enablePanning);\n                if (that._isDPLProcessor()) {\n                    that.pageContainerWrapper.bind(SCROLL, that._scroll.bind(that));\n                } else {\n                    that.pageContainerWrapper.bind(SCROLL, that._onDemandScroll.bind(that));\n                }\n            },\n\n            _scroll: function(e) {\n                var that = this,\n                    containerHeight = that.pageContainerWrapper.height(),\n                    total = that.pages.length,\n                    pageNum = that._pageNum,\n                    pageIndex = pageNum - 1,\n                    pageToLoadNum = pageNum,\n                    pageToLoad,\n                    currentPage$1;\n\n                    if (that._preventScroll || !total) {\n                        that._preventScroll = false;\n                        return;\n                    }\n\n                    that._scrollingStarted = true;\n                    const nextPageIndex = kendo_pdfviewerCommon_cmn_chunk_js.c(that.element[0]);\n                    currentPage$1 = that.pages[pageIndex];\n                    pageToLoadNum = pageNum + nextPageIndex - pageIndex;\n\n                    if (pageNum !== pageToLoadNum && pageToLoadNum >= 1 && pageToLoadNum <= total) {\n                        pageToLoad = that.pages[pageToLoadNum - 1].element;\n\n                        if (pageToLoad.offset().top > containerHeight) {\n                            return;\n                        }\n\n                        that._pageNum = pageToLoadNum;\n                        that._loadVisiblePages();\n\n                        that.trigger(UPDATE, { action: PAGE_CHANGE, page: pageToLoadNum, total: total, pageChangeFromScroll: true });\n                    }\n            },\n\n            _onDemandScroll: function(e) {\n                const that = this,\n                    currentPageIndex = kendo_pdfviewerCommon_cmn_chunk_js.c(that.element[0]) + 1;\n\n                // Render the current and surrounding pages if they have not been rendered already.\n                // We are using +1/-1 twice because the loadPage method treats the parameter as a page number, not page index.\n                that.loadPage(currentPageIndex);\n                that.loadPage(currentPageIndex + 1);\n                that.loadPage(currentPageIndex - 1);\n\n                that.trigger(UPDATE, { action: PAGE_CHANGE, page: currentPageIndex, total: that.pages.length, pageChangeFromScroll: true });\n            },\n\n            _wheel: function(e) {\n                var originalEvent = e.originalEvent,\n                    delta = originalEvent.wheelDelta ? -originalEvent.wheelDelta : originalEvent.detail,\n                    zoomIn = delta < 0;\n\n                this.execute({\n                    command: ZOOMCOMMAND,\n                    options: {\n                        zoomIn: zoomIn,\n                        zoomOut: !zoomIn,\n                        updateComboBox: true\n                    }\n                });\n\n                e.preventDefault();\n            },\n\n            zoom: function(scale, preventComboBoxChange) {\n                var that = this;\n                if (!scale) {\n                    return that.zoomScale;\n                }\n\n                return that.execute({\n                    command: ZOOMCOMMAND,\n                    options: {\n                        value: scale,\n                        updateComboBox: !preventComboBoxChange\n                    }\n                });\n            },\n\n            execute: function(options) {\n                var commandOptions = extend({ viewer: this }, options.options);\n                var command = new kendo.pdfviewer[options.command](commandOptions);\n                return command.exec();\n            },\n\n            _loadDPLDocument: function() {\n                var that = this;\n                var page = that.options.page;\n\n                progress(that.pageContainer, true);\n                that.processor.fetchDocument().done(function(document) {\n                    that._clearPages();\n                    that.document = document;\n\n                    that._renderPages();\n                    that.resize(true);\n                    if (document) {\n                        page = page >= 1 && page <= document.total ? page : 1;\n                        that.activatePage(page, true);\n                    }\n\n                    if (that.pdfScroller) {\n                        that.pdfScroller.destroy();\n                    }\n\n                    that.pdfScroller = new kendo_pdfviewerCommon_cmn_chunk_js.e(that.pageContainer[0].parentNode, {\n                        filter: '.k-page',\n                        events: {}\n                    });\n\n                    that.pdfScroller.enablePanEventsTracking();\n\n                    progress(that.pageContainer, false);\n                });\n            },\n\n            _loadPdfJSDocument: function(data) {\n                const that = this;\n                const options = that.options;\n                const page = options.page;\n                let file;\n\n                if (data) {\n                    file = data;\n                } else {\n                    file = options.pdfjsProcessing.file;\n                }\n\n                if (!file) {\n                    that._renderBlankPage();\n                    return;\n                }\n\n                if (typeof file === \"string\") {\n                    file = {\n                        url: file\n                    };\n                } else if (file instanceof ArrayBuffer) {\n                    file = {\n                        arrayBuffer: file\n                    };\n                }\n\n                progress(that.pageContainer, true);\n                kendo_pdfviewerCommon_cmn_chunk_js.l($.extend({}, {\n                    rootElement: that.element[0],\n                    dom: that.pageContainer[0],\n                    zoom: that.zoomScale,\n                    loadOnDemandPageSize: 1,\n                    done: (e) => {\n                        that.document = e.pdfDoc;\n                        that.pages = e.pdfPages;\n\n                        if (that.pdfScroller) {\n                            that.pdfScroller.destroy();\n                        }\n\n                        that.pdfScroller = new kendo_pdfviewerCommon_cmn_chunk_js.e(that.pageContainer[0].parentNode, {\n                            filter: '.k-page',\n                            events: {}\n                        });\n\n                        that._attachContainerEvents();\n\n                        that.pdfScroller.enablePanEventsTracking();\n                        that._pageRenderPromise(that.pages[0]);\n                        that.activatePage(page, true);\n\n                        that.trigger(UPDATE);\n                        progress(that.pageContainer, false);\n                    },\n                    error: (e) => {\n                        const notFoundError = e.name.includes(\"Missing\"),\n                            messages = that.options.messages.errorMessages,\n                            alertMessage = notFoundError ? messages.notFound : messages.parseError;\n\n                        that._triggerError({\n                            error: e.message,\n                            message: alertMessage\n                        });\n                    },\n                    loadOnDemand: that.options.pdfjsProcessing.loadOnDemand\n                }, file));\n            },\n\n            _setPageNumberAttributes: function() {\n                const that = this;\n\n                that.pageContainer.find('.k-page').each((i, el) => {\n                    $(el).attr(kendo.attr(\"number\"), i + 1);\n                });\n            },\n\n            _pageRenderPromise: function(page, preventTrigger) {\n                const that = this;\n                return new Promise(resolve => {\n                    const intervalId = setInterval(() => {\n                      if (page._pageInfo.rendered && !page._pageInfo.renderInProgress) {\n                        clearInterval(intervalId);\n                        that._setPageNumberAttributes();\n                        if (!preventTrigger) {\n                            that.trigger(RENDER, { page });\n                        }\n                        resolve();\n                      }\n                    }, 100);\n                  });\n            },\n\n            loadPage: function(number) {\n                const that = this,\n                    messages = that.options.messages.errorMessages,\n                    page = that.pages && that.pages[number - 1];\n\n                if (!page) {\n                    return;\n                }\n\n                if (that._isDPLProcessor()) {\n                    return page.load(that.zoomScale);\n                } else if (!page._pageInfo.rendered && !page._pageInfo.renderInProgress) {\n                    kendo_pdfviewerCommon_cmn_chunk_js.f(page, page._pageInfo.emptyPage, (e) => {\n                        that._triggerError({\n                            error: e.message,\n                            message: messages.parseError\n                        });\n                    });\n\n                    return that._pageRenderPromise(page);\n                }\n\n                return Promise.resolve();\n            },\n\n            activatePage: function(number, updatePager) {\n                const that = this,\n                    page = that.pages && that.pages[number - 1];\n\n                if (!page) {\n                    return;\n                }\n\n                that._pageNum = number;\n\n                if (that._isDPLProcessor()) {\n                    that._loadVisiblePages();\n                    that._scrollToActivatedPage(number, updatePager);\n                } else {\n                    that.loadPage(number).then(() => {\n                        that._scrollToActivatedPage(number, updatePager);\n                    });\n                }\n            },\n\n            _scrollToActivatedPage: function(number, updatePager) {\n                const that = this,\n                    pageContainer = that.pageContainerWrapper;\n\n                that._preventScroll = true;\n                kendo_pdfviewerCommon_cmn_chunk_js.s(pageContainer[0], number - 1);\n                that.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: that.pages.length, updatePager: updatePager });\n            },\n\n            _getVisiblePagesCount: function() {\n                var that = this,\n                    loadedPagesHeight = 0,\n                    updatedVisiblePagesCount = 0,\n                    containerHeight = that.pageContainer[0].clientHeight,\n                    index = 0;\n\n                while (loadedPagesHeight <= containerHeight && index < that.pages.length)\n                {\n                    loadedPagesHeight += that.pages[index].element.height();\n                    updatedVisiblePagesCount++;\n                    index++;\n                }\n\n                that._visiblePagesCount = updatedVisiblePagesCount;\n            },\n\n            _loadVisiblePages: function() {\n                var pagesCount = this.pages && this.pages.length,\n                    minVisiblePageNum = Math.max(this._pageNum - this._visiblePagesCount, 1),\n                    maxVisiblePageNum = Math.min(this._pageNum + this._visiblePagesCount, pagesCount);\n\n                this._visiblePages = this.pages.slice(minVisiblePageNum - 1, maxVisiblePageNum);\n\n                for (var i = minVisiblePageNum; i <= maxVisiblePageNum; i++)\n                {\n                    this.loadPage(i);\n                }\n            },\n\n            _loadAllPages: function() {\n                const pagesCount = this.pages && this.pages.length;\n                const promises = [];\n\n                for (var i = 0; i <= pagesCount; i++)\n                {\n                    promises.push(this.loadPage(i));\n                }\n\n                return promises;\n            },\n\n            fromFile: function(file) {\n                const that = this;\n                if (that._isDPLProcessor()) {\n                    that.zoomScale = that.options.scale || kendo_pdfviewerCommon_cmn_chunk_js.D;\n                    that.zoom(that.zoomScale, true);\n                    that.trigger(UPDATE, { action: \"zoom\", zoom: that.options.scale || \"auto\" });\n\n                    that.processor._updateDocument(file);\n                    that._loadDPLDocument();\n                } else {\n                    that._loadPdfJSDocument(file);\n                }\n            },\n\n            exportImage: function(options) {\n                var that = this;\n                var pageNumber = options.page;\n                var page = that.pages[pageNumber - 1] || that._blankPage;\n                var rootGroup = new drawing.Group();\n\n                page.load();\n\n                var background = kendo.drawing.Path.fromRect(new kendo.geometry.Rect([0, 0], [page.width, page.height]), {\n                    fill: {\n                        color: WHITECOLOR\n                    },\n                    stroke: null\n                });\n\n                progress(that.pageContainer, true);\n                rootGroup.append(background, page.group);\n\n                drawing.exportImage(rootGroup).done(function(data) {\n                    progress(that.pageContainer, false);\n                    kendo.saveAs({\n                        dataURI: data,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL || \"\",\n                        forceProxy: options.forceProxy,\n                        proxyTarget: options.proxyTarget\n                    });\n                });\n            },\n\n            exportSVG: function(options) {\n                var that = this;\n                var pageNumber = options.page;\n                var page = that.pages[pageNumber - 1] || that._blankPage;\n\n                progress(that.pageContainer, true);\n\n                page.load();\n\n                drawing.exportSVG(page.group).done(function(data) {\n                    progress(that.pageContainer, false);\n                    kendo.saveAs({\n                        dataURI: data,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL || \"\",\n                        forceProxy: options.forceProxy,\n                        proxyTarget: options.proxyTarget\n                    });\n                });\n            },\n\n            setOptions: function(options)\n            {\n                var that = this;\n\n                if (options.pdfjsProcessing || options.dplProcessing) {\n                    that._initProcessor(options || {});\n                }\n\n                options = $.extend(that.options, options);\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (options.page) {\n                    that._pageNum = options.page;\n                    that.activatePage(options.page, false);\n                }\n\n                if (options.width) {\n                    that.element.width(options.width);\n                }\n\n                if (options.height) {\n                    that.element.height(options.height);\n                }\n            },\n\n            destroy: function()\n            {\n                if (this._resizeHandler)\n                {\n                    kendo.unbindResize(this._resizeHandler);\n                }\n\n                //destroy nested components\n                if (this._errorDialog) {\n                    this._errorDialog.destroy();\n                }\n\n                if (this._saveDialog) {\n                    this._saveDialog.destroy();\n                }\n\n                if (this._upload) {\n                    this._upload.destroy();\n                }\n\n                if (this.pager) {\n                    this.pager.destroy();\n                }\n\n                if (this.toolbar) {\n                    this.toolbar.unbind();\n                    this.toolbar.destroy();\n                    this.toolbar = null;\n                }\n\n                if (this.pages && this.pages.length && this._isDPLProcessor()) {\n                    this.pages.forEach(function(page) {\n                        page.destroy();\n                    });\n                    this.pages = [];\n                }\n\n                if (this.pdfScroller) {\n                    this.pdfScroller.destroy();\n                }\n                this.pageContainer.off(NS);\n                this.pageContainerWrapper.off(NS);\n\n                Widget.fn.destroy.call(this);\n            },\n\n            _clearPages: function() {\n                this.pages = [];\n                this.document = null;\n                this._pageNum = 1;\n\n                this.pageContainer.off(NS);\n                this.pageContainer.empty();\n\n                if (this.pdfScroller)\n                {\n                    this.pdfScroller.destroy();\n                }\n            },\n\n            _toggleSelection: function(enable) {\n                var that = this;\n\n                if (enable === undefined$1) {\n                    enable = true;\n                }\n\n                if (that.pdfScroller) {\n                    enable ? that.pdfScroller.disablePanEventsTracking() : that.pdfScroller.enablePanEventsTracking();\n                }\n\n                that.pageContainer.toggleClass(styles.enableTextSelection, enable);\n                that.pageContainer.toggleClass(styles.enablePanning, !enable);\n            },\n        });\n\n        ui.plugin(PDFViewer);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}