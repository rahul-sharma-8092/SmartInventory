{"version":3,"sources":["raw-js/kendo.textarea.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Textarea","Core","Floatinglabel","PrefixSuffixContainersChunk","this","kendo_core_js","kendo_floatinglabel_js","kendo_prefixSuffixContainers_chunk_js","$","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","STATEREADONLY","ARIA_DISABLED","TextArea","extend","init","element","options","that","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","maxLength","replace","length","_wrapper","_label","_editable","disable","_applyAttributes","_applyCssClasses","a","widget","wrapper","floatingLabel","refresh","notify","events","attributes","name","label","resizable","cols","rows","rounded","size","fillMode","resize","overflow","layoutFlow","prefixOptions","separator","suffixOptions","action","cssProperties","getValidClass","propName","property","_value","focus","destroy","_inputLabel","remove","style","cssText","off","unwrap","setOptions","toggleClass","prop","removeClass","on","_focusin","bind","_focusout","floating","labelText","id","content","_floatingLabelContainer","wrap","parent","FloatingLabel","addClass","isFunction","guid","newValue","trigger","DOMElement","width","className","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.textarea.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.floatinglabel.js'), require('kendo.prefix-suffix-containers.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.floatinglabel', 'kendo.prefix-suffix-containers.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Textarea = {}), global.kendo._globals.Core, global.kendo._globals.Floatinglabel, global.kendo._globals.PrefixSuffixContainersChunk));\n})(this, (function (exports, kendo_core_js, kendo_floatinglabel_js, kendo_prefixSuffixContainers_chunk_js) {\n    const __meta__ = {\n        id: \"textarea\",\n        name: \"TextArea\",\n        category: \"web\",\n        description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n        depends: [\"core\", \"floatinglabel\", \"prefix-suffix-containers.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextArea\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            STATEDISABLED = \"k-disabled\",\n            STATEREADONLY = \"k-readonly\",\n            ARIA_DISABLED = \"aria-disabled\",\n            TEXTAREACONTAINER = \"k-textarea-container\";\n\n        var TextArea = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that.options.value = options.value || that.element.val();\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n                that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n                that.options.maxLength = options.maxLength || that.element.attr(\"maxlength\");\n\n                if (!that.options.value.replace(/\\s/g, '').length) {\n                    that.options.value = '';\n                    that.element.val('');\n                }\n\n                that.value(that.options.value);\n                that._wrapper();\n                that._label();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !(that.options.enable)\n                });\n                that._applyAttributes();\n                that._applyCssClasses();\n                that.element.attr(\"autocomplete\", \"off\");\n\n                kendo_prefixSuffixContainers_chunk_js.a({ widget: that, wrapper: that.wrapper, options: that.options });\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            attributes: [\n                \"maxLength\",\n                \"rows\",\n                \"placeholder\"\n            ],\n\n            options: {\n                name: 'TextArea',\n                value: '',\n                readonly: false,\n                enable: true,\n                placeholder: '',\n                label: null,\n                resizable: \"none\",\n                maxLength: null,\n                cols: 20,\n                rows: 1,\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                resize: \"none\",\n                overflow: \"auto\",\n                layoutFlow: \"vertical\",\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n\n            _applyCssClasses: function(action) {\n                var that = this,\n                    options = that.options,\n                    resize = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"resize\",\n                        value: options.resize\n                    }),\n                    overflow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"overflow\",\n                        value: options.overflow\n                    }),\n                    layoutFlow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"layoutFlow\",\n                        value: options.layoutFlow\n                    });\n\n                Widget.fn._applyCssClasses.call(that);\n\n                if (!resize && options.resize === \"none\") {\n                    resize = \"k-resize-none\";\n                }\n\n                if (overflow) {\n                    overflow = \"!\" + overflow;\n                }\n\n                action = action || \"addClass\";\n\n                that.element[action](resize);\n                that.element[action](overflow);\n                that.element[action](INPUT);\n                that.wrapper[action](layoutFlow);\n                if (options.layoutFlow == \"vertical\") {\n                    that.element[action](\"!k-flex-none\");\n                }\n            },\n\n            _applyAttributes: function() {\n                var that = this;\n                var property;\n                var attributes = {};\n\n                for (property in that.attributes) {\n                    attributes[that.attributes[property]] = that.options[that.attributes[property]];\n                }\n\n                that.element.attr(attributes);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._value = value;\n                that.element.val(value);\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            focus: function() {\n                var that = this;\n\n                that.element[0].focus();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that._applyCssClasses(\"removeClass\");\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n\n                if (that._inputLabel) {\n                    that._inputLabel.remove();\n                    that._inputLabel = null;\n                }\n\n                // Move the styles back to the element.\n                that.element[0].style.cssText = that.wrapper[0].style.cssText;\n\n                that.element.off(NS);\n                that.element.unwrap();\n                that.wrapper = null;\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                that.destroy();\n                that.init(that.element, options);\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n\n                element.off(NS);\n\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false);\n\n                    wrapper.removeClass(STATEDISABLED)\n                            .removeClass(STATEREADONLY);\n\n                    element.on(\"focusin\" + NS, that._focusin.bind(that));\n                    element.on(\"focusout\" + NS, that._focusout.bind(that));\n                } else {\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                            .toggleClass(STATEREADONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                        that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n                }\n            },\n\n            _focusin: function() {\n                var that = this;\n\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _focusout: function() {\n                var that = this;\n                var value = that._value;\n                var newValue = that.element.val();\n\n                that.wrapper.removeClass(FOCUSED);\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (value !== newValue) {\n                    that._value = newValue;\n\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n\n                wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TextArea\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TextArea);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}