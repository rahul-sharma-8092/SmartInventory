{"version":3,"sources":["raw-js/kendo.aiprompt.views.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","AipromptViews","this","$","Widget","ui","AIPromptBaseView","extend","init","element","options","that","fn","call","aiprompt","getKendoAIPrompt","contentElement","footerElement","buttonText","buttonIcon","name","render","_renderContent","_renderFooter","_renderContentElement","content","addClass","append","_renderFooterElement","footer","destroy","off","remove","DEFAULT_PROMPT_VIEW_TEMPLATE","suggestions","promptSuggestionItemTemplate","messages","length","promptSuggestions","map","suggestion","join","DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE","generateOutput","DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE","AIPromptPromptView","template","viewTemplate","footerTemplate","setTextAreaValue","value","find","getKendoTextArea","_focusSuggestion","attr","trigger","initializeComponents","kendoTextArea","resize","placeholder","promptPlaceholder","kendoButton","icon","themeColor","rounded","click","e","isRetry","prompt","first","nextExpanderContentId","guid","expanderButton","next","fillMode","target","closest","iconEl","sender","is","toggle","on","text","keyCode","preventDefault","prev","siblings","last","DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC","output","showOutputRating","id","outputTitle","copyOutput","retryGeneration","ratePositive","rateNegative","DEFAULT_OUTPUT_VIEW_TEMPLATE","promptOutputs","AIPromptOutputView","addPromptOutput","unshift","renderPromptOutput","card","outputsContainer","_getOutputFromElement","data","parentElement","promptOutput","navigator","clipboard","writeText","rateType","AIPromptCommandsView","promptCommands","commandItems","panelBarEl","kendoPanelBar","animation","dataSource","selectable","select","ev","item","dataItem","hasChildren","promptViewWrapper","EMPTY_TEMPLATE","AIPromptCustomView","window","jQuery","kendo$1","__meta__","category","description","depends","hidden","chunk","default","Object","defineProperty"],"mappings":"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","file":"kendo.aiprompt.views.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.icons.js'), require('kendo.textarea.js'), require('kendo.button.js'), require('kendo.panelbar.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.icons', 'kendo.textarea', 'kendo.button', 'kendo.panelbar'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.AipromptViews = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"aiprompt.views\",\n        name: \"AipromptViews\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: ['core', 'icons', 'textarea', 'button', 'panelbar'],\n        hidden: true,\n        chunk: true\n    };\n\n    (function($) {\n        let Widget = kendo.ui.Widget;\n\n        let AIPromptBaseView = kendo.ui.AIPromptBaseView = Widget.extend({\n            init: function(element, options) {\n                let that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.aiprompt = element.getKendoAIPrompt();\n\n                that.contentElement = that.options.contentElement;\n                that.footerElement = that.options.footerElement;\n                that.buttonText = that.options.buttonText;\n                that.buttonIcon = that.options.buttonIcon;\n            },\n\n            options: {\n                name: \"AIPromptBaseView\",\n                buttonText: \"\",\n                buttonIcon: \"\",\n            },\n\n            render: function() {\n                let that = this;\n\n                that._renderContent();\n                that._renderFooter();\n            },\n\n            _renderContentElement: function() {\n                let that = this;\n                let content = $(\"<div></div>\").addClass(\"k-prompt-content\");\n                that.contentElement = content;\n                that.element.append(content);\n\n                return that.contentElement;\n            },\n\n            _renderFooterElement: function() {\n                let that = this;\n                let footer = $(\"<div></div>\").addClass(\"k-prompt-footer\");\n                that.footerElement = footer;\n                that.element.append(footer);\n\n                return that.footerElement;\n            },\n\n            destroy: function() {\n                let that = this;\n                Widget.fn.destroy.call(that);\n\n                if (that.contentElement) {\n                    that.contentElement.off();\n                    kendo.destroy(that.contentElement);\n                    that.contentElement.remove();\n                }\n\n                if (that.footerElement) {\n                    that.footerElement.off();\n                    kendo.destroy(that.footerElement);\n                    that.footerElement.remove();\n                }\n            }\n        });\n\n        let DEFAULT_PROMPT_VIEW_TEMPLATE = ({ suggestions, promptSuggestionItemTemplate, messages }) => `<div class=\"k-prompt-view\">\n        <textarea ref-prompt-input></textarea>\n        ${suggestions?.length ?\n            `<div class=\"k-prompt-expander\">\n                <button ref-prompt-suggestions-button aria-expanded=\"true\">${messages.promptSuggestions}</button>\n                <div class=\"k-prompt-expander-content\" role=\"list\">\n                    ${suggestions.map(suggestion => promptSuggestionItemTemplate({ suggestion })).join(\"\")}\n                </div>\n            </div>` : ''\n        }\n    </div>`;\n\n        let DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE = ({ messages }) => `<div class=\"k-actions k-actions-start k-actions-horizontal k-prompt-actions\">\n        <button ref-generate-output-button>${messages.generateOutput}</button>\n    </div>`;\n\n        let DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE = ({ suggestion }) => `<div role=\"listitem\" class=\"k-prompt-suggestion\">${suggestion}</div>`;\n        kendo.ui.AIPromptPromptView = AIPromptBaseView.extend({\n            init: function(element, options) {\n                let that = this;\n\n                AIPromptBaseView.fn.init.call(that, element, options);\n                that.promptSuggestions = that.options.promptSuggestions;\n                that.promptSuggestionItemTemplate = kendo.template(that.options.promptSuggestionItemTemplate || DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE);\n            },\n            options: {\n                name: \"AIPromptPromptView\",\n                buttonIcon: \"sparkles\",\n            },\n\n            _renderContent: function() {\n                let that = this;\n                let suggestions = that.promptSuggestions;\n                let promptSuggestionItemTemplate = that.promptSuggestionItemTemplate;\n                let content = kendo.template(that.options.viewTemplate || DEFAULT_PROMPT_VIEW_TEMPLATE)({ suggestions, promptSuggestionItemTemplate, messages: that.options.messages });\n\n                that._renderContentElement();\n                that.contentElement.append(content);\n            },\n\n            _renderFooter: function() {\n                let that = this;\n                let footer = kendo.template(that.options.footerTemplate || DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE)({ messages: that.options.messages });\n\n                that._renderFooterElement();\n                that.footerElement.append(footer);\n            },\n\n            setTextAreaValue: function(value) {\n                let that = this;\n                that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value(value);\n            },\n\n            _focusSuggestion(element) {\n                let that = this;\n                if (!element || !element.length) {\n                    return;\n                }\n\n                that.contentElement.find(\".k-prompt-suggestion[tabindex=0]\").attr(\"tabindex\", \"-1\");\n                element.attr(\"tabindex\", \"0\").trigger(\"focus\");\n            },\n\n            initializeComponents: function() {\n                let that = this;\n                let suggestions = that.promptSuggestions;\n\n                that.contentElement.find(\"textarea[ref-prompt-input]\").kendoTextArea({\n                    resize: \"vertical\",\n                    placeholder: that.options.messages.promptPlaceholder\n                });\n\n                that.footerElement.find(\"button[ref-generate-output-button]\").kendoButton({\n                    icon: \"sparkles\",\n                    themeColor: \"primary\",\n                    rounded: \"full\",\n                    click: function(e) {\n                        that.aiprompt.trigger(\"promptRequest\", {\n                            isRetry: false,\n                            prompt: that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value()\n                        });\n                    }\n                });\n\n                if (suggestions?.length) {\n                    that.contentElement.find(\".k-prompt-suggestion\").first().attr(\"tabindex\", \"0\");\n                    let nextExpanderContentId = kendo.guid();\n                    let expanderButton = that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\");\n\n                    that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").attr(\"aria-controls\", nextExpanderContentId);\n                    expanderButton.next(\".k-prompt-expander-content\").attr(\"id\", nextExpanderContentId);\n\n                    that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").kendoButton({\n                        icon: \"chevron-up\",\n                        fillMode: \"flat\",\n                        click: function(e) {\n                            let expander = $(e.target).closest(\".k-prompt-expander\");\n                            let content = expander.find(\".k-prompt-expander-content\");\n                            let iconEl = e.sender.element.find(\".k-icon\");\n                            kendo.ui.icon(iconEl, content.is(\":visible\") ? \"chevron-down\" : \"chevron-up\");\n                            content.toggle();\n                            e.sender.element.attr(\"aria-expanded\", content.is(\":visible\"));\n                        }\n                    });\n\n                    that.contentElement.on(\"click\", \".k-prompt-suggestion\", function(e) {\n                        that.setTextAreaValue($(e.target).text());\n                    });\n\n                    that.contentElement.on(\"keydown\", \".k-prompt-suggestion\", function(e) {\n                        if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35 || e.keyCode === 13 || e.keyCode === 32) {\n                            e.preventDefault();\n                            let target = $(e.target);\n                            let siblings = target.siblings();\n                            let next, prev;\n\n                            // down arrow\n                            if (e.keyCode === 40) {\n                                next = target.next();\n                                that._focusSuggestion(next);\n                            }\n\n                            // up arrow\n                            if (e.keyCode === 38) {\n                                prev = target.prev();\n                                that._focusSuggestion(prev);\n                            }\n\n                            // home\n                            if (e.keyCode === 36) {\n                                prev = siblings.first();\n                                that._focusSuggestion(prev);\n                            }\n\n                            // end\n                            if (e.keyCode === 35) {\n                                next = siblings.last();\n                                that._focusSuggestion(next);\n                            }\n\n                            // enter or space\n                            if (e.keyCode === 13 || e.keyCode === 32) {\n                                that.setTextAreaValue($(e.target).text());\n                            }\n                        }\n                    });\n                }\n            },\n\n            render: function() {\n                let that = this;\n\n                that._renderContent();\n                that._renderFooter();\n                that.initializeComponents();\n            },\n        });\n\n        let DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC = ({ output, showOutputRating, messages }) => `\n    <div role=\"listitem\" tabindex=\"0\" class=\"k-card\" data-id=\"${output.id}\" >\n        <div class=\"k-card-header\">\n            <div class=\"k-card-title\">${messages.outputTitle}</div>\n            <div class=\"k-card-subtitle\">${output.prompt}</div>\n        </div>\n        <div class=\"k-card-body\">\n            <p class=\"k-white-space-pre-line\">${output.output}</p>\n        </div>\n        <div class=\"k-actions k-actions-start k-actions-horizontal k-card-actions\">\n            <button ref-copy-button>${messages.copyOutput}</button>\n            <button ref-retry-button>${messages.retryGeneration}</button>\n\n            <span class=\"k-spacer\"></span>\n            ${showOutputRating ? `\n            <button ref-rate-positive title=${messages.ratePositive ? messages.ratePositive : 'Helpful'}>${messages.ratePositive}</button>\n            <button ref-rate-negative title=${messages.rateNegative ? messages.rateNegative : 'Unhelpful'}>${messages.rateNegative}</button>\n            ` : \"\"}\n        </div>\n    </div>`;\n\n        let DEFAULT_OUTPUT_VIEW_TEMPLATE = ({ promptOutputs, showOutputRating, messages }) => `<div class=\"k-prompt-view\"><div role=\"list\" class=\"k-card-list\">\n    ${promptOutputs ? promptOutputs.map(output => DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC({ output, showOutputRating, messages })).join(\"\") : ''}\n    </div></div>`;\n\n        kendo.ui.AIPromptOutputView = AIPromptBaseView.extend({\n            init: function(element, options) {\n                let that = this;\n\n                AIPromptBaseView.fn.init.call(that, element, options);\n\n                that.promptOutputs = (that.options.promptOutputs || []).map(output => {\n                    output.id = output.id || kendo.guid();\n                    return output;\n                });\n\n                that.showOutputRating = that.options.showOutputRating;\n            },\n\n            options: {\n                name: \"AIPromptOutputView\",\n                buttonIcon: \"comment\",\n                promptOutputs: []\n            },\n\n            addPromptOutput: function(output) {\n                let that = this;\n                output.id = output.id || kendo.guid();\n                that.promptOutputs.unshift(output);\n                that.renderPromptOutput(output);\n            },\n\n            renderPromptOutput: function(output) {\n                let that = this;\n                let showOutputRating = that.options.showOutputRating;\n                let messages = that.options.messages;\n\n                let card = $(kendo.template(DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC)({ output, showOutputRating, messages }));\n                that.outputsContainer.append(card);\n                that.initializeComponents(card);\n            },\n\n            _renderContent: function() {\n                let that = this;\n                let promptOutputs = that.promptOutputs;\n                let showOutputRating = that.options.showOutputRating;\n                let messages = that.options.messages;\n\n                let outputsContainer = kendo.template(that.viewTemplate || DEFAULT_OUTPUT_VIEW_TEMPLATE)({ promptOutputs, showOutputRating, messages });\n                that.outputsContainer = $(outputsContainer);\n                that._renderContentElement();\n                that.contentElement.append(that.outputsContainer);\n            },\n\n            _getOutputFromElement: function(element) {\n                let that = this;\n                let card = $(element).closest(\".k-card\");\n                let id = card.data(\"id\");\n\n                let promptOutput = that.promptOutputs.find(output => output.id === id);\n\n                return promptOutput;\n            },\n\n            initializeComponents: function(parentElement) {\n                let that = this;\n                parentElement = parentElement || that.contentElement;\n\n                parentElement.find(\"[ref-copy-button]\").kendoButton({\n                    icon: \"copy\",\n                    fillMode: \"flat\",\n                    themeColor: \"primary\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n                        if (!that.aiprompt.trigger(\"outputCopy\", { output: promptOutput, prompt: promptOutput.prompt })) {\n                            if (navigator.clipboard && typeof navigator.clipboard.writeText === \"function\") {\n                                navigator.clipboard.writeText(promptOutput.output);\n                            }\n                        }\n                    }\n                });\n\n                parentElement.find(\"[ref-retry-button]\").kendoButton({\n                    icon: \"arrow-rotate-cw\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n\n                        that.aiprompt.trigger(\"promptRequest\", { isRetry: true, prompt: promptOutput.prompt, output: promptOutput });\n                    }\n                });\n\n                if (that.options.showOutputRating) {\n                    parentElement.find(\"[ref-rate-positive]\").kendoButton({\n                        icon: \"thumb-up-outline\",\n                        fillMode: \"flat\",\n                        click: function(e) {\n                            let promptOutput = that._getOutputFromElement(e.target);\n                            let rateType = \"positive\";\n\n                            that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                            kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-up\");\n                            kendo.ui.icon(e.target.next(\"[ref-rate-negative]\").find(\".k-icon\"), \"thumb-down-outline\");\n                        }\n                    });\n\n                    parentElement.find(\"[ref-rate-negative]\").kendoButton({\n                        icon: \"thumb-down-outline\",\n                        fillMode: \"flat\",\n                        click: function(e) {\n                            let promptOutput = that._getOutputFromElement(e.target);\n                            let rateType = \"negative\";\n                            that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                            kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-down\");\n                            kendo.ui.icon(e.target.prev(\"[ref-rate-positive]\").find(\".k-icon\"), \"thumb-up-outline\");\n                        }\n                    });\n                }\n            },\n\n            render: function() {\n                let that = this;\n                that._renderContent();\n                that.initializeComponents();\n\n                that.contentElement.on(\"keydown\", \".k-card\", function(e) {\n                    let target = $(e.target);\n\n                    // if up or down arrow, focus next or previous card\n                    // if home or end, focus first or last card\n                    if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35) {\n                        e.preventDefault();\n\n                        // down arrow\n                        if (e.keyCode === 40) {\n                            target.next(\".k-card\").trigger(\"focus\");\n                        }\n\n                        // up arrow\n                        if (e.keyCode === 38) {\n                            target.prev(\".k-card\").trigger(\"focus\");\n                        }\n\n                        // home\n                        if (e.keyCode === 36) {\n                            that.contentElement.find(\".k-card\").first().trigger(\"focus\");\n                        }\n\n                        // end\n                        if (e.keyCode === 35) {\n                            that.contentElement.find(\".k-card\").last().trigger(\"focus\");\n                        }\n                    }\n                });\n            }\n        });\n\n        kendo.ui.AIPromptCommandsView = AIPromptBaseView.extend({\n            options: {\n                name: \"AIPromptCommandsView\",\n                buttonText: \"\",\n                buttonIcon: \"more-horizontal\",\n                promptCommands: []\n            },\n\n            initializeComponents: function() {\n                let that = this;\n                let commandItems = that.options.promptCommands;\n\n                let panelBarEl = $(\"<div></div>\").kendoPanelBar({\n                    animation: false,\n                    dataSource: commandItems,\n                    selectable: false,\n                    select: function(ev) {\n                        let item = $(ev.item);\n                        let dataItem = this.dataItem(item);\n                        if (dataItem.hasChildren) {\n                            return;\n                        }\n\n                        that.aiprompt.trigger(\"commandExecute\", { sender: that.aiprompt, item: dataItem });\n                    }\n                });\n                const promptViewWrapper = $(\"<div class='k-prompt-view'>\");\n                promptViewWrapper.append(panelBarEl);\n\n                that.contentElement.append(promptViewWrapper);\n            },\n\n            render: function() {\n                let that = this;\n                that._renderContentElement();\n                that.initializeComponents();\n            },\n        });\n\n        let EMPTY_TEMPLATE = () => \"\";\n        kendo.ui.AIPromptCustomView = AIPromptBaseView.extend({\n            options: {\n                name: \"AIPromptCustomView\",\n                buttonText: \"\",\n                buttonIcon: \"\",\n                viewTemplate: EMPTY_TEMPLATE,\n                footerTemplate: EMPTY_TEMPLATE,\n            },\n\n            initializeComponents: function() {\n                let that = this;\n                if (typeof that.options.initializeComponents === \"function\") {\n                    that.options.initializeComponents.call(that);\n                }\n            },\n\n            _renderContent: function() {\n                let that = this;\n                let content = kendo.template(that.options.viewTemplate)({ aiprompt: that });\n\n                that._renderContentElement();\n                that.contentElement.append(content);\n            },\n\n            _renderFooter: function() {\n                let that = this;\n                if (that.options.footerTemplate === EMPTY_TEMPLATE) {\n                    return;\n                }\n\n                let footer = kendo.template(that.options.footerTemplate)({ messages: that.options.messages });\n\n                that._renderFooterElement();\n                that.footerElement.append(footer);\n            },\n            render: function() {\n                let that = this;\n                that._renderContent();\n                that._renderFooter();\n                that.initializeComponents();\n            },\n        });\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}