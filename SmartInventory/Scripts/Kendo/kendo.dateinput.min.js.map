{"version":3,"sources":["raw-js/kendo.dateinput.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Dateinput","Core","Label","Icons","DateinputsCommonCmnChunk","this","kendo_core_js","kendo_label_js","kendo_icons_js","kendo_dateinputsCommon_cmn_chunk_js","$","undefined$1","window","ui","Widget","ns","objectToString","toString","isPlainObject","FOCUSED","STATEDISABLED","STATEINVALID","DISABLED","READONLY","CHANGE","IntlService","Class","extend","init","options","info","culture","getCulture","messages","cldr","name","calendar","numbers","numberFormat","parseDate","value","format","formatDate","date","splitDateFormat","dateFormatNames","locale","dateFieldName","type","buildKeys","cultureInfo","keys","push","calendars","standard","getCultureFormat","patterns","DateInput$1","element","that","fn","call","_extractFormat","d","min","attr","max","wrapperClass","parent","skipStyling","indexOf","initialValue","val","wrapper","wrap","addClass","className","removeClass","style","cssText","css","height","_validationIcon","icon","iconClass","insertAfter","_form","dateInputInstance","D","autoCorrectParts","autoSwitchKeys","length","enableMouseWheel","twoDigitYearMax","steps","formatPlaceholder","events","inputEnd","e","error","_blinkInvalidState","keydown","event","keyCode","UP","DOWN","setTimeout","trigger","preventDefault","blur","_change","intlService","autoSwitchParts","autoFill","_emptyMask","on","setAttribute","is","parents","enable","readonly","_applyCssClasses","label","_label","removeAttr","notify","autoAdjust","Date","year","month","day","weekday","hour","minute","second","milliseconds","dayperiod","size","millisecond","fillMode","rounded","setOptions","destroy","off","_formElement","_resetHandler","remove","getTime","writeValue","_oldValue","floatingLabel","refresh","_hasDateInput","_editable","disable","labelOptions","content","widget","floatCheck","document","activeElement","_inputLabel","_bindInput","bindEvents","_unbindInput","unbindEvents","removeAttribute","oldValue","_addInvalidState","clearTimeout","_invalidStateTimeout","_removeInvalidState","bind","formId","form","closest","_paste","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.dateinput.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.label.js'), require('kendo.icons.js'), require('kendo.dateinputs-common.cmn.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.label', 'kendo.icons', 'kendo.dateinputs-common.cmn.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Dateinput = {}), global.kendo._globals.Core, global.kendo._globals.Label, global.kendo._globals.Icons, global.kendo._globals.DateinputsCommonCmnChunk));\n})(this, (function (exports, kendo_core_js, kendo_label_js, kendo_icons_js, kendo_dateinputsCommon_cmn_chunk_js) {\n    const __meta__ = {\n        id: \"dateinput\",\n        name: \"DateInput\",\n        category: \"web\",\n        description: \"The DateInput widget allows to edit date by typing.\",\n        depends: [\"core\", \"label\", \"dateinputs-common.cmn.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var global = window;\n        var kendo = global.kendo;\n        var ui = kendo.ui;\n        var Widget = ui.Widget;\n        var ns = \".kendoDateInput\";\n        var objectToString = {}.toString;\n        var isPlainObject = $.isPlainObject;\n\n\n        var FOCUSED = \"k-focus\";\n        var STATEDISABLED = \"k-disabled\";\n        var STATEINVALID = \"k-invalid\";\n\n        var DISABLED = \"disabled\";\n        var READONLY = \"readonly\";\n        var CHANGE = \"change\";\n\n        var IntlService = kendo.Class.extend({\n            init: function(options) {\n                const info = options.culture ? kendo.getCulture(options.culture) : kendo.culture();\n                this.messages = options.messages;\n                this.cldr = { };\n                this.cldr[info.name] = {\n                    name: info.name,\n                    calendar: info.calendar || {},\n                    numbers: info.numberFormat\n                };\n            },\n\n            parseDate: function(value, format, culture) {\n                return kendo.parseDate(value, format, culture, true);\n            },\n\n            formatDate: function(date, format, culture) {\n                return kendo.toString(date, format, culture);\n            },\n\n            splitDateFormat: function(format) {\n                return kendo.date.splitDateFormat(format);\n            },\n\n            dateFormatNames: function(locale, options) {\n                return kendo.date.dateFormatNames(options);\n            },\n\n            dateFieldName: function(options) {\n                return this.messages[options.type] || {};\n            }\n        });\n\n        function buildKeys() {\n            const cultureInfo = kendo.culture();\n            let keys = [];\n\n            keys.push(cultureInfo.calendars.standard[\"/\"]);\n            keys.push(cultureInfo.calendars.standard[\":\"]);\n\n            return keys;\n        }\n\n        function getCultureFormat(culture, format) {\n            if (!culture) {\n                return format;\n            }\n            const cultureInfo = kendo.getCulture(culture);\n            return cultureInfo.calendars.standard.patterns[format] || format;\n        }\n\n        var DateInput$1 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n\n                options = that.options;\n                options.format = kendo._extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.d);\n                options.min = kendo.parseDate(element.attr(\"min\")) || kendo.parseDate(options.min);\n                options.max = kendo.parseDate(element.attr(\"max\")) || kendo.parseDate(options.max);\n\n                var wrapperClass = (element.parent().attr(\"class\") || \"\");\n                var skipStyling = wrapperClass.indexOf(\"picker\") >= 0 && wrapperClass.indexOf(\"rangepicker\") < 0;\n                var initialValue = that.options.value || element.val();\n\n                if (skipStyling) {\n                    that.wrapper = that.element.parent();\n                } else {\n                    that.wrapper = element.wrap(\"<span class='k-dateinput k-input'></span>\").parent();\n                    that.wrapper.addClass(element[0].className).removeClass('input-validation-error');\n                }\n                that.wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    height: element[0].style.height\n                });\n\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n\n                that._form();\n\n                that.dateInputInstance = new kendo_dateinputsCommon_cmn_chunk_js.D(element[0], {\n                    format: getCultureFormat(options.culture, options.format),\n                    autoCorrectParts: options.autoCorrectParts,\n                    autoSwitchKeys: options.autoSwitchKeys.length ? options.autoSwitchKeys : buildKeys(),\n                    enableMouseWheel: options.enableMouseWheel,\n                    twoDigitYearMax: options.twoDigitYearMax,\n                    steps: options.steps,\n                    formatPlaceholder: options.messages,\n                    events: {\n                        inputEnd: function(e) {\n                            if (e.error) {\n                                that._blinkInvalidState();\n                            }\n                        },\n                        keydown: function(e) {\n                            if (!e.event.keyCode) {\n                                e.preventDefault();\n                                return;\n                            }\n                            if (e.event.keyCode == kendo.keys.UP || e.event.keyCode == kendo.keys.DOWN) {\n                                setTimeout(function() {\n                                    that.element.trigger(CHANGE);\n                                });\n                            }\n                        },\n                        blur: function(e) {\n                            that._change();\n                            e.preventDefault();\n                        },\n                    },\n                    intlService: new IntlService({\n                        culture: options.culture,\n                        messages: that.options.messages\n                    }),\n                    autoSwitchParts: options.autoSwitchParts,\n                    autoFill: options.autoFill\n                });\n\n                that._emptyMask = this.element.val();\n                if (options.value) {\n                    that.value(options.value);\n                }\n\n                that.element\n                    .addClass(\"k-input-inner\")\n                    .attr(\"autocomplete\", \"off\")\n                    .on(\"focus\" + ns, function() {\n                        that.wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function() {\n                        that.wrapper.removeClass(FOCUSED);\n                    });\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n                that.value(initialValue);\n                if (!skipStyling) {\n                    that._applyCssClasses();\n                }\n\n                if (options.label) {\n                    that._label();\n                }\n                that.element.removeAttr(\"style\");\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"DateInput\",\n                autoAdjust: true,\n                autoCorrectParts: true,\n                autoSwitchKeys: [],\n                autoSwitchParts: false,\n                enableMouseWheel: true,\n                culture: \"\",\n                value: \"\",\n                format: \"\",\n                min: new Date(1900, 0, 1),\n                max: new Date(2099, 11, 31),\n                messages: {\n                    \"year\": \"year\",\n                    \"month\": \"month\",\n                    \"day\": \"day\",\n                    \"weekday\": \"day of the week\",\n                    \"hour\": \"hours\",\n                    \"minute\": \"minutes\",\n                    \"second\": \"seconds\",\n                    \"milliseconds\": \"milliseconds\",\n                    \"dayperiod\": \"AM/PM\"\n                },\n                size: \"medium\",\n                steps: {\n                    year: 1,\n                    month: 1,\n                    day: 1,\n                    hour: 1,\n                    minute: 1,\n                    second: 1,\n                    millisecond: 1,\n                },\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null,\n                autoFill: false\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            min: function(value) {\n                if (value !== undefined$1) {\n                    this.options.min = value;\n                } else {\n                    return this.options.min;\n                }\n            },\n\n            max: function(value) {\n                if (value !== undefined$1) {\n                    this.options.max = value;\n                } else {\n                    return this.options.max;\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n                that.dateInputInstance.destroy();\n                that.dateInputInstance = null;\n\n                that.dateInputInstance = new kendo_dateinputsCommon_cmn_chunk_js.D(this.element[0], {\n                    format: getCultureFormat(that.options.culture, that.options.format),\n                    autoSwitchKeys: that.options.autoSwitchKeys.length ? that.options.autoSwitchKeys : buildKeys(),\n                    autoCorrectParts: that.options.autoCorrectParts,\n                    enableMouseWheel: that.options.enableMouseWheel,\n                    steps: that.options.steps,\n                    twoDigitYearMax: that.options.twoDigitYearMax,\n                    formatPlaceholder: that.options.messages,\n                    events: {\n                        inputEnd: function(e) {\n                            if (e.error) {\n                                that._blinkInvalidState();\n                            }\n                        },\n                        keydown: function(e) {\n                            if (e.event.keyCode == kendo.keys.UP || e.event.keyCode == kendo.keys.DOWN) {\n                                setTimeout(function() {\n                                    that.element.trigger(CHANGE);\n                                });\n                            }\n                        },\n                        blur: function(e) {\n                            that._change();\n                            e.preventDefault();\n                        },\n                    },\n                    intlService: new IntlService({\n                        culture: that.options.culture,\n                        messages: that.options.messages\n                    }),\n                    autoSwitchParts: that.options.autoSwitchParts,\n                    autoFill: that.options.autoFill\n                });\n            },\n\n            destroy: function() {\n                var that = this;\n                that.element.off(ns);\n                that.dateInputInstance.destroy();\n\n                if (that._formElement) {\n                    that._formElement.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                if (that._validationIcon) {\n                    that._validationIcon.remove();\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            value: function(value) {\n                if (value === undefined$1) {\n                    return this.dateInputInstance.value;\n                }\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (objectToString.call(value) !== \"[object Date]\") {\n                    value = kendo.parseDate(value, this.options.format, this.options.culture);\n                }\n\n                if (value && !value.getTime()) {\n                    value = null;\n                }\n\n                this.dateInputInstance.writeValue(value);\n\n                this._oldValue = value;\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.refresh();\n                }\n            },\n\n            _hasDateInput: function() {\n\n                return this._emptyMask !== this.element.val();\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that,\n                    floatCheck: () => {\n                        if (!that.value() && (!that._hasDateInput() || that.element.val() === \"\") && document.activeElement !== that.element[0]) {\n                            this.element.val(\"\");\n                            return true;\n                        }\n\n                        return false;\n                    }\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            _bindInput: function() {\n                var that = this;\n                that.element\n                    .on(\"focus\" + ns, function() {\n                        that.wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function() {\n                        that.wrapper.removeClass(FOCUSED);\n                    });\n\n                if (this.dateInputInstance) {\n                    this.dateInputInstance.bindEvents();\n                }\n            },\n\n            _unbindInput: function() {\n                this.element\n                    .off(\"focus\" + ns)\n                    .off(\"focusout\" + ns);\n\n                if (this.dateInputInstance) {\n                    this.dateInputInstance.unbindEvents();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var disable = options.disable;\n                var readonly = options.readonly;\n                var wrapper = that.wrapper;\n\n                that._unbindInput();\n\n                if (!readonly && !disable) {\n                    wrapper.removeClass(STATEDISABLED);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY);\n                    }\n\n                    that._bindInput();\n                } else {\n                    if (disable) {\n                        wrapper.addClass(STATEDISABLED);\n                        element.attr(DISABLED, disable);\n                        if (element && element.length) {\n                            element[0].removeAttribute(READONLY);\n                        }\n                    }\n                    if (readonly) {\n                        element.attr(READONLY, readonly);\n                    }\n                }\n            },\n\n            _change: function() {\n                let that = this,\n                    oldValue = that._oldValue,\n                    value = that.value(),\n                    autoAdjust = that.options.autoAdjust;\n\n                if (autoAdjust && value && that.min() && value < that.min()) {\n                    that.value(that.min());\n                    value = that.value();\n                }\n                if (autoAdjust && value && that.max() && value > that.max()) {\n                    that.value(that.max());\n                    value = that.value();\n                }\n\n                if (oldValue && value && value.getTime() !== oldValue.getTime() ||\n                    oldValue && !value ||\n                    !oldValue && value\n                ) {\n                    that._oldValue = value;\n                    that.trigger(CHANGE, { blur: true });\n                    that.element.trigger(CHANGE);\n                }\n            },\n\n\n            _blinkInvalidState: function() {\n                var that = this;\n\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n            },\n\n            _addInvalidState: function() {\n                var that = this;\n\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass(\"k-hidden\");\n            },\n\n            _removeInvalidState: function() {\n                var that = this;\n\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass(\"k-hidden\");\n                that._invalidStateTimeout = null;\n            },\n\n\n            _form: function() {\n                var that = this;\n                var element = that.element;\n                var formId = element.attr(\"form\");\n                var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n                var initialValue = element[0].value;\n\n                if (!initialValue && that.options.value) {\n                    initialValue = that.options.value;\n                }\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(initialValue);\n                        });\n                    };\n\n                    that._formElement = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _paste: function(e) {\n                e.preventDefault();\n            },\n\n\n        });\n\n        kendo.cssProperties.registerPrefix(\"DateInput\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"DateInput\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(DateInput$1);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}