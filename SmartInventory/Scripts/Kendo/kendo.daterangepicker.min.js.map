{"version":3,"sources":["raw-js/kendo.daterangepicker.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Daterangepicker","this","$","undefined$1","window","ui","html","keys","mediaQuery","Widget","MONTH","OPEN","CLOSE","CHANGE","template","extend","support","mobileOS","ARIA_EXPANDED","ARIA_DISABLED","ARIA_ACTIVEDESCENDANT","STATEDISABLED","HIDDEN","DISABLED","READONLY","ARIA_HIDDEN","START","END","ns","CLICK","MOUSEDOWN","UP","mouseAndTouchPresent","applyEventMap","slice","parse","parseDate","DateRangeView","options","DateView","call","preventDefault","e","prototype","Object","create","_calendar","div","that","calendar","contentElement","popup","_content","element","adaptiveMode","bigScreenMQL","mediaQueryList","matches","append","find","attr","guid","appendTo","MultiViewCalendar","size","orientation","views","_setOptions","navigate","_value","_current","start","_range","range","on","_click","bind","selectRange","setOptions","allowReverse","focusOnNav","change","culture","dates","depth","footer","format","selectable","max","min","month","weekNumber","disableDates","end","rangeSelectable","clear","move","key","keyCode","selectIsClicked","ctrlKey","DOWN","ENTER","handled","altKey","open","close","visible","ESC","_cell","hasClass","_move","autoClose","ios","android","browser","currentTarget","closest","is","DateRangePicker","init","fn","disabled","_initialOptions","_buildHTML","_changeTriggered","_initializeDateView","_initializeDateViewProxy","onChange","_ariaTemplate","ARIATemplate","_reset","_aria","_inputs","_keydown","_initializeDateInputs","_expandButton","_clearButton","enable","readonly","name","labels","autoAdjust","calendarButton","clearButton","Date","animation","startField","endField","valueType","text","messages","startLabel","endLabel","fillMode","rounded","events","off","dateView","role","_dateViewID","autocomplete","startInput","_startInput","endInput","_endInput","_startClearButton","icon","tabIndex","insertAfter","_clearValue","_endClearButton","startInputButton","endInputButton","next","renderButton","shape","_startDateButton","_expandButtonClick","_endDateButton","_preventInputAction","_toggleClearButton","target","state","toggleClass","type","data","startDateInput","_startDateInput","endDateInput","_endDateInput","value","trigger","stopImmediatePropagation","_updateARIA","date","length","removeAttr","_dateInViews","contains","document","activeElement","_updateAria","_inputFocus","_currentTarget","_startChange","startValue","sender","endValue","_endChange","blur","dateInputInstance","focus","destroy","id","anchor","wrapper","mode","reverse","resetOnStart","setTimeout","inputOptions","empty","kendoDateInput","getKendoDateInput","_startChangeHandler","_endChangeHandler","addClass","htmlEncode","eq","add","_option","option","parseFormats","formId","form","_resetHandler","_form","_editable","inputs","disable","removeClass","each","item","removeAttribute","unbind","_startDateClear","_endDateClear","_createDateViewProxy","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","defineProperty"],"mappings":"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","file":"kendo.daterangepicker.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.multiviewcalendar.js'), require('kendo.datepicker.js'), require('kendo.html.button.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.multiviewcalendar', 'kendo.datepicker', 'kendo.html.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Daterangepicker = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"daterangepicker\",\n        name: \"DateRangePicker\",\n        category: \"web\",\n        description: \"Date range picker.\",\n        depends: [ \"core\", \"multiviewcalendar\", \"datepicker\", \"html.button\",]\n    };\n\n    (function($, undefined$1) {\n        let kendo = window.kendo,\n            ui = kendo.ui,\n            html = kendo.html,\n            keys = kendo.keys,\n            mediaQuery = kendo.mediaQuery,\n            Widget = ui.Widget,\n            MONTH = \"month\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            DIV = \"<div />\",\n            MIN = \"min\",\n            MAX = \"max\",\n            template = kendo.template,\n            extend = $.extend,\n            ID = \"id\",\n            support = kendo.support,\n            mobileOS = support.mobileOS,\n            SELECTED = \"k-selected\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            STATEDISABLED = \"k-disabled\",\n            HIDDEN = \"k-hidden\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            START = \"start\",\n            END = \"end\",\n            ns = \".kendoDateRangePicker\",\n            CLICK = \"click\" + ns,\n            MOUSEDOWN = \"mousedown\" + ns,\n            UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n            parse = kendo.parseDate;\n\n        var DateRangeView = function(options) {\n            kendo.DateView.call(this, options);\n        };\n\n        DateRangeView.prototype = Object.create(kendo.DateView.prototype);\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        DateRangeView.prototype._calendar = function() {\n            var that = this;\n            var calendar = that.calendar;\n            var options = that.options;\n            var div;\n\n            if (!calendar) {\n                var contentElement = that.popup._content || that.popup.element;\n                if (options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                    contentElement = contentElement.append($('<div class=\"k-scrollable-wrap\"></div>')).find(\".k-scrollable-wrap\");\n                }\n\n                div = $(DIV).attr(ID, kendo.guid())\n                            .appendTo(contentElement);\n\n                that.calendar = calendar = new ui.MultiViewCalendar(div, {\n                    size: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"large\" : options.size || \"medium\",\n                    orientation: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"vertical\" : \"horizontal\",\n                    views: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? 1 : 2,\n                });\n\n                that._setOptions(options);\n\n                calendar.navigate(that._value || that._current, options.start);\n\n                that._range = that._range || options.range || {};\n\n                div.on(MOUSEDOWN, preventDefault)\n                   .on(CLICK, \"td:has(.k-link)\", that._click.bind(that));\n\n                that.calendar.selectRange(that._range);\n            }\n        };\n\n        DateRangeView.prototype._setOptions = function(options) {\n            var that = this;\n            this.calendar.setOptions({\n                allowReverse: options.allowReverse,\n                focusOnNav: false,\n                change: options.change,\n                culture: options.culture,\n                dates: options.dates,\n                depth: options.depth,\n                footer: options.footer,\n                format: options.format,\n                selectable: options.selectable,\n                max: options.max,\n                min: options.min,\n                month: options.month,\n                weekNumber: options.weekNumber,\n                start: options.start,\n                disableDates: options.disableDates,\n                range: options.range,\n                size: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"large\" : options.size || \"medium\"\n            });\n        };\n\n        DateRangeView.prototype.range = function(range) {\n            this._range = range;\n\n            if (this.calendar) {\n                if (!range.start && !range.end) {\n                    this.calendar.selectRange(range);\n                    this.calendar.rangeSelectable.clear();\n                } else {\n                    this.calendar.selectRange(range);\n                }\n            }\n        };\n\n        DateRangeView.prototype.move = function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var calendar = that.calendar;\n            var selectIsClicked = e.ctrlKey && key == keys.DOWN || key == keys.ENTER;\n            var handled = false;\n\n            if (e.altKey) {\n                if (key == keys.DOWN) {\n                    that.open();\n                    e.preventDefault();\n                    handled = true;\n                } else if (key == keys.UP) {\n                    that.close();\n                    e.preventDefault();\n                    handled = true;\n                }\n\n            } else if (that.popup.visible()) {\n\n                if (key == keys.ESC || (selectIsClicked && calendar._cell.hasClass(SELECTED))) {\n                    that.close();\n                    e.preventDefault();\n                    return true;\n                }\n\n                that._current = calendar._move(e);\n\n                handled = true;\n            }\n\n            return handled;\n        };\n\n        DateRangeView.prototype._click = function(e) {\n\n            if (!this.options.autoClose) {\n                return;\n            }\n\n            if (mobileOS.ios || (mobileOS.android && (mobileOS.browser == \"firefox\" || mobileOS.browser == \"chrome\"))) {\n                if (this._range && this._range.end) {\n                    this.close();\n                }\n            }\n            else if (this._range && this._range.start && this._range.end && $(e.currentTarget).closest(\".k-calendar-view\").is(\".k-calendar-monthview\")) {\n                this.close();\n            }\n        };\n\n        kendo.DateRangeView = DateRangeView;\n\n        var DateRangePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var disabled;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n                that._initialOptions = extend({}, options);\n\n                that._buildHTML();\n\n                that._range = that.options.range;\n                that._changeTriggered = false;\n\n                that._initializeDateView();\n                that._initializeDateViewProxy = that._initializeDateView.bind(that);\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                that.bigScreenMQL.onChange(()=> {\n                    that._initializeDateViewProxy();\n                });\n\n                that._ariaTemplate = template(this.options.ARIATemplate).bind(that);\n                that._reset();\n                that._aria();\n\n                that._inputs\n                    .on(UP + ns, that._click.bind(that))\n                    .on(\"keydown\" + ns, that._keydown.bind(that));\n\n                that._initializeDateInputs();\n\n                that._expandButton();\n                that._clearButton();\n\n                disabled = element.is(\"[disabled]\");\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n            },\n\n            options: {\n                name: \"DateRangePicker\",\n                labels: true,\n                autoAdjust: true,\n                allowReverse: false,\n                autoClose: true,\n                calendarButton: false,\n                clearButton: false,\n                footer: \"\",\n                format: \"\",\n                culture: \"\",\n                min: new Date(1900, 0, 1),\n                max: new Date(2099, 11, 31),\n                start: MONTH,\n                depth: MONTH,\n                adaptiveMode: \"none\",\n                animation: {},\n                month: {},\n                startField: \"\",\n                endField: \"\",\n                dates: [],\n                disableDates: null,\n                range: null,\n                ARIATemplate: ({ valueType, text }) => `Current focused ${valueType} is ${text}`,\n                weekNumber: false,\n                messages: {\n                    startLabel: \"Start\",\n                    endLabel: \"End\"\n                },\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\"\n            },\n\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(that, options);\n\n                options = that.options;\n\n                options.min = parse(options.min);\n                options.max = parse(options.max);\n                that._inputs.off(ns);\n\n                that._initializeDateInputs();\n                that.dateView.setOptions(options);\n                that._expandButton();\n                that._clearButton();\n                that._range = options.range;\n            },\n\n            _aria: function() {\n                this._inputs\n                    .attr({\n                        role: \"combobox\",\n                        \"aria-haspopup\": \"grid\",\n                        \"aria-expanded\": false,\n                        \"aria-controls\": this.dateView._dateViewID,\n                        \"autocomplete\": \"off\"\n                    });\n            },\n\n            _clearButton: function() {\n                let that = this,\n                    options = that.options,\n                    startInput = that._startInput,\n                    endInput = that._endInput,\n                    range = that.range();\n\n                if (!options.clearButton) {\n                    return;\n                }\n\n                if (!that._startClearButton) {\n                    that._startClearButton = $(`<span unselectable=\"on\" class=\"k-clear-value ${range && range.start ? '' : 'k-hidden'}\" title=\"Clear the start date value\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                        \"role\": \"button\",\n                        \"tabIndex\": -1\n                    }).insertAfter(startInput).on(\"click\", that._clearValue.bind(that));\n                }\n\n                if (!that._endClearButton) {\n                    that._endClearButton = $(`<span unselectable=\"on\" class=\"k-clear-value ${range && range.start ? '' : 'k-hidden'}\" title=\"Clear the end date value\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                        \"role\": \"button\",\n                        \"tabIndex\": -1\n                    }).insertAfter(endInput).on(\"click\", that._clearValue.bind(that));\n                }\n            },\n\n            _expandButton: function() {\n                let that = this,\n                    startInput = that._startInput,\n                    endInput = that._endInput,\n                    options = that.options,\n                    startInputButton,\n                    endInputButton;\n\n                if (!options.calendarButton) {\n                    return;\n                }\n\n                startInputButton = startInput.next(\"button.k-input-button\");\n                endInputButton = endInput.next(\"button.k-input-button\");\n\n                if (!startInputButton[0]) {\n                    startInputButton = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                        icon: \"calendar\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(startInput);\n                }\n\n                if (!endInputButton[0]) {\n                    endInputButton = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                        icon: \"calendar\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(endInput);\n                }\n\n                that._startDateButton = startInputButton.attr({\n                    \"role\": \"button\"\n                }).on(CLICK, that._expandButtonClick.bind(that));\n\n                that._endDateButton = endInputButton.attr({\n                    \"role\": \"button\"\n                }).on(CLICK, that._expandButtonClick.bind(that));\n            },\n\n            _click: function() {\n                let that = this,\n                    options = that.options;\n\n                if (options.calendarButton) {\n                    return;\n                }\n\n                if (!that._preventInputAction && !that.dateView.popup.visible()) {\n                    that.dateView.open();\n                }\n            },\n\n            _toggleClearButton: function(target, state) {\n                let that = this;\n\n                if (!target || !that.options.clearButton) {\n                    return;\n                }\n\n                if (target === START) {\n                    that._startClearButton.toggleClass(HIDDEN, !state);\n                }\n\n                if (target === END) {\n                    that._endClearButton.toggleClass(HIDDEN, !state);\n                }\n            },\n\n            _clearValue: function(e) {\n                let that = this,\n                    target = $(e.target),\n                    type = target.closest(\".k-input\").find(\".k-input-inner\").data(\"input\"),\n                    startDateInput = that._startDateInput,\n                    endDateInput = that._endDateInput,\n                    range = that.range();\n\n                if (type === START) {\n                    startDateInput.value(null);\n                    startDateInput.trigger(CHANGE);\n                    that.range({ start: null, end: range.end });\n                }\n\n                if (type === END) {\n                    endDateInput.value(null);\n                    endDateInput.trigger(CHANGE);\n                    that.range({ start: range.start, end: null });\n                }\n\n                that._toggleClearButton(type, false);\n            },\n\n            _expandButtonClick: function(e) {\n                let that = this;\n\n                if (!that._preventInputAction && !that.dateView.popup.visible()) {\n                    that.dateView.open();\n                    $(e.target).closest(\".k-input\").find(\".k-input-inner\").trigger(\"focus\");\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    dateView = that.dateView,\n                    handled = false;\n\n                if (that._preventInputAction) {\n                    e.stopImmediatePropagation();\n                    return;\n                }\n\n                handled = dateView.move(e);\n                that._updateARIA(dateView._current);\n\n                if (handled && e.stopImmediatePropagation) {\n                    e.stopImmediatePropagation();\n                }\n            },\n\n            _updateARIA: function(date) {\n                var that = this;\n                var calendar = that.dateView.calendar;\n\n                if (that._inputs && that._inputs.length) {\n                    that._inputs.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (calendar) {\n                    if (date && !calendar._dateInViews(date)) {\n                        calendar.navigate(date);\n                    }\n\n                    if ($.contains(that.element[0], document.activeElement)) {\n                        that._inputs.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                    }\n                }\n            },\n\n            _inputFocus: function(e) {\n                let that = this, range = that.range();\n\n                if (that._currentTarget !== $(e.target).data(\"input\")) {\n                    that._currentTarget = $(e.target).data(\"input\");\n\n                    if (range) {\n                        range.start = that._startDateInput.value();\n                        range.end = that._endDateInput.value();\n                        that.range(range);\n                    } else {\n                        that.range({ start: null, end: null });\n                    }\n                }\n            },\n\n            _startChange: function(e) {\n                var that = this;\n                var input = e.sender;\n                var startValue = input.value();\n                var endValue = that._endDateInput.value();\n\n                if (that.options.disableDates(startValue)) {\n                    e.sender.value(null);\n                    startValue = null;\n                }\n\n                that.range({ start: startValue, end: endValue });\n\n                if (!that._changeTriggered) {\n                    that.trigger(CHANGE);\n                }\n\n                that._toggleClearButton(START, startValue !== null);\n            },\n\n            _endChange: function(e) {\n                var that = this;\n                var input = e.sender;\n                var endValue = input.value();\n                var startValue = that._startDateInput.value();\n\n                if (that.options.disableDates(endValue)) {\n                    e.sender.value(null);\n                    endValue = null;\n                }\n\n                that.range({ start: startValue, end: endValue });\n\n                if (!that._changeTriggered) {\n                    that.trigger(CHANGE);\n                }\n\n                if (!e.blur) {\n                    if (that._currentTarget === END) {\n                        if (!startValue || !that.options.autoClose) {\n                            that._startDateInput.dateInputInstance.focus();\n                        } else {\n                            that._endDateInput.dateInputInstance.focus();\n                        }\n                    } else {\n                        if (!endValue || !that.options.autoClose) {\n                            that._endDateInput.dateInputInstance.focus();\n                        } else {\n                            that._startDateInput.dateInputInstance.focus();\n                        }\n                    }\n                }\n\n                that._toggleClearButton(END, endValue !== null);\n            },\n            _initializeDateView: function() {\n                var that = this;\n                var div;\n\n                if (that.dateView) {\n                    that.dateView.destroy();\n                    that.dateView = null;\n                }\n\n                that.dateView = new DateRangeView(extend({}, that.options, {\n                    id: that.element.attr(ID),\n                    anchor: that.wrapper,\n                    views: 2,\n                    selectable: {\n                        mode: \"range\",\n                        reverse: that.options.allowReverse,\n                        resetOnStart: false\n                    },\n                    value: that._range?.start || that._range?.end,\n                    range: that._range,\n                    change: function() {\n                        var range = this.selectRange();\n                        that.range(range);\n                        that.trigger(CHANGE);\n                        that._changeTriggered = true;\n                        that._startDateInput.trigger(CHANGE);\n                        that._endDateInput.trigger(CHANGE);\n                        that._changeTriggered = false;\n                    },\n                    close: function(e) {\n                        let range = that.range();\n                        if (that.trigger(CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            that._inputs.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n\n                            setTimeout(function() {\n                                if (that._inputs) {\n                                    that._inputs.removeAttr(ARIA_ACTIVEDESCENDANT);\n                                }\n\n                                if (range && that.dateView && that.dateView.calendar && that.dateView.calendar.rangeSelectable) {\n                                    that.range(range);\n                                }\n                            });\n                        }\n                    },\n                    open: function(e) {\n                        if (that.trigger(OPEN)) {\n                            e.preventDefault();\n                        } else {\n                            that._inputs.attr(ARIA_EXPANDED, true);\n                            div.attr(ARIA_HIDDEN, false);\n                            that._updateARIA();\n                        }\n                    }\n                }));\n\n                div = that.dateView.div;\n            },\n            _initializeDateInputs: function() {\n                var that = this;\n                var options = that.options;\n                var range = options.range || {};\n                var inputOptions = {\n                    autoAdjust: options.autoAdjust,\n                    footer: options.footer,\n                    format: options.format,\n                    culture: options.culture,\n                    min: options.min,\n                    max: options.max,\n                    start: options.start,\n                    startField: options.startField,\n                    endField: options.endField,\n                    depth: options.depth,\n                    animation: options.animation,\n                    month: options.month,\n                    dates: options.dates,\n                    disableDates: options.disableDates,\n                    ARIATemplate: options.ARIATemplate,\n                    weekNumber: options.weekNumber,\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    rounded: options.rounded\n                };\n\n                if (that._startDateInput) {\n                    that._startDateInput.destroy();\n                    that._endDateInput.destroy();\n                    that.wrapper.empty();\n                    that._buildHTML();\n                    that._inputs\n                        .on(UP + ns, that._click.bind(that))\n                        .on(\"keydown\" + ns, that._keydown.bind(that));\n                }\n                that._startDateInput = that._startInput.kendoDateInput(extend(true, inputOptions, { value: range.start })).getKendoDateInput();\n                that._endDateInput = that._endInput.kendoDateInput(extend(true, inputOptions, { value: range.end })).getKendoDateInput();\n\n                that._startChangeHandler = that._startChange.bind(that);\n                that._startDateInput.bind(CHANGE, that._startChangeHandler);\n\n                that._endChangeHandler = that._endChange.bind(that);\n                that._endDateInput.bind(CHANGE, that._endChangeHandler);\n\n                that._inputs.on(\"focus\" + ns, that._inputFocus.bind(that));\n            },\n\n            _buildHTML: function() {\n                var that = this;\n                var element = that.element;\n                var id;\n\n                if (!that.wrapper) {\n                    that.wrapper = element.addClass(\"k-daterangepicker\");\n                }\n\n                if (that.options.labels) {\n                    id = kendo.guid();\n                    $('<span class=\"k-floating-label-container\"><input data-input=\"' + START + '\" id=\"' + id + '\"/><label for=\"' + id + '\" class=\"k-floating-label\">' + kendo.htmlEncode(that.options.messages.startLabel) + '</label></span>').appendTo(that.wrapper);\n                    id = kendo.guid();\n                    $('<span>&nbsp;</span><span class=\"k-floating-label-container\"><input data-input=\"' + END + '\" id=\"' + id + '\"/><label for=\"' + id + '\" class=\"k-floating-label\">' + kendo.htmlEncode(that.options.messages.endLabel) + '</label></span>').appendTo(that.wrapper);\n                } else {\n                    $('<input data-input=\"' + START + '\" /><span>&nbsp;</span><input data-input=\"' + END + '\" />').appendTo(that.wrapper);\n                }\n\n                that._startInput = that.wrapper.find(\"input\").eq(0);\n                that._endInput = that.wrapper.find(\"input\").eq(1);\n\n                if (that.options.startField !== \"\") {\n                    that._startInput.attr(kendo.attr(\"bind\"), \"value: \" + that.options.startField);\n    \t\t\t\tthat._startInput.attr(\"name\", that.options.startField);\n                }\n\n                if (that.options.endField !== \"\") {\n                    that._endInput.attr(kendo.attr(\"bind\"), \"value: \" + that.options.endField);\n    \t\t\t\tthat._endInput.attr(\"name\", that.options.endField);\n                }\n\n                that._inputs = that._startInput.add(that._endInput);\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options,\n                    startDateInput = that._startDateInput,\n                    endDateInput = that._endDateInput;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n\n                if (!value) {\n                    return;\n                }\n\n                options[option] = new Date(+value);\n                that.dateView[option](value);\n\n                if (startDateInput) {\n                    startDateInput[option](value);\n                }\n\n                if (endDateInput) {\n                    endDateInput[option](value);\n                }\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    inputs = that._inputs,\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    that.wrapper\n                        .removeClass(STATEDISABLED);\n\n                    $.each(inputs, function(key, item) {\n                        item.removeAttribute(DISABLED);\n                        item.removeAttribute(READONLY);\n                    });\n\n                    inputs.attr(ARIA_DISABLED, false);\n                    that._preventInputAction = false;\n                } else {\n                    that.wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                        inputs.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    that._preventInputAction = true;\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._startDateInput) {\n                    that._startDateInput.unbind(CHANGE, that._startChangeHandler);\n                    that._startDateInput.destroy();\n                    that._startChangeHandler = null;\n                }\n\n                if (that._endDateInput) {\n                    that._endDateInput.unbind(CHANGE, that._endChangeHandler);\n                    that._endDateInput.destroy();\n                    that._endChangeHandler = null;\n                }\n\n                if (that._startDateButton) {\n                    that._startDateButton.off(CLICK, that._expandButtonClick);\n                }\n\n                if (that._endDateButton) {\n                    that._endDateButton.off(CLICK, that._expandButtonClick);\n                }\n\n                if (that._startDateClear) {\n                    that._startDateClear.off(CLICK, that._clearValue);\n                }\n\n                if (that._endDateClear) {\n                    that._endDateClear.off(CLICK, that._clearValue);\n                }\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                that._inputs.off(ns);\n                that._inputs = null;\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                }\n\n                that._createDateViewProxy = null;\n\n                that.dateView.destroy();\n\n                that.element.off(ns);\n\n                Widget.fn.destroy.call(that);\n            },\n\n            range: function(range) {\n                let that = this, target = that._currentTarget || START;\n\n                if (range === undefined$1) {\n                    return that._range;\n                }\n\n                that._range = range;\n                that._range[\"target\"] = target;\n                that.dateView.range({ start: null, end: null, target: target });\n                if (!range) {\n                    that._startDateInput.value(null);\n                    that._endDateInput.value(null);\n                }\n\n                that._startDateInput.value(range.start ? range.start : null);\n                that._endDateInput.value(range.end ? range.end : null);\n\n                if (target === START) {\n                    that.dateView.range({ start: range.start, end: range.end || null, target: target });\n                }\n\n                if (target === END) {\n                    that.dateView.range({ start: range.start || null, end: range.end, target: target });\n                }\n            },\n\n            open: function() {\n                this.dateView.open();\n            },\n\n            close: function() {\n                this.dateView.close();\n            },\n\n            min: function(value) {\n                return this._option(MIN, value);\n            },\n\n            max: function(value) {\n                return this._option(MAX, value);\n            },\n\n            readonly: function(readonly) {\n                this._startDateInput.readonly(readonly);\n                this._endDateInput.readonly(readonly);\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n            },\n\n            enable: function(enable) {\n                this._startDateInput.enable(enable);\n                this._endDateInput.enable(enable);\n\n                if (!enable) {\n                    this.close();\n                }\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n            }\n        });\n\n        kendo.ui.plugin(DateRangePicker);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}