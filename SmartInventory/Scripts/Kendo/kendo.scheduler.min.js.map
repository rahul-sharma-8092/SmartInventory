{"version":3,"sources":["raw-js/kendo.scheduler.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Scheduler","this","$","undefined$1","window","date","MS_PER_DAY","getDate","getMilliseconds","recurrence","encode","htmlEncode","keys","ui","Widget","DataBoundWidget","STRING","Popup","Calendar","DataSource","data","isPlainObject","extend","toString","Object","prototype","isArray","Array","NS","CLICK","MOUSEDOWN","TOUCHSTART","support","pointers","TOUCHMOVE","TOUCHEND","MOUSEMOVE","mousemove","CHANGE","PROGRESS","ERROR","CANCEL","REMOVE","RESET","SAVE","EDIT","DISABLED","FOCUSEDSTATE","valueStartEndBoundRegex","MIN_SCREEN","TODAY","Date","EXCEPTION_SEPARATOR","OLD_EXCEPTION_SEPARATOR_REGEXP","RECURRENCE_EXCEPTION","EDITRECURRING","COMMANDBUTTONTMPL","className","attr","text","icon","fillMode","themeColor","html","renderButton","VIEWS_DROPDOWN_TEMPLATE","template","label","views","type","map","view","title","join","DEFAULT_TOOLS","pdf","name","attributes","class","pdfMobile","showText","today","previous","groupClass","next","current","search","refresh","create","calendar","previousMobile","nextMobile","currentMobile","togglable","group","defaultDesktopTools","defaultMobileToolsFirst","defaultMobileToolsSecond","timezoneButtonText","model","message","startTimezone","endTimezone","appendTimezoneAttr","attrs","options","timezone","appendValidDateValidator","validationRules","fields","field","validation","validDateRule","validDateValidator","appendDateCompareValidator","dateCompareRule","dateCompare","convertData","method","removeUid","event","idx","length","startOffset","endOffset","start","getTimezoneOffset","end","convert","uid","getTime","getOccurrenceByUid","SchedulerDataReader","Class","init","schema","reader","originalFunction","wrapDataAccess","bind","serialize","call","ObservableArray","wrapDataSerialization","errors","parse","total","groups","aggregates","applyZone","fromZone","toZone","remove","input","filter","picker","widgetInstance","parseDate","val","format","value","SchedulerEvent","Model","that","fn","_defaultId","defaults","idField","_time","fieldTime","toUtcTime","_date","clone","updateUid","constructor","toJSON","duration","offset","MS_PER_MINUTE","expand","zone","update","eventInfo","set","_startTime","_endTime","isMultiDay","isAllDay","isException","isNew","recurrenceId","isOccurrence","isRecurring","recurrenceRule","isRecurrenceHead","id","toOccurrence","recurrenceException","obj","shouldSerialize","key","milliseconds","setTime","defaultValue","required","validDate","container","closest","startInput","find","endInput","startPicker","endPicker","editable","untilDateCompare","until","description","SchedulerDataSource","modelBase","apply","logic","filters","operator","Query","events","concat","expandAll","toArray","cancelChanges","_removeExceptionDate","insert","index","_createNewModel","accept","_pushCreated","_addExceptionDate","pushCreate","items","_removeExceptions","slice","item","shift","head","get","replaceRegExp","RegExp","toExceptionString","replace","test","newException","dataSource","Error","defaultCommands","canceledit","destroy","imageClass","iconClass","descriptionEditor","createValidationAttributes","appendTo","wrap","ruleName","rule","modelField","specialRules","datatype","inArray","isFunction","filterResourceEditorData","editor","parentValue","parentValueField","valueField","valueArray","editorValue","isMs","JSON","stringify","forEach","currentValue","indexOf","splice","trigger","bindParentValueChangeHandler","currentEditor","resource","parent","parentElement","ns","parentWidget","getKendoDropDownList","ev","sender","dataParentValueField","dataValueField","on","target","filterMobileResourceEditorData","parentSelectedValue","itemParentValue","getter","removeAttribute","setAttribute","moveEventRange","distance","editors","mobile","dateRange","dateTimeValidate","dateValidate","hide","timezonePopUp","messages","noTimezone","click","kendoMobileTimezoneEditor","optionLabel","kendoMobileRecurrenceEditor","pane","multipleResources","dataTextField","setTimeout","resources","desktop","timezoneEditorButton","visible","toggle","kendoTimezoneEditor","kendoRecurrenceEditor","kendoMultiSelect","valuePrimitive","itemTemplate","disabled","dataColorField","tagTemplate","select","e","dataItem","preventDefault","dataBound","list","i","element","eq","addClass","kendoDropDownList","Editor","Observable","createButton","toggleDateValidationHandler","_toggleDateValidation","isDateTimeInput","shouldValidate","bindAttribute","each","is","allDayEvent","checkHierarchical","windows_zones","push","_initTimezoneEditor","repeat","recurrenceEditor","resourceIndex","parentResource","some","multiple","_buildDesktopEditTemplate","editableFields","renderCheckBox","separateTimezones","editableField","fieldName","fieldTitle","_createEndTimezoneButton","_buildMobileEditTemplate","midPart","_buildEditTemplate","isMobile","settings","Template","templateSettings","unescape","_revertTimezones","_startTimezone","_endTimezone","MobileEditor","arguments","Pane","viewEngine","viewOptions","renderOnInit","wrapInSections","detachOnHide","detachOnDestroy","css","height","animations","left","right","close","unbind","timezoneView","content","kSwitch","endTimezoneRow","last","cancel","timezoneTitle","save","append","contentElement","show","stopPropagation","hasClass","editView","_editPane","navigate","checked","enable","showDialog","actions","buttons","button","action","primary","document","body","kendoDialog","modal","preventScroll","closable","editEvent","updateText","removeText","cancelText","titleText","editorTitle","resetSeries","resetSeriesBtn","deleteBtn","kendoEditable","clearContainer","validateOnBlur","_views","roleSelector","not","purge","PopupEditor","$html","deleteText","applyStylesFromKendoAttributes","kendoWindow","resizable","draggable","userTriggered","position","open","center","cycleForm","popup","_timezonePopup","buttonIndex","wrapper","currentTarget","getKendoWindow","activator","wnd","checkbox","saveButton","cancelButton","timezonePopup","startTimezoneChange","prop","timezoneEditorTitle","focus","_initModel","_wrapper","selectable","_tabindex","_toolbar","_dataSource","_resources","_resizeHandler","resize","_resizable","_movable","_bindResize","_navigation","_selectable","_touchHandlers","_ariaId","guid","_createEditor","mediaQueryList","mediaQuery","onChange","_onMediaChange","toolbar","children","removeClass","_showWatermarkOverlay","_selectedView","toolbarEl","getKendoToolBar","matches","_model","dateForTitle","shortDateForTitle","_unbindResize","off","dataItems","_data","eventsUids","dict","eventsUidsLength","eventsCount","sortedData","_isMobile","mobileOS","_isTouch","originalEvent","pointerType","_isInverseColor","eventElement","_groupsByResource","groupIndex","groupsArray","parentFieldValue","parentField","prevIndex","dataIndex","fieldValue","currentGroupIndex","selectedGroups","selection","_selection","selectedEvents","slots","_selectedSlots","_selectedEvents","_resourceBySlot","_old","clearSelection","groupsByResource","groupedResources","_selectEvents","_select","ranges","rangeStart","_startDate","rangeEnd","addDays","_endDate","timeSlotCollectionCount","toLocalDate","isDaySlot","eventsLength","isGrouped","ctrlKey","_ctrlKey","currentGroup","daySlotCollectionCount","collIdx","getTimeSlotCollection","dayCollIdx","getDaySlotCollection","getAttribute","_createSelection","startX","startY","endX","endY","timeStamp","touchMoveHandler","_touchMove","stop","_touchPosX","_tapPosition","_touchPosY","_userTouched","_scrolling","now","_preventFocus","delta","amplitude","_amplitude","_dragging","Math","abs","_mouseDownSelection","kineticScrollNeeded","animate","scrollTop","_mouseDown","_initialFocus","_shiftKey","_keydown","shiftKey","mouseMoveHandler","_mouseMove","which","isRight","_activeElement","focusElement","_selectFirstSlot","firstSlot","firstAllDay","first","firstContent","_firstEvent","firstEvent","contentEvent","firstEventInAllDay","firstEventInContent","occurrenceByUid","_focusToolbar","oldSelection","oldEventsLength","removeAttr","currentUid","uids","coordinate","changedTouches","verticalScroll","scrollHeight","clientHeight","horizontalScroll","scrollWidth","clientWidth","round","scrollLeft","applyVerticalScroll","applyhorizontalScroll","clearTimeout","_moveTimer","slot","selectionByElement","startDate","endDate","backward","_viewByIndex","_keydownToolbar","keyCode","altKey","DOWN","_showCalendar","_selectedViewName","activeElement","_keydownView","cell","isModifier","arrowKeys","LEFT","RIGHT","UP","isRtl","ENTER","DELETE","BACKSPACE","moveToEvent","HOME","END","_scrollTo","removeEvent","_keydownShortcut","currentDate","toggleFullDay","addEvent","timezoneOffset","_keydownYearView","TAB","F10","_adjustSelectedDate","_keydownAgendaView","move","_keydownChangeView","viewByIndex","viewIndex","_keydownChangeDate","direction","nextDate","previousDate","toolbarIsFocused","ESC","_updateSelection","_updateEventForSelection","_timeSlotInterval","indexOfEvent","autoBind","snap","allDaySlot","min","max","workWeekStart","workWeekEnd","workDays","showWorkHours","startTime","endTime","currentTimeMarker","updateInterval","useLocalTimezone","ongoingEvents","cssClass","enabled","footer","deleteWindowTitle","selectView","ariaSlotLabel","ariaEventLabel","at","to","allDay","prefix","day","week","workWeek","agenda","month","timeline","timelineWeek","timelineWorkWeek","timelineMonth","year","recurrenceMessages","resetSeriesWindowTitle","deleteWindowOccurrence","deleteWindowSeries","editWindowTitle","editWindowOccurrence","editWindowSeries","confirmation","width","orientation","_refreshHandler","_progressHandler","_errorHandler","_resourceRefreshHandler","resourceDS","_resourceProgressHandler","_resourceErrorHandler","_editor","_moveDraggable","_resizeDraggable","add","setDataSource","fetch","siblings","startSlot","endSlot","startResources","clonedEvent","originSlot","originStartTime","clonedEvents","cachedEvents","movable","android","Draggable","ignore","holdToDrag","autoScroll","isTouch","_eventOptionsForMove","inverseColor","evtClone","evtCloneElement","_slotByPosition","x","startLocation","y","range","location","slotIndex","targetSlotElement","top","_updateMoveHint","_removeMoveHint","endResources","_isMultiDrag","evt","updatedEventOptions","eventOptions","_updateEvent","sync","cancelHold","handle","directions","dragstart","_updateEventForResize","drag","dir","currentSlot","originalStart","originalEnd","_updateResizeHint","dragend","dragHandle","_removeResizeHint","setHours","setMinutes","dragcancel","updateEvent","callback","_preventRefresh","_convertDates","getHours","getMinutes","getSeconds","recurrenceHead","getByUid","_showRecurringDialog","eventUid","exception","editRecurring","occurrenceText","seriesText","_modelForContainer","_confirmation","isResetSeries","_isEditorOpened","deleteRecurringConfirmation","deleteSeriesConfirmation","resetSeriesConfirmation","cancelEvent","_editEvent","saveEvent","dirty","_editRecurringDialog","_createPopupEditor","editOccurrence","editSeries","editRecurringMode","_createButton","command","commandName","edit","_set","_attemptRefresh","_deleteRecurringDialog","_removeEvent","occurrence","occurrencesInRange","deleteOccurrence","deleteSeries","createException","deleteOccurrenceConfirmation","createExceptionConfirmation","currentModel","seriesCallback","occurrenceCallback","exeptionCallback","deleteRecurring","_unbindView","_bindView","_viewRemoveHandler","_viewAddHandler","_viewEditHandler","_viewNavigateHandler","isWorkDay","switchWorkDay","_workDayMode","_selectView","_viewActivateHandler","constrainSelection","_renderView","_initialSize","matchMedia","_viewsCount","viewElementToSelect","viewsDropdown","viewsButtonGroup","rebind","viewName","_initializeView","mouseAndTouchPresent","mobileDateForTitle","mobileYearForTitle","force","size","getSize","currentSize","_size","selectedDate","isInDateRange","setFullYear","getFullYear","getMonth","isSettings","overrideOptions","trimOptions","defaultView","selected","hasType","defaultViews","time","resourceFetchArray","_preventRebind","when","then","_requestStart","_error","_progress","progress","resourcePromises","_resourceDataSource","groupName","promises","dataSourceInstance","_bindResourceEvents","isResourceGrouped","_refreshResource","observable","formattedDate","formattedShortDate","_processHandlers","_pdfClickHandler","saveAsPDF","_createClickHandler","_calendarClickHandler","_currentClickHandler","_todayClickHandler","_previousClickHandler","_nextClickHandler","_refreshClickHandler","_viewClickHandler","values","t","_processDefaults","viewsDdl","viewsMobile","viewsButtons","refAttribute","toLowerCase","_viewsButtons","_processToolbarArray","tools","toolbarOptions","commands","grep","unshift","_processViewTools","result","viewsIndex","_processToolbarItems","desktopItems","mobileItems","navigation","main","_processTools","secondToolbar","kendoToolBar","defaultTools","parentMessages","placeholder","throttle","targetElm","anchor","activate","_toggleResize","change","setOptions","depth","copyAnchorStyles","preventRefresh","visibleEndDate","refreshLayout","render","slotByPosition","slotByElement","el","centerX","centerY","resourcesBySlot","plugin","PDFMixin","SCHEDULER_EXPORT","_drawPDF","styles","style","cssText","scheduler","promise","Deferred","table","_drawPDFShadow","avoidLinks","done","args","page","pageNumber","totalPages","notify","resolve","fail","err","reject","always","TimezoneEditor","zones","zones_titles","_zonesQuery","_zoneTitleId","_zoneTitlePicker","_zonePicker","_zoneTitle","_zone","_value","zoneTitle","DropDownList","cascadeFrom","other_zone","ZONETITLEOPTIONTEMPLATE","ZONEOPTIONTEMPLATE","territory","MobileTimezoneEditor","_bindZones","_filter","_options","_zonePickerLabel","zoneSelect","after","zonePicker","zone_value","jQuery","kendo$1","__meta__","category","depends","features","default","defineProperty"],"mappings":"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","file":"kendo.scheduler.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.dropdownlist.js'), require('kendo.editable.js'), require('kendo.multiselect.js'), require('kendo.window.js'), require('kendo.datetimepicker.js'), require('kendo.scheduler.recurrence.js'), require('kendo.scheduler.view.js'), require('kendo.scheduler.dayview.js'), require('kendo.scheduler.agendaview.js'), require('kendo.scheduler.monthview.js'), require('kendo.scheduler.timelineview.js'), require('kendo.scheduler.yearview.js'), require('kendo.dialog.js'), require('kendo.pane.js'), require('kendo.pdf.js'), require('kendo.switch.js'), require('kendo.toolbar.js'), require('kendo.html.button.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.dropdownlist', 'kendo.editable', 'kendo.multiselect', 'kendo.window', 'kendo.datetimepicker', 'kendo.scheduler.recurrence', 'kendo.scheduler.view', 'kendo.scheduler.dayview', 'kendo.scheduler.agendaview', 'kendo.scheduler.monthview', 'kendo.scheduler.timelineview', 'kendo.scheduler.yearview', 'kendo.dialog', 'kendo.pane', 'kendo.pdf', 'kendo.switch', 'kendo.toolbar', 'kendo.html.button', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Scheduler = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"scheduler\",\n        name: \"Scheduler\",\n        category: \"web\",\n        description: \"The Scheduler is an event calendar.\",\n        depends: [ \"dropdownlist\", \"editable\", \"multiselect\", \"window\", \"datepicker\", \"datetimepicker\", \"toolbar\", \"scheduler.recurrence\", \"scheduler.view\", \"html.button\", \"icons\" ],\n        features: [ {\n            id: \"scheduler-dayview\",\n            name: \"Scheduler Day View\",\n            description: \"Scheduler Day View\",\n            depends: [ \"scheduler.dayview\" ]\n        }, {\n            id: \"scheduler-agendaview\",\n            name: \"Scheduler Agenda View\",\n            description: \"Scheduler Agenda View\",\n            depends: [ \"scheduler.agendaview\" ]\n        }, {\n            id: \"scheduler-monthview\",\n            name: \"Scheduler Month View\",\n            description: \"Scheduler Month View\",\n            depends: [ \"scheduler.monthview\" ]\n        }, {\n            id: \"scheduler-timelineview\",\n            name: \"Scheduler Timeline View\",\n            description: \"Scheduler Timeline View\",\n            depends: [ \"scheduler.timelineview\" ]\n        }, {\n            id: \"scheduler-yearview\",\n            name: \"Scheduler Year View\",\n            description: \"Scheduler Year View\",\n            depends: [ \"scheduler.yearview\" ]\n        }, {\n            id: \"scheduler-mobile\",\n            name: \"Scheduler adaptive rendering\",\n            description: \"Support for adaptive rendering\",\n            depends: [ \"dialog\", \"pane\", \"switch\" ]\n        }, {\n            id: \"scheduler-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export the scheduler events as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }, {\n            id: \"scheduler-timezones\",\n            name: \"Timezones\",\n            description: \"Allow selecting timezones different than Etc/UTC\",\n            depends: [ \"timezones\" ]\n        }]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            date = kendo.date,\n            MS_PER_DAY = date.MS_PER_DAY,\n            getDate = date.getDate,\n            getMilliseconds = kendo.date.getMilliseconds,\n            recurrence = kendo.recurrence,\n            encode = kendo.htmlEncode,\n            keys = kendo.keys,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            DataBoundWidget = ui.DataBoundWidget,\n            STRING = \"string\",\n            Popup = ui.Popup,\n            Calendar = ui.Calendar,\n            DataSource = kendo.data.DataSource,\n            isPlainObject = $.isPlainObject,\n            extend = $.extend,\n            toString = Object.prototype.toString,\n            isArray = Array.isArray,\n            NS = \".kendoScheduler\",\n            CLICK = \"click\",\n            MOUSEDOWN = \"mousedown\",\n            TOUCHSTART = kendo.support.pointers ? \"pointerdown\" : \"touchstart\",\n            TOUCHMOVE = kendo.support.pointers ? \"pointermove\" : \"touchmove\",\n            TOUCHEND = kendo.support.pointers ? \"pointerup\" : \"touchend\",\n            MOUSEMOVE = kendo.support.mousemove,\n            CHANGE = \"change\",\n            PROGRESS = \"progress\",\n            ERROR = \"error\",\n            CANCEL = \"cancel\",\n            REMOVE = \"remove\",\n            RESET = \"resetSeries\",\n            SAVE = \"save\",\n            ADD = \"add\",\n            EDIT = \"edit\",\n            DISABLED = \"disabled\",\n            OPTION = \"option\",\n            FOCUSEDSTATE = \"k-focus\",\n            INVERSECOLORCLASS = \"k-event-inverse\",\n            valueStartEndBoundRegex = /(?:value:start|value:end)(?:,|$)/,\n            MIN_SCREEN = \"(min-width: 1024px)\",\n            TODAY = getDate(new Date()),\n            EXCEPTION_SEPARATOR = \",\",\n            OLD_EXCEPTION_SEPARATOR_REGEXP = /\\;/g,\n            RECURRENCE_EXCEPTION = \"recurrenceException\",\n            DELETECONFIRM = \"Are you sure you want to delete this event?\",\n            DELETERECURRING = \"Do you want to delete only this event occurrence or the whole series?\",\n            EDITRECURRING = \"Do you want to edit only this event occurrence or the whole series?\",\n            DELETERECURRINGCONFIRM = \"Are you sure you want to delete this event occurrence?\",\n            RESETSERIESCONFIRM = \"Are you sure you want to reset the whole series?\",\n            DELETESERIESCONFIRM = \"Are you sure you want to delete the whole series?\",\n            ONGOING_CLASS = \"k-event-ongoing\",\n            COMMANDBUTTONTMPL = ({ className, attr, text, icon, fillMode, themeColor }) =>\n                kendo.html.renderButton(`<button type=\"button\" class=\"${className}\" ${attr}>${text}</button>`, {\n                    icon: icon,\n                    fillMode: fillMode,\n                    themeColor: themeColor\n                }),\n            VIEWS_DROPDOWN_TEMPLATE = kendo.template(({ label, views, type }) =>\n                `<select aria-label=\"${label}\" class=\"k-picker k-dropdown-list k-dropdown ${type}\">` +\n                    Object.keys(views).map((view) => `<option value=\"${view}\">${views[view].title}</option>`).join('') +\n                '</select>'\n            ),\n\n            DEFAULT_TOOLS = {\n                pdf: {\n                    name: \"pdf\",\n                    type: \"button\",\n                    icon: \"file-pdf\",\n                    attributes: {\n                        class: \"k-pdf\"\n                    }\n                },\n                pdfMobile: {\n                    name: \"pdf\",\n                    type: \"button\",\n                    icon: \"file-pdf\",\n                    showText: \"overflow\",\n                    attributes: {\n                        class: \"k-pdf\"\n                    }\n                },\n                today: {\n                    name: \"today\",\n                    type: \"button\",\n                    attributes: {\n                        \"ref-nav-today\": \"\",\n                    }\n                },\n                previous: {\n                    name: \"previous\",\n                    type: \"button\",\n                    icon: \"caret-alt-left\",\n                    showText: \"overflow\",\n                    attributes: {\n                        \"ref-nav-prev\": \"\",\n                    },\n                    groupClass: \"k-scheduler-navigation\"\n                },\n                next: {\n                    name: \"next\",\n                    type: \"button\",\n                    icon: \"caret-alt-right\",\n                    showText: \"overflow\",\n                    attributes: {\n                        \"ref-nav-next\": \"\",\n                    },\n                    groupClass: \"k-scheduler-navigation\"\n                },\n                current: {\n                    name: \"current\",\n                    type: \"button\",\n                    icon: \"calendar\",\n                    fillMode: \"flat\",\n                    text: 'placeholder',\n                    attributes: {\n                        \"aria-live\": \"polite\",\n                        class: \"k-nav-current\"\n                    }\n                },\n                search: {\n                    template: '<span class=\"k-scheduler-search k-textbox k-input k-input-md k-rounded-md k-input-solid\">' +\n                            '<input tabindex=\"-1\" autocomplete=\"off\" class=\"k-input-inner k-scheduler-search-input k-input-inner\" />' +\n                            `<span class=\"k-input-suffix\">${kendo.ui.icon(\"search\")}</span>` +\n                        '</span>'\n                },\n                refresh: {\n                    name: \"refresh\",\n                    type: \"button\",\n                    icon: \"arrow-rotate-cw\",\n                    showText: \"overflow\",\n                    attributes: {\n                        class: \"k-scheduler-refresh\"\n                    }\n                },\n                create: {\n                    name: \"create\",\n                    type: \"button\",\n                    icon: \"plus\",\n                    attributes: {\n                        class: \"k-create-event\"\n                    }\n                },\n                calendar: {\n                    name: \"calendar\",\n                    type: \"button\",\n                    icon: \"calendar\",\n                    attributes: {\n                        class: \"k-nav-calendar\"\n                    }\n                },\n                previousMobile: {\n                    name: \"previous\",\n                    type: \"button\",\n                    icon: \"chevron-left\",\n                    showText: \"overflow\",\n                    attributes: {\n                        \"ref-nav-prev\": \"\",\n                    },\n                    groupClass: \"k-scheduler-navigation\"\n                },\n                nextMobile: {\n                    name: \"next\",\n                    type: \"button\",\n                    icon: \"chevron-right\",\n                    showText: \"overflow\",\n                    attributes: {\n                        \"ref-nav-next\": \"\",\n                    },\n                    groupClass: \"k-scheduler-navigation\"\n                },\n                currentMobile: {\n                    template: '<span class=\"k-scheduler-navigation\">' +\n                            '<span class=\"k-nav-current\">' +\n                                '<span class=\"k-m-date-format\"></span>' +\n                                '<span class=\"k-y-date-format\"></span>' +\n                            '</span>' +\n                        '</span>'\n                },\n                view: {\n                    name: \"view\",\n                    type: \"button\",\n                    togglable: true,\n                    group: \"views\"\n                }\n            },\n\n            defaultDesktopTools = [\n                [\"today\", \"previous\", \"next\"],\n                \"current\",\n                { type: \"spacer\" }\n            ],\n\n            defaultMobileToolsFirst = [\n                [\"calendar\"],\n                { type: \"spacer\" }\n            ],\n\n            defaultMobileToolsSecond = [\n                \"previousMobile\",\n                { type: \"spacer\" },\n                \"currentMobile\",\n                { type: \"spacer\" },\n                \"nextMobile\"\n            ],\n\n            MOBILEDATERANGEEDITOR = function(container, options) {\n                var attr = { name: options.field, title: options.title };\n                var isAllDay = options.model.isAllDay;\n                var dateTimeValidate = kendo.attr(\"validate\") + \"='\" + (!isAllDay) + \"'\";\n                var dateValidate = kendo.attr(\"validate\") + \"='\" + (!!isAllDay) + \"'\";\n\n                appendTimezoneAttr(attr, options);\n                appendValidDateValidator(attr, options);\n                appendDateCompareValidator(attr, options);\n\n                $('<input type=\"datetime-local\" required ' + kendo.attr(\"type\") + '=\"datetime-local\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ', invisible:isAllDay\" ' + dateTimeValidate + '/>')\n                    .attr(attr)\n                    .appendTo(container);\n\n                $('<input type=\"date\" required ' + kendo.attr(\"type\") + '=\"date\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ',visible:isAllDay\" ' +\n                    dateValidate + '/>')\n                    .attr(attr).appendTo(container);\n\n                $('<span ' + kendo.attr(\"for\") + '=\"' + options.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n            },\n            DATERANGEEDITOR = function(container, options) {\n                var attr = { name: options.field, title: options.title },\n                    isAllDay = options.model.isAllDay,\n                    dateTimeValidate = kendo.attr(\"validate\") + \"='\" + (!isAllDay) + \"' \",\n                    dateValidate = kendo.attr(\"validate\") + \"='\" + (!!isAllDay) + \"' \";\n\n                appendTimezoneAttr(attr, options);\n                appendValidDateValidator(attr, options);\n                appendDateCompareValidator(attr, options);\n\n                $('<input type=\"text\" required ' + kendo.attr(\"type\") + '=\"date\"' + ' ' + kendo.attr(\"role\") + '=\"datetimepicker\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ',invisible:isAllDay\" ' +\n                    dateTimeValidate + '/>')\n                .attr(attr).appendTo(container);\n\n                $('<input type=\"text\" required ' + kendo.attr(\"type\") + '=\"date\"' + ' ' + kendo.attr(\"role\") + '=\"datepicker\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ',visible:isAllDay\" ' +\n                    dateValidate + '/>')\n                .attr(attr).appendTo(container);\n\n                $('<span ' + kendo.attr(\"bind\") + '=\"text: ' + options.field + 'Timezone\"></span>').appendTo(container);\n\n                if (options.field === \"end\") {\n                    $('<span ' + kendo.attr(\"bind\") + '=\"text: startTimezone, invisible: endTimezone\"></span>').appendTo(container);\n                }\n\n                $('<span ' + kendo.attr(\"for\") + '=\"' + options.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n            },\n            RECURRENCEEDITOR = function(container, options) {\n                $('<div ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                    .attr({\n                        name: options.field\n                    })\n                    .appendTo(container)\n                    .kendoRecurrenceEditor({\n                        start: options.model.start,\n                        timezone: options.timezone,\n                        messages: options.messages\n                    });\n            },\n            MOBILERECURRENCEEDITOR = function(container, options) {\n                $('<div ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                    .attr({\n                        name: options.field\n                    })\n                    .appendTo(container)\n                    .kendoMobileRecurrenceEditor({\n                        start: options.model.start,\n                        timezone: options.timezone,\n                        messages: options.messages,\n                        pane: options.pane,\n                        value: options.model[options.field]\n                    });\n            },\n            MOBILEISALLDAYEDITOR = function(container, options) {\n                $('<input type=\"checkbox\" data-role=\"switch\"' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />').appendTo(container);\n            },\n            ISALLDAYEDITOR = function(container, options) {\n                $('<input type=\"checkbox\" data-role=\"checkbox\"' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" data-label=\"' + options.title + '\" />')\n                    .attr({\n                        id: options.field,\n                        name: options.field,\n                        title: options.title ? options.title : options.field\n                    })\n                    .appendTo(container);\n            },\n            MOBILETIMEZONEPOPUP = function(container, options) {\n                var text = timezoneButtonText(options.model, options.messages.noTimezone);\n                $('<span class=\"k-timezone-label\"></span>').text(text).appendTo(container);\n                $(kendo.ui.icon(\"arrow-chevron-right\")).appendTo(container);\n                container.closest(\"li.k-item label\").on(CLICK, options.click);\n            },\n            TIMEZONEPOPUP = function(container, options) {\n                $('<a href=\"#\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" data-bind=\"invisible:isAllDay\"><span class=\"k-button-text\">' + options.messages.timezoneEditorButton + '</span></a>').on(CLICK, options.click).appendTo(container);\n            },\n            MOBILETIMEZONEEDITOR = function(container, options) {\n                $('<div class=\"k-mobiletimezoneeditor\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                    .attr({\n                        name: options.field\n                    })\n                    .appendTo(container)\n                    .kendoMobileTimezoneEditor({\n                        optionLabel: options.noTimezone\n                    });\n            },\n            TIMEZONEEDITOR = function(container, options) {\n                var visible = options.visible || options.visible === undefined$1;\n                $('<div ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                    .attr({ name: options.field })\n                    .toggle(visible)\n                    .appendTo(container)\n                    .kendoTimezoneEditor({\n                        optionLabel: options.noTimezone,\n                        title: options.title\n                    });\n            };\n\n        function timezoneButtonText(model, message) {\n            message = message || \"\";\n\n            if (model.startTimezone) {\n                message = model.startTimezone;\n\n                if (model.endTimezone) {\n                    message += \" | \" + model.endTimezone;\n                }\n            }\n\n            return message;\n        }\n\n        function appendTimezoneAttr(attrs, options) {\n            var timezone = options.timezone;\n\n            if (timezone) {\n                attrs[kendo.attr(\"timezone\")] = timezone;\n            }\n        }\n\n        function appendValidDateValidator(attrs, options) {\n            var validationRules = options.model.fields[options.field].validation;\n\n            if (validationRules) {\n                var validDateRule = validationRules.validDateValidator;\n                if (validDateRule && isPlainObject(validDateRule) && validDateRule.message) {\n                    attrs[kendo.attr(\"validDate-msg\")] = validDateRule.message;\n                }\n            }\n        }\n\n        function appendDateCompareValidator(attrs, options) {\n            var validationRules = options.model.fields[options.field].validation;\n\n            if (validationRules) {\n                var dateCompareRule = validationRules.dateCompare;\n                if (dateCompareRule && isPlainObject(dateCompareRule) && dateCompareRule.message) {\n                    attrs[kendo.attr(\"dateCompare-msg\")] = dateCompareRule.message;\n                }\n            }\n        }\n\n        function wrapDataAccess(originalFunction, timezone) {\n            return function(data) {\n                data = originalFunction(data);\n\n                convertData(data, \"apply\", timezone);\n\n                return data || [];\n            };\n        }\n\n        function wrapDataSerialization(originalFunction, timezone) {\n            return function(data) {\n\n                if (data) {\n                    if (toString.call(data) !== \"[object Array]\" && !(data instanceof kendo.data.ObservableArray)) {\n                        data = [data];\n                    }\n                }\n\n                convertData(data, \"remove\", timezone, true);\n\n                data = originalFunction(data);\n\n                return data || [];\n            };\n        }\n\n        function convertData(data, method, timezone, removeUid) {\n            var event,\n                idx,\n                length,\n                startOffset,\n                endOffset;\n\n            data = data || [];\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                event = data[idx];\n                startOffset = event.start ? event.start.getTimezoneOffset() : null;\n                endOffset = event.start ? event.end.getTimezoneOffset() : null;\n\n                if (removeUid) {\n                    if (event.startTimezone || event.endTimezone) {\n                        if (timezone) {\n                            event.start = kendo.timezone.convert(event.start, event.startTimezone || event.endTimezone, timezone);\n                            event.end = kendo.timezone.convert(event.end, event.endTimezone || event.startTimezone, timezone);\n\n                            event.start = kendo.timezone[method](event.start, timezone);\n                            event.end = kendo.timezone[method](event.end, timezone);\n                        } else {\n                            event.start = kendo.timezone[method](event.start, event.startTimezone || event.endTimezone);\n                            event.end = kendo.timezone[method](event.end, event.endTimezone || event.startTimezone);\n                        }\n\n                    } else if (timezone) {\n                        event.start = kendo.timezone[method](event.start, timezone);\n                        event.end = kendo.timezone[method](event.end, timezone);\n                    }\n                } else {\n                    if (event.startTimezone || event.endTimezone) {\n                        event.start = kendo.timezone[method](event.start, event.startTimezone || event.endTimezone);\n                        event.end = kendo.timezone[method](event.end, event.endTimezone || event.startTimezone);\n\n                        if (timezone) {\n                            event.start = kendo.timezone.convert(event.start, event.startTimezone || event.endTimezone, timezone);\n                            event.end = kendo.timezone.convert(event.end, event.endTimezone || event.startTimezone, timezone);\n                        }\n\n                    } else if (timezone) {\n                        event.start = kendo.timezone[method](event.start, timezone);\n                        event.end = kendo.timezone[method](event.end, timezone);\n                    }\n                }\n\n                if (removeUid) {\n                    delete event.uid;\n                }\n\n                if (method === \"remove\" && event.start && startOffset && startOffset !== event.start.getTimezoneOffset()) {\n                    event.start = new Date(event.start.getTime() + (startOffset - event.start.getTimezoneOffset()) * 60000);\n                }\n                if (method === \"remove\" && event.end && endOffset && endOffset !== event.end.getTimezoneOffset()) {\n                    event.end = new Date(event.end.getTime() + (endOffset - event.end.getTimezoneOffset()) * 60000);\n                }\n            }\n            return data;\n        }\n\n        function getOccurrenceByUid(data, uid) {\n            var length = data.length,\n                idx = 0,\n                event;\n\n            for (; idx < length; idx++) {\n                event = data[idx];\n\n                if (event.uid === uid) {\n                    return event;\n                }\n            }\n        }\n\n        var SchedulerDataReader = kendo.Class.extend({\n            init: function(schema, reader) {\n                var timezone = schema.timezone;\n\n                this.reader = reader;\n\n                if (reader.model) {\n                    this.model = reader.model;\n                }\n\n                this.timezone = timezone;\n                this.data = wrapDataAccess(this.data.bind(this), timezone);\n                this.serialize = wrapDataSerialization(this.serialize.bind(this), timezone);\n            },\n            errors: function(data) {\n                return this.reader.errors(data);\n            },\n            parse: function(data) {\n                return this.reader.parse(data);\n            },\n            data: function(data) {\n                return this.reader.data(data);\n            },\n            total: function(data) {\n                return this.reader.total(data);\n            },\n            groups: function(data) {\n                return this.reader.groups(data);\n            },\n            aggregates: function(data) {\n                return this.reader.aggregates(data);\n            },\n            serialize: function(data) {\n                return this.reader.serialize(data);\n            }\n        });\n\n        function applyZone(date, fromZone, toZone) {\n            if (toZone) {\n                date = kendo.timezone.convert(date, fromZone, toZone);\n            } else {\n                date = kendo.timezone.remove(date, fromZone);\n            }\n\n            return date;\n        }\n\n        function validDateValidator(input) {\n            if ((input.filter(\"[name=start]\").length && input.filter(\"[title=Start]\").length) ||\n                (input.filter(\"[name=end]\").length && input.filter(\"[title=End]\").length) ||\n                input.filter(\".k-recur-until\").length) {\n                var date;\n                var picker = kendo.widgetInstance(input, kendo.ui);\n\n                if (picker) {\n                    date = kendo.parseDate(input.val(), picker.options.format);\n                    return !!date && picker.value();\n                } else {\n                    date = kendo.parseDate(input.val());\n                    return !!date;\n                }\n            }\n\n            return true;\n        }\n\n        function dateCompareValidator(input) {\n            if (input.filter(\"[name=end]\").length) {\n                var container = input.closest(\".k-scheduler-edit-form\");\n                var startInput = container.find(\"[name=start]:visible\");\n                var endInput = container.find(\"[name=end]:visible\");\n\n                if (endInput[0] && startInput[0]) {\n                    var start, end;\n                    var startPicker = kendo.widgetInstance(startInput, kendo.ui);\n                    var endPicker = kendo.widgetInstance(endInput, kendo.ui);\n\n                    var editable = container.data(\"kendoEditable\");\n                    var model = editable ? editable.options.model : null;\n\n                    if (startPicker && endPicker) {\n                        start = startPicker.value();\n                        end = endPicker.value();\n                    } else {\n                        start = kendo.parseDate(startInput.val());\n                        end = kendo.parseDate(endInput.val());\n                    }\n\n                    if (start && end) {\n                        if (model) {\n                            var timezone = startInput.attr(kendo.attr(\"timezone\"));\n                            var startTimezone = model.startTimezone;\n                            var endTimezone = model.endTimezone;\n\n                            startTimezone = startTimezone || endTimezone;\n                            endTimezone = endTimezone || startTimezone;\n\n                            if (startTimezone) {\n                                start = applyZone(start, startTimezone, timezone);\n                                end = applyZone(end, endTimezone, timezone);\n                            }\n                        }\n\n                        return start <= end;\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        function untilDateCompareValidator(input) {\n            var untilPicker, until,\n                container, startInput, start, startPicker;\n\n            if (input.filter(\".k-recur-until\").length) {\n                untilPicker = kendo.widgetInstance(input, kendo.ui);\n                until = untilPicker.value();\n                container = input.closest(\".k-scheduler-edit-form\");\n                startInput = container.find(\"[name=start]:visible\");\n\n                if (startInput[0]) {\n                    startPicker = kendo.widgetInstance(startInput, kendo.ui);\n\n                    if (startPicker) {\n                        start = startPicker.value();\n                    } else {\n                        start = kendo.parseDate(startInput.val());\n                    }\n\n                    if (start && until) {\n                        return start <= until;\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        var SchedulerEvent = kendo.data.Model.define({\n            init: function(value) {\n                var that = this;\n\n                kendo.data.Model.fn.init.call(that, value);\n\n                that._defaultId = that.defaults[that.idField];\n            },\n\n            _time: function(field) {\n                var date = this[field];\n                var fieldTime = \"_\" + field + \"Time\";\n\n                if (this[fieldTime]) {\n                    return this[fieldTime] - kendo.date.toUtcTime(kendo.date.getDate(date));\n                }\n\n                return getMilliseconds(date);\n            },\n\n            _date: function(field) {\n                var fieldTime = \"_\" + field + \"Time\";\n\n                if (this[fieldTime]) {\n                    return this[fieldTime] - this._time(field);\n                }\n\n                return kendo.date.getDate(this[field]);\n            },\n\n            clone: function(options, updateUid) {\n                var uid = this.uid,\n                    event = new this.constructor($.extend({}, this.toJSON(), options));\n\n                if (!updateUid) {\n                    event.uid = uid;\n                }\n\n                return event;\n            },\n\n            duration: function() {\n                var end = this.end;\n                var start = this.start;\n                var offset = (end.getTimezoneOffset() - start.getTimezoneOffset()) * kendo.date.MS_PER_MINUTE;\n\n                return end - start - offset;\n            },\n\n            expand: function(start, end, zone) {\n                return recurrence ? recurrence.expand(this, start, end, zone) : [this];\n            },\n\n            update: function(eventInfo) {\n                for (var field in eventInfo) {\n                    this.set(field, eventInfo[field]);\n                }\n\n                if (this._startTime) {\n                    this.set(\"_startTime\", kendo.date.toUtcTime(this.start));\n                }\n\n                if (this._endTime) {\n                    this.set(\"_endTime\", kendo.date.toUtcTime(this.end));\n                }\n            },\n\n            isMultiDay: function() {\n                return this.isAllDay || this.duration() >= kendo.date.MS_PER_DAY;\n            },\n\n            isException: function() {\n                return !this.isNew() && this.recurrenceId;\n            },\n\n            isOccurrence: function() {\n                return this.isNew() && this.recurrenceId;\n            },\n\n            isRecurring: function() {\n                return !!(this.recurrenceRule || this.recurrenceId);\n            },\n\n            isRecurrenceHead: function() {\n                return !!(this.id && this.recurrenceRule);\n            },\n\n            toOccurrence: function(options) {\n                options = $.extend(options, {\n                    recurrenceException: null,\n                    recurrenceRule: null,\n                    recurrenceId: this.id || this.recurrenceId\n                });\n\n                options[this.idField] = this.defaults[this.idField];\n\n                return this.clone(options, true);\n            },\n\n            toJSON: function() {\n                var obj = kendo.data.Model.fn.toJSON.call(this);\n                obj.uid = this.uid;\n\n                delete obj._startTime;\n                delete obj._endTime;\n\n                return obj;\n            },\n\n            shouldSerialize: function(field) {\n                return kendo.data.Model.fn.shouldSerialize.call(this, field) && field !== \"_defaultId\";\n            },\n\n            set: function(key, value) {\n                var isAllDay = this.isAllDay || false;\n\n                kendo.data.Model.fn.set.call(this, key, value);\n\n                if (key == \"isAllDay\" && value != isAllDay) {\n                    var start = kendo.date.getDate(this.start);\n                    var end = new Date(this.end);\n                    var milliseconds = kendo.date.getMilliseconds(end);\n\n                    if (milliseconds === 0 && value) {\n                        milliseconds = MS_PER_DAY;\n                    }\n\n                    this.set(\"start\", start);\n\n                    if (value === true) {\n                        kendo.date.setTime(end, -milliseconds);\n\n                        if (end < start) {\n                            end = start;\n                        }\n                    } else {\n                        kendo.date.setTime(end, MS_PER_DAY - milliseconds);\n                    }\n\n                    this.set(\"end\", end);\n                }\n            },\n            id: \"id\",\n            fields: {\n                id: { type: \"number\" },\n                title: { defaultValue: \"\", type: \"string\" },\n                start: { type: \"date\", validation: { required: true, validDate: { value: validDateValidator } } },\n                startTimezone: { type: \"string\" },\n                end: {\n                    type: \"date\",\n                    validation: {\n                        required: true,\n                        validDate: { value: validDateValidator },\n                        dateCompare: { value: dateCompareValidator }\n                    }\n                },\n                endTimezone: { type: \"string\" },\n                recurrenceRule: {\n                    defaultValue: \"\",\n                    type: \"string\",\n                    validation: {\n                        validDate: { value: validDateValidator },\n                        untilDateCompare: { value: untilDateCompareValidator }\n                    }\n                },\n                recurrenceException: { defaultValue: \"\", type: \"string\" },\n                isAllDay: { type: \"boolean\", defaultValue: false },\n                description: { type: \"string\" }\n            }\n        });\n\n        var SchedulerDataSource = DataSource.extend({\n            init: function(options) {\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: {\n                        modelBase: SchedulerEvent,\n                        model: SchedulerEvent\n                    }\n                }, options));\n\n                this.reader = new SchedulerDataReader(this.options.schema, this.reader);\n            },\n\n            expand: function(start, end) {\n                var data = this.view(),\n                    filter = {},\n                    endOffset;\n\n                if (start && end) {\n                    endOffset = end.getTimezoneOffset();\n                    end = new Date(end.getTime() + MS_PER_DAY - 1);\n\n                    if (end.getTimezoneOffset() !== endOffset) {\n                        end = kendo.timezone.apply(end, endOffset);\n                    }\n\n                    filter = {\n                        logic: \"or\",\n                        filters: [\n                            {\n                                logic: \"and\",\n                                filters: [\n                                    { field: \"start\", operator: \"gte\", value: start },\n                                    { field: \"end\", operator: \"gte\", value: start },\n                                    { field: \"start\", operator: \"lte\", value: end }\n                                ]\n                            },\n                            {\n                                logic: \"and\",\n                                filters: [\n                                    { field: \"start\", operator: \"lte\", value: new Date(start.getTime() + MS_PER_DAY - 1) },\n                                    { field: \"end\", operator: \"gte\", value: start }\n                                ]\n                            }\n                        ]\n                    };\n\n                    data = new kendo.data.Query(expandAll(data, start, end, this.reader.timezone)).filter(filter).toArray();\n                }\n\n                return data;\n            },\n\n            cancelChanges: function(model) {\n                if (model && model.isOccurrence()) {\n                    this._removeExceptionDate(model);\n                }\n\n                DataSource.fn.cancelChanges.call(this, model);\n            },\n\n            insert: function(index, model) {\n                if (!model) {\n                    return;\n                }\n\n                if (!(model instanceof SchedulerEvent)) {\n                    var eventInfo = model;\n\n                    model = this._createNewModel();\n                    model.accept(eventInfo);\n                }\n\n                if ((!this._pushCreated && model.isRecurrenceHead()) || model.recurrenceId) {\n                    model = model.recurrenceId ? model : model.toOccurrence();\n                    this._addExceptionDate(model);\n                }\n\n                return DataSource.fn.insert.call(this, index, model);\n            },\n\n            pushCreate: function(items) {\n                this._pushCreated = true;\n                DataSource.fn.pushCreate.call(this, items);\n                this._pushCreated = false;\n            },\n\n            remove: function(model) {\n                if (model.isRecurrenceHead()) {\n                    this._removeExceptions(model);\n                } else if (model.isRecurring()) {\n                    this._addExceptionDate(model);\n                }\n\n                return DataSource.fn.remove.call(this, model);\n            },\n\n            _removeExceptions: function(model) {\n                var data = this.data().slice(0),\n                    item = data.shift(),\n                    id = model.id;\n\n                while (item) {\n                    if (item.recurrenceId === id) {\n                        DataSource.fn.remove.call(this, item);\n                    }\n\n                    item = data.shift();\n                }\n\n                model.set(RECURRENCE_EXCEPTION, \"\");\n            },\n\n            _removeExceptionDate: function(model) {\n                if (model.recurrenceId) {\n                    var head = this.get(model.recurrenceId);\n\n                    if (head) {\n                        var start = model.defaults.start;\n                        var replaceRegExp = new RegExp(\"(\\\\\" + EXCEPTION_SEPARATOR + \"?)\" + recurrence.toExceptionString(start, this.reader.timezone));\n                        var recurrenceException = (head.recurrenceException || \"\").replace(OLD_EXCEPTION_SEPARATOR_REGEXP, EXCEPTION_SEPARATOR).replace(/\\,$/, \"\");\n\n                        if (replaceRegExp.test(recurrenceException)) {\n                            head.set(RECURRENCE_EXCEPTION, recurrenceException.replace(replaceRegExp, \"\"));\n                        } else {\n                            start = model.start;\n                            replaceRegExp = new RegExp(\"(\\\\\" + EXCEPTION_SEPARATOR + \"?)\" + recurrence.toExceptionString(start, this.reader.timezone));\n                            head.set(RECURRENCE_EXCEPTION, recurrenceException.replace(replaceRegExp, \"\"));\n                        }\n                    }\n                }\n            },\n\n            _addExceptionDate: function(model) {\n                var start = model.start;\n                var zone = this.reader.timezone;\n                var head = this.get(model.recurrenceId);\n                var recurrenceException = (head.recurrenceException || \"\").replace(OLD_EXCEPTION_SEPARATOR_REGEXP, EXCEPTION_SEPARATOR).replace(/\\,$/, \"\");\n\n                if (!recurrence.isException(recurrenceException, start, zone)) {\n                    var newException = recurrence.toExceptionString(start, zone);\n                    model.defaults.start = start;\n                    head.set(RECURRENCE_EXCEPTION, recurrenceException + (recurrenceException && newException ? EXCEPTION_SEPARATOR : \"\") + newException);\n                }\n            }\n        });\n\n        function expandAll(events, start, end, zone) {\n            var length = events.length,\n                data = [],\n                idx = 0;\n\n            for (; idx < length; idx++) {\n                data = data.concat(events[idx].expand(start, end, zone));\n            }\n\n            return data;\n        }\n\n        SchedulerDataSource.create = function(options) {\n            if (isArray(options) || options instanceof kendo.data.ObservableArray) {\n                options = { data: options };\n            }\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof SchedulerDataSource) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only SchedulerDataSource instances are supported\");\n            }\n\n            return dataSource instanceof SchedulerDataSource ? dataSource : new SchedulerDataSource(dataSource);\n        };\n\n        extend(true, kendo.data, {\n           SchedulerDataSource: SchedulerDataSource,\n           SchedulerDataReader: SchedulerDataReader,\n           SchedulerEvent: SchedulerEvent\n        });\n\n        var defaultCommands = {\n            update: {\n                text: \"Save\",\n                className: \"k-button-solid-primary k-scheduler-update\"\n            },\n            canceledit: {\n                text: \"Cancel\",\n                className: \"k-scheduler-cancel\"\n            },\n            destroy: {\n                text: \"Delete\",\n                icon: \"trash\",\n                imageClass: \"k-i-trash\",\n                className: \"k-button-solid-primary k-scheduler-delete\",\n                iconClass: \"k-icon\"\n            }\n        };\n\n        function trimOptions(options, overrideOptions) {\n            delete options.name;\n            delete options.prefix;\n\n            delete options.remove;\n            delete options.edit;\n            delete options.add;\n            delete options.navigate;\n\n            for (var key in overrideOptions) {\n                options[key] = overrideOptions[key];\n            }\n\n            return options;\n        }\n\n        /*\n        function fieldType(field) {\n            field = field != null ? field : \"\";\n            return field.type || kendo.type(field) || \"string\";\n        }\n        */\n\n        function descriptionEditor(options) {\n            var attr = createValidationAttributes(options.model, options.field);\n\n            return function(container, model) {\n                $('<textarea name=\"description\" class=\"k-input-inner\" title=\"' + model.title + '\"/>').attr(attr)\n                    .appendTo(container)\n                    .wrap('<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md\"></span>');\n            };\n        }\n\n        function createValidationAttributes(model, field) {\n            var modelField = (model.fields || model)[field];\n            var specialRules = [\"url\", \"email\", \"number\", \"date\", \"boolean\"];\n            var validation = modelField ? modelField.validation : {};\n            // var type = fieldType(modelField);\n            var datatype = kendo.attr(\"type\");\n            var inArray = $.inArray;\n            var ruleName;\n            var rule;\n\n            var attr = {};\n\n            for (ruleName in validation) {\n                rule = validation[ruleName];\n\n                if (inArray(ruleName, specialRules) >= 0) {\n                    attr[datatype] = ruleName;\n                } else if (!kendo.isFunction(rule)) {\n                    attr[ruleName] = isPlainObject(rule) ? (rule.value || ruleName) : rule;\n                }\n\n                attr[kendo.attr(ruleName + \"-msg\")] = rule.message;\n            }\n\n            return attr;\n        }\n\n        function filterResourceEditorData(editor, parentValue, parentValueField, valueField) {\n            var editorValue = editor.value(),\n                isMs = Array.isArray(editorValue),\n                valueArray;\n\n            if (isMs) {\n                valueArray = JSON.parse(JSON.stringify(editorValue));\n            } else {\n                valueArray = [editorValue.toString()];\n            }\n\n            editor.dataSource.data().forEach(function(item) {\n                if (item[parentValueField] === null || item[parentValueField] === undefined$1 || item[parentValueField] == parentValue) {\n                    item.set(DISABLED, false);\n                } else {\n                    var currentValue = item.get(valueField);\n\n                    item.set(DISABLED, true);\n\n                    if (valueArray.indexOf(currentValue) >= 0 || valueArray.indexOf(currentValue.toString()) >= 0) {\n                        if (isMs) {\n                            valueArray.splice(valueArray.indexOf(currentValue), 1);\n                        } else {\n                            editor.value(null);\n                            editor.trigger(CHANGE);\n                        }\n                    }\n                }\n            });\n\n            if (isMs && valueArray.length < editorValue.length) {\n                editor.value(valueArray);\n                editor.trigger(CHANGE);\n            }\n        }\n\n        function bindParentValueChangeHandler(container, currentEditor, resource, parent) {\n            var parentElement = container.closest(\".k-edit-form-container\").find(\"[data-\" + kendo.ns + \"bind='value:\" + parent + \"']\");\n            var parentWidget = parentElement.getKendoDropDownList();\n\n            if (parentWidget) {\n                parentWidget.bind(CHANGE, function(ev) {\n                    var parentValue = ev.sender.value();\n\n                    filterResourceEditorData(currentEditor, parentValue, resource.dataParentValueField, resource.dataValueField);\n                });\n            } else {\n                parentElement.on(CHANGE, function(ev) {\n                    var parentValue = ev.target.value;\n\n                    filterResourceEditorData(currentEditor, parentValue, resource.dataParentValueField, resource.dataValueField);\n                });\n            }\n        }\n\n        function filterMobileResourceEditorData(resource, currentEditor, parentSelectedValue) {\n            var options = currentEditor.find(OPTION),\n                editorValue = currentEditor.val(),\n                isMs = Array.isArray(editorValue),\n                valueArray;\n\n            if (isMs) {\n                valueArray = JSON.parse(JSON.stringify(editorValue));\n            } else {\n                valueArray = [editorValue];\n            }\n\n            resource.dataSource.view().forEach(function(item, index) {\n                var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n                var valid = itemParentValue === null || itemParentValue === undefined$1 || itemParentValue == parentSelectedValue;\n\n                if (valid) {\n                    options[index].removeAttribute(DISABLED);\n                } else {\n                    options[index].setAttribute(DISABLED, DISABLED);\n\n                    var currentValue = \"\" + item.get(resource.dataValueField);\n\n                    if (valueArray.indexOf(currentValue) >= 0) {\n                        if (isMs) {\n                            valueArray.splice(valueArray.indexOf(currentValue), 1);\n                        } else {\n                            currentEditor.val(null);\n                            currentEditor.trigger(CHANGE);\n                        }\n                    }\n                }\n            });\n\n            if (isMs && valueArray.length < editorValue.length) {\n                currentEditor.val(valueArray);\n                currentEditor.trigger(CHANGE);\n            }\n        }\n\n        function dropDownResourceEditor(resource, model, parent) {\n            var attr = createValidationAttributes(model, resource.field);\n\n            return function(container) {\n                var currentEditor;\n\n                if (parent) {\n                    setTimeout(function() {\n                        filterResourceEditorData(currentEditor, model[parent], resource.dataParentValueField, resource.dataValueField);\n                        bindParentValueChangeHandler(container, currentEditor, resource, parent);\n                    });\n                }\n\n                currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\" title=\"' + model.title + '\">', kendo.ns, resource.field))\n                    .appendTo(container)\n                    .attr(attr)\n                    .kendoDropDownList({\n                        dataTextField: resource.dataTextField,\n                        dataValueField: resource.dataValueField,\n                        dataSource: resource.dataSource.data(),\n                        valuePrimitive: resource.valuePrimitive,\n                        optionLabel: \"None\",\n                        template: (data) => `<span ${data.disabled ? \"data-disabled\" : \"\"}><span class=\"k-scheduler-mark\" ${kendo.attr(\"style-background-color\")}=\"${data[resource.dataColorField] || \"none\"}\"></span>${data[resource.dataTextField]}</span>`,\n                        select: function(e) {\n                            if (e.dataItem && e.dataItem.disabled) {\n                                e.preventDefault();\n                            }\n                        },\n                        dataBound: function(e) {\n                            let options = e.sender.list.find('li');\n\n                            for (let i = 0; i < options.length; i++) {\n                                var element = options.eq(i);\n\n                                if (element.find(\"[data-disabled]\").length > 0) {\n                                    element.addClass(\"k-disabled\");\n                                }\n                            }\n                        }\n                    }).data(\"kendoDropDownList\");\n           };\n        }\n\n        function dropDownResourceEditorMobile(resource, model, parent) {\n            var attr = createValidationAttributes(model, resource.field);\n\n            return function(container) {\n                var options = \"\";\n                var view = resource.dataSource.view();\n\n                for (var idx = 0, length = view.length; idx < length; idx++) {\n                    options += kendo.format('<option value=\"{0}\">{1}</option>',\n                        kendo.getter(resource.dataValueField)(view[idx]),\n                        kendo.getter(resource.dataTextField)(view[idx])\n                    );\n                }\n\n                var currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\">{2}</select>',\n                    kendo.ns,\n                    resource.field,\n                    options\n                ))\n                .appendTo(container)\n                .attr(attr);\n\n                if (parent) {\n                    setTimeout(function() {\n                        var parentElement = container.closest(\".k-stretched-view\").find(\"[data-\" + kendo.ns + \"bind='value:\" + parent + \"']\");\n                        var parentSelectedValue = model[parent];\n\n                        filterMobileResourceEditorData(resource, currentEditor, parentSelectedValue);\n\n                        parentElement.on(CHANGE, function(ev) {\n                            var parentValue = ev.target.value;\n\n                            filterMobileResourceEditorData(resource, currentEditor, parentValue);\n                        });\n                    });\n                }\n           };\n        }\n\n        function multiSelectResourceEditor(resource, model, parent) {\n            var attr = createValidationAttributes(model, resource.field);\n\n            return function(container) {\n                var currentEditor;\n\n                if (parent) {\n                    setTimeout(function() {\n                        filterResourceEditorData(currentEditor, model[parent], resource.dataParentValueField, resource.dataValueField);\n                        bindParentValueChangeHandler(container, currentEditor, resource, parent);\n                    });\n                }\n\n                currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\">', kendo.ns, resource.field))\n                    .appendTo(container)\n                    .attr(attr)\n                    .kendoMultiSelect({\n                        dataTextField: resource.dataTextField,\n                        dataValueField: resource.dataValueField,\n                        dataSource: resource.dataSource.data(),\n                        valuePrimitive: resource.valuePrimitive,\n                        itemTemplate: (data) => `<span ${data.disabled ? \"data-disabled\" : \"\"}><span class=\"k-scheduler-mark\" ${kendo.attr(\"style-background-color\")}=\"${data[resource.dataColorField] || \"none\"}\"></span>${data[resource.dataTextField]}</span>`,\n                        tagTemplate: (data) => `<span class=\"k-scheduler-mark\" ${kendo.attr(\"style-background-color\")}=\"${data[resource.dataColorField] || \"none\"}\"></span>${data[resource.dataTextField]}`,\n                        select: function(e) {\n                            if (e.dataItem && e.dataItem.disabled) {\n                                e.preventDefault();\n                            }\n                        },\n                        dataBound: function(e) {\n                            let options = e.sender.list.find('li');\n\n                            for (let i = 0; i < options.length; i++) {\n                                let element = options.eq(i);\n\n                                if (element.find(\"[data-disabled]\").length > 0) {\n                                    element.addClass(\"k-disabled\");\n                                }\n                            }\n                        }\n                    }).data(\"kendoMultiSelect\");\n           };\n        }\n\n        function multiSelectResourceEditorMobile(resource, model, parent) {\n            var attr = createValidationAttributes(model, resource.field);\n\n            return function(container) {\n                var options = \"\";\n                var view = resource.dataSource.view();\n\n                for (var idx = 0, length = view.length; idx < length; idx++) {\n                    options += kendo.format('<option value=\"{0}\">{1}</option>',\n                        kendo.getter(resource.dataValueField)(view[idx]),\n                        kendo.getter(resource.dataTextField)(view[idx])\n                    );\n                }\n\n                var currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\" multiple=\"multiple\">{2}</select>',\n                    kendo.ns,\n                    resource.field,\n                    options\n                ))\n                .appendTo(container)\n                .attr(attr);\n\n                if (parent) {\n                    setTimeout(function() {\n                        var parentElement = container.closest(\".k-stretched-view\").find(\"[data-\" + kendo.ns + \"bind='value:\" + parent + \"']\");\n                        var parentSelectedValue = model[parent];\n\n                        filterMobileResourceEditorData(resource, currentEditor, parentSelectedValue);\n\n                        parentElement.on(CHANGE, function(ev) {\n                            var parentValue = ev.target.value;\n\n                            filterMobileResourceEditorData(resource, currentEditor, parentValue);\n                        });\n                    });\n                }\n           };\n        }\n\n        function moveEventRange(event, distance) {\n            var duration = event.end.getTime() - event.start.getTime();\n\n            var start = new Date(event.start.getTime());\n\n            kendo.date.setTime(start, distance);\n\n            var end = new Date(start.getTime());\n\n            kendo.date.setTime(end, duration, true);\n\n            return {\n                start: start,\n                end: end\n            };\n        }\n\n        var editors = {\n            mobile: {\n                dateRange: MOBILEDATERANGEEDITOR,\n                timezonePopUp: MOBILETIMEZONEPOPUP,\n                timezone: MOBILETIMEZONEEDITOR,\n                recurrence: MOBILERECURRENCEEDITOR,\n                description: descriptionEditor,\n                multipleResources: multiSelectResourceEditorMobile,\n                resources: dropDownResourceEditorMobile,\n                isAllDay: MOBILEISALLDAYEDITOR\n            },\n            desktop: {\n                dateRange: DATERANGEEDITOR,\n                timezonePopUp: TIMEZONEPOPUP,\n                timezone: TIMEZONEEDITOR,\n                recurrence: RECURRENCEEDITOR,\n                description: descriptionEditor,\n                multipleResources: multiSelectResourceEditor,\n                resources: dropDownResourceEditor,\n                isAllDay: ISALLDAYEDITOR\n            }\n        };\n\n        var Editor = kendo.Observable.extend({\n            init: function(element, options) {\n\n                kendo.Observable.fn.init.call(this);\n\n                this.element = element;\n                this.options = extend(true, {}, this.options, options);\n                this.createButton = this.options.createButton;\n\n                this.toggleDateValidationHandler = this._toggleDateValidation.bind(this);\n            },\n\n            _toggleDateValidation: function(e) {\n                if (e.field == \"isAllDay\") {\n                    var container = this.container,\n                        isAllDay = this.editable.options.model.isAllDay,\n                        bindAttribute = kendo.attr(\"bind\"),\n                        element, isDateTimeInput, shouldValidate;\n                    container.find(\"[\" + bindAttribute + \"*=end],[\" + bindAttribute + \"*=start]\").each(function() {\n                        element = $(this);\n                        if (valueStartEndBoundRegex.test(element.attr(bindAttribute))) {\n                            isDateTimeInput = element.is(\"[\" + kendo.attr(\"role\") + \"=datetimepicker],[type*=datetime]\");\n                            shouldValidate = isAllDay !== isDateTimeInput;\n                            element.attr(kendo.attr(\"validate\"), shouldValidate.toString());\n                        }\n                    });\n                }\n            },\n\n            fields: function(editors, model) {\n                var that = this;\n                var messages = that.options.messages;\n                var timezone = that.options.timezone;\n\n                var click = function(e) {\n                    e.preventDefault();\n                    that._initTimezoneEditor(model, this);\n                };\n\n                var fields = [\n                    { field: \"title\", title: messages.editor.title /*, format: field.format, editor: field.editor, values: field.values*/ },\n                    { field: \"start\", title: messages.editor.start, editor: editors.dateRange, timezone: timezone },\n                    { field: \"end\", title: messages.editor.end, editor: editors.dateRange, timezone: timezone },\n                    { field: \"isAllDay\", title: messages.editor.allDayEvent, editor: editors.isAllDay }\n                ];\n\n                var checkHierarchical = function(item) {\n                    return !!item[resource.dataParentValueField];\n                };\n\n                if (kendo.timezone.windows_zones) {\n                    fields.push({ field: \"timezone\", title: messages.editor.timezone, editor: editors.timezonePopUp, click: click, messages: messages.editor, model: model });\n                    fields.push({ field: \"startTimezone\", title: messages.editor.startTimezone, editor: editors.timezone, noTimezone: messages.editor.noTimezone });\n                    fields.push({ field: \"endTimezone\", title: messages.editor.endTimezone, editor: editors.timezone, noTimezone: messages.editor.noTimezone });\n                }\n\n                if (!model.recurrenceId) {\n                    fields.push({ field: \"recurrenceRule\", title: messages.editor.repeat, editor: editors.recurrence, timezone: timezone, messages: messages.recurrenceEditor, pane: this.pane });\n                }\n\n                if (\"description\" in model) {\n                    fields.push({ field: \"description\", title: messages.editor.description, editor: editors.description({ model: model, field: \"description\" }) });\n                }\n\n                for (var resourceIndex = 0; resourceIndex < this.options.resources.length; resourceIndex++) {\n                    var resource = this.options.resources[resourceIndex];\n                    var resourceView = resource.dataSource.view();\n                    var hasParent = resourceView.some(checkHierarchical);\n                    var parentResource, parent;\n\n                    if (hasParent) {\n                        parentResource = this.options.resources[resourceIndex - 1];\n\n                        if (parentResource) {\n                            parent = parentResource.field;\n                        }\n                    }\n\n                    fields.push({\n                        field: resource.field,\n                        title: resource.title,\n                        editor: resource.multiple ? editors.multipleResources(resource, model, parent) : editors.resources(resource, model, parent)\n                    });\n                }\n\n                return fields;\n            },\n\n            end: function() {\n                return this.editable.end();\n            },\n\n            _buildDesktopEditTemplate: function(model, fields, editableFields) {\n                var messages = this.options.messages;\n\n                const startTimezone = `<div class=\"k-popup-edit-form k-scheduler-edit-form k-scheduler-timezones\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                                        '<div class=\"k-form\">' +\n                                        '<div class=\"k-form-field\"><div class=\"k-form-field-wrap\">' + kendo.html.renderCheckBox($('<input class=\"k-timezone-toggle\"/>'), { label: messages.editor.separateTimezones }) + '</div></div>';\n\n                const editableField = (fieldName) => {\n                    const isEditable = !model.editable || model.editable(fieldName);\n\n                    if (isEditable) {\n                        return `<div ${kendo.attr(\"container-for\")}=\"${fieldName}\" class=\"k-form-field-wrap\"></div>`;\n                    } else {\n                        return `<div class=\"k-form-field-wrap\">${(fieldName && kendo.getter(fieldName)(model)) || ''}</div>`;\n                    }\n                };\n\n                const generateFields = (field) => {\n                    const fieldName = field.field;\n                    const fieldTitle = field.title;\n                    const modelField = model.fields[fieldName];\n                    const isEditable = !model.editable || model.editable(fieldName);\n\n                    if (isEditable) {\n                        editableFields.push(field);\n                    }\n\n                    return (fieldName === 'startTimezone' ? startTimezone : '') +\n                        (modelField && modelField.type === \"boolean\" ?\n                            `<div class=\"k-form-field\">${editableField(fieldName)}</div>` :\n                            `<div class=\"k-form-field\"><label class=\"k-label k-form-label\" for=\"${fieldName}\" id=\"${fieldName}_label\">${fieldTitle || fieldName || \"\"}</label>${editableField(fieldName)}</div>`) +\n                        (fieldName === 'endTimezone' ? this._createEndTimezoneButton() : '');\n                };\n\n                return `<div class=\"k-form\">` +\n                    fields.map(generateFields).join('') +\n                `</div>`;\n            },\n\n            _buildMobileEditTemplate: function(model, fields, editableFields) {\n                var messages = this.options.messages;\n\n                const startTimezone = `<div class=\"k-popup-edit-form k-scheduler-edit-form k-scheduler-timezones\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                                        '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                                            '<li class=\"k-item k-listgroup-item\">' +\n                                                '<label class=\"k-label k-listgroup-form-row\">' +\n                                                    '<span class=\"k-item-title k-listgroup-form-row\">' + encode(messages.editor.separateTimezones) + '</span>' +\n                                                    '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                                        '<input class=\"k-timezone-toggle\" data-role=\"switch\" type=\"checkbox\" />' +\n                                                    '</span>' +\n                                                '</label>' +\n                                            '</li>';\n\n                const editableField = (field) => {\n                    const fieldName = field.field;\n                    const fieldTitle = field.title;\n                    const isEditable = !model.editable || model.editable(fieldName);\n                    let midPart;\n\n                    if (isEditable) {\n                        midPart = `${fieldName === 'timezone' ?\n                                    `<label class=\"k-label k-listgroup-form-row\" data-bind=\"css: { k-disabled: isAllDay }\">` :\n                                    `<label class=\"k-label k-listgroup-form-row\">`}` +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${fieldTitle || fieldName || \"\"}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\" ${kendo.attr(\"container-for\")}=\"${fieldName}\"></div>`;\n                    } else {\n                        midPart = `<li class=\"k-item k-listgroup-item\">` +\n                            `<label class=\"k-label k-no-click k-listgroup-form-row\">` +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${fieldTitle || fieldName || \"\"}</span>` +\n                            `<span class=\"k-no-editor k-listgroup-form-field-wrapper\">${(fieldName && kendo.getter(fieldName)(model)) || ''}</span>`;\n                    }\n\n\n                    return `<li class=\"k-item k-listgroup-item\">` +\n                       midPart +\n                    `</label></li>`;\n\n                };\n\n                const generateFields = (field) => {\n                    const fieldName = field.field;\n                    const isEditable = !model.editable || model.editable(fieldName);\n\n                    if (isEditable) {\n                        editableFields.push(field);\n                    }\n\n                    return (fieldName === \"timezone\" || fieldName === \"recurrenceRule\" ? '</ul><ul class=\"k-listgroup k-listgroup-flush\">' : '') +\n                        (fieldName === 'startTimezone' ? startTimezone : '') +\n                        editableField(field) +\n                        (fieldName === 'recurrenceRule' ? '</ul><ul class=\"k-listgroup k-listgroup-flush\">' : '') +\n                        (fieldName === 'endTimezone' ? '</ul></div>' : '');\n                };\n\n                const result = `<ul class=\"k-listgroup k-listgroup-flush\">` +\n                    fields.map(generateFields).join('') +\n                `</ul>`;\n\n                return result;\n            },\n\n            _buildEditTemplate: function(model, fields, editableFields, isMobile) {\n                var settings = extend({}, kendo.Template, this.options.templateSettings);\n                var template = this.options.editable.template;\n                var html = \"\";\n\n                if (template) {\n                    if (typeof template === STRING) {\n                        template = kendo.unescape(template);\n                    }\n                    html += (kendo.template(template, settings))(model);\n                } else if (isMobile) {\n                    html += '<div data-role=\"content\">' + this._buildMobileEditTemplate(model, fields, editableFields) + '</div>';\n                } else {\n                    html += this._buildDesktopEditTemplate(model, fields, editableFields);\n                }\n\n                return html;\n            },\n\n            _createEndTimezoneButton: function() {\n                return '</ul></div>';\n            },\n\n            _revertTimezones: function(model) {\n                model.set(\"startTimezone\", this._startTimezone);\n                model.set(\"endTimezone\", this._endTimezone);\n\n                delete this._startTimezone;\n                delete this._endTimezone;\n            }\n        });\n\n        var MobileEditor = Editor.extend({\n            init: function() {\n                Editor.fn.init.apply(this, arguments);\n\n                this.pane = kendo.Pane.wrap(this.element, {\n                    viewEngine: {\n                        viewOptions: {\n                            renderOnInit: true,\n                            wrap: false,\n                            wrapInSections: true,\n                            detachOnHide: false,\n                            detachOnDestroy: false\n                        }\n                    }\n                });\n                this.pane.element.parent().css(\"height\", this.options.height);\n                this.view = this.pane.view();\n            },\n\n            options: {\n                animations: {\n                    left: \"slide\",\n                    right: \"slide:right\"\n                }\n            },\n\n            destroy: function() {\n                this.close();\n                this.unbind();\n                this.pane.destroy();\n            },\n\n            _initTimezoneEditor: function(model) {\n                var that = this;\n                var pane = that.pane;\n                var messages = that.options.messages;\n                var timezoneView = that.timezoneView;\n                var container = timezoneView ? timezoneView.content.find(\".k-scheduler-timezones\") : that.container.find(\".k-scheduler-timezones\");\n                var kSwitch = container.find(\"input.k-timezone-toggle\").data(\"kendoSwitch\");\n                var endTimezoneRow = container.find(\"li.k-item:not(.k-zonepicker)\").last();\n                var startTimezoneChange = function(e) {\n                    if (e.field === \"startTimezone\") {\n                        var value = model.startTimezone;\n\n                        kSwitch.enable(value);\n\n                        if (!value) {\n                            endTimezoneRow.hide();\n                            model.set(\"endTimezone\", \"\");\n                            kSwitch.value(false);\n                        }\n                    }\n                };\n\n                that._startTimezone = model.startTimezone || \"\";\n                that._endTimezone = model.endTimezone || \"\";\n\n                if (!timezoneView) {\n                    var html = '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\">' +\n                    '<div data-role=\"header\" class=\"k-appbar k-appbar-primary\">' +\n                        kendo.html.renderButton(`<button class=\"k-header-cancel k-scheduler-cancel\" title=\"${messages.cancel}\" aria-label=\"${messages.cancel}\"></button>`, {\n                            fillMode: \"flat\",\n                            icon: \"chevron-left\"\n                        }) +\n                        '<span class=\"k-spacer\"></span>' +\n                        `<span>${encode(messages.editor.timezoneTitle)}</span>` +\n                        '<span class=\"k-spacer\"></span>' +\n                        encode(messages.editor.timezoneTitle) +\n                        kendo.html.renderButton(`<button class=\"k-header-done k-scheduler-update\" title=\"${messages.save}\" aria-label=\"${messages.save}\"></button>`, {\n                            fillMode: \"flat\",\n                            icon: \"check\"\n                        }) +\n                    '</div><div data-role=\"content\"></div>';\n\n                    this.timezoneView = timezoneView = pane.append(html);\n\n                    timezoneView.contentElement.append(container.show());\n\n                    timezoneView.element.on(CLICK + NS, \".k-scheduler-cancel, .k-scheduler-update\", function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        if ($(this).hasClass(\"k-scheduler-cancel\")) {\n                            that._revertTimezones(model);\n                        }\n\n                        var editView = that._editPane;\n\n                        var text = timezoneButtonText(model, messages.editor.noTimezone);\n\n                        editView.content.find(\".k-timezone-label\").text(text);\n\n                        pane.navigate(editView, that.options.animations.right);\n                    });\n\n                    kSwitch.bind(CHANGE, function(ev) {\n                        endTimezoneRow.toggle(ev.checked);\n                        model.set(\"endTimezone\", \"\");\n                    });\n                    model.bind(CHANGE, startTimezoneChange);\n                }\n\n                kSwitch.value(!!model.endTimezone);\n                kSwitch.enable(!!model.startTimezone);\n\n                if (model.endTimezone) {\n                    endTimezoneRow.show();\n                } else {\n                    endTimezoneRow.hide();\n                }\n\n                pane.navigate(timezoneView, that.options.animations.left);\n            },\n\n            showDialog: function(options) {\n                var actions = options.buttons.map(function(button) {\n                    return {\n                        text: button.text,\n                        action: button.click\n                    };\n                });\n\n                actions.push({\n                    text: this.options.messages.cancel,\n                    primary: true\n                });\n\n                $(\"<div />\").appendTo(document.body)\n                    .kendoDialog({\n                        close: function() {\n                            this.destroy();\n                        },\n                        modal: {\n                            preventScroll: true\n                        },\n                        closable: false,\n                        title: false,\n                        content: options.text,\n                        actions: actions\n                    });\n            },\n\n            editEvent: function(model) {\n                var pane = this.pane;\n                var html = \"\";\n\n                var messages = this.options.messages;\n                var updateText = messages.save;\n                var removeText = messages.destroy;\n                var cancelText = messages.cancel;\n                var titleText = messages.editor.editorTitle;\n                var resetSeries = messages.resetSeries;\n\n                html += '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\"' + kendo.attr(\"uid\") + '=\"' + model.uid + '\">' +\n                    '<div data-role=\"header\" class=\"k-appbar k-appbar-primary\">' +\n                        kendo.html.renderButton(`<button class=\"k-header-cancel k-scheduler-cancel\" title=\"${cancelText}\" aria-label=\"${cancelText}\"></button>`, {\n                            fillMode: \"flat\",\n                            icon: \"chevron-left\"\n                        }) +\n                        '<span class=\"k-spacer\"></span>' +\n                        `<span>${encode(titleText)}</span>` +\n                        '<span class=\"k-spacer\"></span>' +\n                        kendo.html.renderButton(`<button class=\"k-header-done k-scheduler-update\" title=\"${updateText}\" aria-label=\"${updateText}\"></button>`, {\n                            fillMode: \"flat\",\n                            icon: \"check\"\n                        }) +\n                    '</div>';\n\n                var fields = this.fields(editors.mobile, model);\n\n                var that = this;\n\n                var editableFields = [];\n\n                html += this._buildEditTemplate(model, fields, editableFields, true);\n\n                html += \"</div>\";\n\n                var view = pane.append(html);\n\n                if (!model.isNew() && this.options.editable && this.options.editable.destroy !== false && model.isRecurrenceHead() && model.recurrenceException) {\n                    var resetSeriesBtn = '<ul class=\"k-edit-buttons k-listgroup k-listgroup-flush\"><li class=\"k-item k-listgroup-item\"><span class=\"k-scheduler-resetSeries k-link k-label\" aria-label=\"' + resetSeries + '\">' + resetSeries + '</span></li></ul>';\n                    view.contentElement.append(resetSeriesBtn);\n                }\n\n                if (!model.isNew() && this.options.editable && this.options.editable.destroy !== false) {\n                    var deleteBtn = '<ul class=\"k-edit-buttons k-listgroup k-listgroup-flush\"><li class=\"k-item k-listgroup-item\"><span class=\"k-scheduler-delete k-link k-label\" aria-label=\"' + removeText + '\">' + removeText + '</span></li></ul>';\n                    view.contentElement.append(deleteBtn);\n                }\n\n                this._editPane = view;\n\n                var container = this.container = view.element;\n\n                this.editable = container.kendoEditable({\n                    fields: editableFields,\n                    model: model,\n                    clearContainer: false,\n                    target: that.options.target,\n                    validateOnBlur: true\n                }).data(\"kendoEditable\");\n\n                if (!this.trigger(\"edit\", { container: container, model: model })) {\n\n                    container.on(CLICK + NS, \"a.k-scheduler-edit, .k-scheduler-cancel, .k-scheduler-update, span.k-scheduler-delete, span.k-scheduler-resetSeries\", function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        var button = $(this);\n\n                        if (!button.hasClass(\"k-scheduler-edit\")) {\n\n                            var name = \"cancel\";\n\n                            if (button.hasClass(\"k-scheduler-update\")) {\n                                name = \"save\";\n                            } else if (button.hasClass(\"k-scheduler-delete\")) {\n                                name = \"remove\";\n                            } else if (button.hasClass(\"k-scheduler-resetSeries\")) {\n                                name = RESET;\n                            }\n\n                            that.trigger(name, { container: container, model: model });\n                        } else {\n                            pane.navigate(this._editPane, that.options.animations.right);\n                        }\n                    });\n\n                    pane.navigate(view, that.options.animations.left);\n\n                    model.bind(CHANGE, that.toggleDateValidationHandler);\n                } else {\n                    this.trigger(\"cancel\", { container: container, model: model });\n                }\n\n                return this.editable;\n            },\n\n            _views: function() {\n                return this.pane.element\n                        .find(kendo.roleSelector(\"view\"))\n                        .not(this.view.element);\n            },\n\n            close: function() {\n                if (this.container) {\n                    this.pane.navigate(\"\", this.options.animations.right);\n\n                    var views = this._views();\n                    var view;\n\n                    for (var idx = 0, length = views.length; idx < length; idx++) {\n                        view = views.eq(idx).data(\"kendoView\");\n                        if (view) {\n                           view.purge();\n                        }\n                    }\n\n                    views.remove();\n\n                    this.container = null;\n                    if (this.editable) {\n                        this.editable.options.model.unbind(CHANGE, this.toggleDateValidationHandler);\n                        this.editable.destroy();\n                        this.editable = null;\n                    }\n                    this.timezoneView = null;\n                }\n            }\n        });\n\n        var PopupEditor = Editor.extend({\n            destroy: function() {\n                this.close();\n                this.unbind();\n            },\n\n            editEvent: function(model) {\n                var that = this;\n                var editable = that.options.editable;\n                var html = '<div ' + kendo.attr(\"uid\") + '=\"' + model.uid + '\" class=\"k-popup-edit-form k-scheduler-edit-form\"><div class=\"k-edit-form-container\">';\n                var $html;\n                var messages = that.options.messages;\n                var updateText = messages.save;\n                var updateIcon = \"save\";\n                var cancelText = messages.cancel;\n                var cancelIcon = \"cancel-outline\";\n                var deleteText = messages.destroy;\n                var deleteIcon = \"trash\";\n                var resetSeries = messages.resetSeries;\n                var fields = this.fields(editors.desktop, model);\n                var editableFields = [];\n                var fieldName;\n\n                html += this._buildEditTemplate(model, fields, editableFields, false);\n\n                var attr;\n                var options = isPlainObject(editable) ? editable.window : {};\n\n                html += '<div class=\"k-edit-buttons\">';\n\n                html += this.createButton({ name: \"update\", text: updateText, attr: attr, icon: updateIcon }) + this.createButton({ name: \"canceledit\", text: cancelText, attr: attr, icon: cancelIcon });\n\n                if (!model.isNew() && editable.destroy !== false && model.isRecurrenceHead() && model.recurrenceException) {\n                    html += this.createButton({ name: \"resetSeries\", text: resetSeries, attr: attr });\n                }\n\n                if ((!model.isNew() || model.isRecurring()) && editable.destroy !== false) {\n                    html += '<span class=\"k-spacer\"></span>' + this.createButton({ name: \"delete\", text: deleteText, attr: attr, icon: deleteIcon, fillMode: \"flat\", themeColor: \"primary\" });\n                }\n\n                html += '</div></div></div>';\n\n                $html = $(html);\n                kendo.applyStylesFromKendoAttributes($html, [\"display\"]);\n\n                var container = this.container = $html\n                    .appendTo(that.element).eq(0)\n                    .kendoWindow(extend({\n                        modal: true,\n                        resizable: false,\n                        draggable: true,\n                        title: messages.editor.editorTitle,\n                        visible: false,\n                        close: function(e) {\n                            if (e.userTriggered) {\n                                if (that.trigger(CANCEL, { container: container, model: model })) {\n                                    e.preventDefault();\n                                }\n                            }\n                        }\n                    }, options));\n\n                that.editable = container.kendoEditable({\n                    fields: editableFields,\n                    model: model,\n                    clearContainer: false,\n                    validateOnBlur: true,\n                    target: that.options.target\n                }).data(\"kendoEditable\");\n\n                for (var field in editableFields) {\n                    if (editableFields[field].field !== \"recurrenceRule\") {\n                        fieldName = editableFields[field].field;\n                        container.find(\"[name='\" + fieldName + \"']\").attr(\"aria-labelledby\", fieldName + \"_label\");\n                    }\n\n                    if (editableFields[field].field === \"isAllDay\") {\n                        container.find(\"label[for='\" + fieldName + \"']\").attr(\"id\", fieldName + \"_label\");\n                    }\n                }\n\n                if (!that.trigger(EDIT, { container: container, model: model })) {\n\n                    if (editable.window && editable.window.position) {\n                        container.data(\"kendoWindow\").open();\n                    } else {\n                        container.data(\"kendoWindow\").center().open();\n                    }\n\n                    container.on(CLICK + NS, \"button.k-scheduler-cancel\", function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        that.trigger(CANCEL, { container: container, model: model });\n                    });\n\n                    container.on(CLICK + NS, \"button.k-scheduler-update\", function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        that.trigger(\"save\", { container: container, model: model });\n                    });\n\n                    container.on(CLICK + NS, \"button.k-scheduler-delete\", function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        that.trigger(REMOVE, { container: container, model: model });\n                    });\n\n                    container.on(CLICK + NS, \"button.k-scheduler-resetSeries\", function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        that.trigger(RESET, { container: container, model: model });\n                    });\n\n                    kendo.cycleForm(container);\n\n                    model.bind(CHANGE, that.toggleDateValidationHandler);\n                } else {\n                    that.trigger(CANCEL, { container: container, model: model });\n                }\n\n                return that.editable;\n            },\n\n            close: function() {\n                var that = this;\n\n                var destroy = function() {\n                    if (that.editable) {\n                        that.editable.options.model.unbind(CHANGE, that.toggleDateValidationHandler);\n                        that.editable.destroy();\n                        that.editable = null;\n                        that.container = null;\n                    }\n                    if (that.popup) {\n                        that.popup.destroy();\n                        that.popup = null;\n                    }\n                };\n\n                if (that.editable) {\n                    if (that._timezonePopup && that._timezonePopup.data(\"kendoWindow\")) {\n                        that._timezonePopup.data(\"kendoWindow\").destroy();\n                        that._timezonePopup = null;\n                    }\n\n                    if (that.container.is(\":visible\")) {\n                        that.container.data(\"kendoWindow\").bind(\"deactivate\", destroy).close();\n                    } else {\n                        destroy();\n                    }\n                } else {\n                    destroy();\n                }\n            },\n\n            _createEndTimezoneButton: function() {\n                var messages = this.options.messages;\n                var html = \"\";\n\n                html += '<div class=\"k-edit-buttons\">';\n                html += this.createButton({ name: \"savetimezone\", icon: \"save\", themeColor: \"primary\", text: messages.save }) + this.createButton({ name: \"canceltimezone\", icon: \"cancel-outline\", text: messages.cancel });\n                html += '</div></div></div>';\n\n                return html;\n            },\n\n            showDialog: function(options) {\n                var html = kendo.format(\"<div class='k-popup-edit-form'><div class='k-edit-form-container'><p class='k-popup-message'>{0}</p>\", options.text);\n\n                html += '<div class=\"k-edit-buttons\">';\n\n                for (var buttonIndex = 0; buttonIndex < options.buttons.length; buttonIndex++) {\n                    html += this.createButton(options.buttons[buttonIndex]);\n                }\n\n                html += '</div></div></div>';\n\n                var wrapper = this.element;\n\n                if (this.popup) {\n                    this.popup.destroy();\n                }\n\n                var popup = this.popup = $(html).appendTo(wrapper)\n                                   .eq(0)\n                                   .on(CLICK, \".k-button\", function(e) {\n                                        e.preventDefault();\n\n                                        popup.close();\n\n                                        var buttonIndex = $(e.currentTarget).index();\n\n                                        options.buttons[buttonIndex].click();\n                                   })\n                                   .kendoWindow({\n                                       modal: true,\n                                       resizable: false,\n                                       draggable: false,\n                                       title: options.title,\n                                       visible: false,\n                                       close: function() {\n                                           this.destroy();\n                                           wrapper.trigger(\"focus\");\n                                       }\n                                   })\n                                   .getKendoWindow();\n\n                popup.center().open();\n            },\n\n            _initTimezoneEditor: function(model, activator) {\n                var that = this;\n                var container = that.container.find(\".k-scheduler-timezones\");\n                var checkbox = container.find(\"input.k-timezone-toggle\");\n                var endTimezoneRow = container.find(\".k-form-field\").last();\n                var saveButton = container.find(\".k-scheduler-savetimezone\");\n                var cancelButton = container.find(\".k-scheduler-canceltimezone\");\n                var timezonePopup = that._timezonePopup;\n                var startTimezoneChange = function(e) {\n                    if (e.field === \"startTimezone\") {\n                        var value = model.startTimezone;\n\n                        checkbox.prop(DISABLED, !value);\n\n                        if (!value) {\n                            endTimezoneRow.hide();\n                            model.set(\"endTimezone\", \"\");\n                            checkbox.prop(\"checked\", false);\n                        }\n                    }\n                };\n                var wnd;\n\n                that._startTimezone = model.startTimezone;\n                that._endTimezone = model.endTimezone;\n\n                if (!timezonePopup) {\n                    that._timezonePopup = timezonePopup = container.kendoWindow({\n                        modal: true,\n                        resizable: false,\n                        draggable: true,\n                        title: that.options.messages.editor.timezoneEditorTitle,\n                        visible: false,\n                        close: function(e) {\n                            model.unbind(CHANGE, startTimezoneChange);\n\n                            if (e.userTriggered) {\n                                that._revertTimezones(model);\n                            }\n\n                            if (activator) {\n                                activator.focus();\n                            }\n                        }\n                    });\n\n                    checkbox.on(CLICK, function() {\n                        endTimezoneRow.toggle(checkbox.prop(\"checked\"));\n                        model.set(\"endTimezone\", \"\");\n                    });\n\n                    saveButton.on(CLICK, function(e) {\n                        e.preventDefault();\n                        wnd.close();\n                    });\n\n                    cancelButton.on(CLICK, function(e) {\n                        e.preventDefault();\n                        that._revertTimezones(model);\n                        wnd.close();\n                    });\n\n                    model.bind(CHANGE, startTimezoneChange);\n                }\n\n                checkbox.prop(\"checked\", model.endTimezone).prop(DISABLED, !model.startTimezone);\n\n                if (model.endTimezone) {\n                    endTimezoneRow.show();\n                } else {\n                    endTimezoneRow.hide();\n                }\n\n                wnd = timezonePopup.data(\"kendoWindow\");\n                wnd.center().open();\n            }\n        });\n\n        var Scheduler = DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                if (!that.options.views || !that.options.views.length) {\n                    that.options.views = [\"day\", \"week\"];\n                }\n\n                that.resources = [];\n\n                that._initModel();\n\n                that._wrapper();\n\n                if (that.options.selectable) {\n                    that._tabindex();\n                }\n\n                that._views();\n\n                that._toolbar();\n\n                that._dataSource();\n\n                that._resources();\n\n                that._resizeHandler = function() {\n                    that.resize();\n                };\n\n                that.wrapper.on(MOUSEDOWN + NS + \" selectstart\" + NS, function(e) {\n                    var target = $(e.target);\n\n                    if (!target.is(\":kendoFocusable\") && target.closest(\".k-button\").length === 0) {\n                        e.preventDefault();\n                    }\n                });\n\n                if (that.options.editable && that.options.editable.resize !== false) {\n                    that._resizable();\n                }\n\n                that._movable();\n\n                that._bindResize();\n\n                if (that.options.messages && that.options.messages.recurrence) {\n                    recurrence.options = that.options.messages.recurrence;\n                }\n\n                that._navigation();\n                that._selectable();\n                that._touchHandlers();\n\n                that._ariaId = kendo.guid();\n\n                that._createEditor();\n\n                that.mediaQueryList = kendo.mediaQuery(MIN_SCREEN);\n                that.mediaQueryList.onChange(that._onMediaChange.bind(that));\n\n                that.toolbar.find('.k-scheduler-views').children().removeClass('k-button-rectangle');\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.element[0]);\n                }\n            },\n\n            _onMediaChange: function(e) {\n                var that = this;\n                var view = that._selectedView;\n                var toolbarEl = that.toolbar;\n                var toolbar = toolbarEl.getKendoToolBar();\n\n                if (e.matches) {\n                    toolbar.hide(toolbarEl.find(\".k-views-dropdown\"));\n                    toolbar.show(toolbarEl.find(\".k-views-dropdown\").parent().next(\".k-button-group\"));\n                } else {\n                    toolbar.show(toolbarEl.find(\".k-views-dropdown\"));\n                    toolbar.hide(toolbarEl.find(\".k-views-dropdown\").parent().next(\".k-button-group\"));\n                }\n\n                that._model.set(\"formattedDate\", e.matches ? view.dateForTitle() : view.shortDateForTitle());\n            },\n\n            _bindResize: function() {\n                $(window).on(\"resize\" + NS, this._resizeHandler);\n            },\n\n            _unbindResize: function() {\n                $(window).off(\"resize\" + NS, this._resizeHandler);\n            },\n\n            dataItems: function() {\n                var that = this;\n                var items = that.items();\n                var events = that._data;\n                var eventsUids = $.map(items, function(item) {\n                    return $(item).attr(\"data-uid\");\n                });\n                var i;\n                var key;\n\n                var dict = {};\n                var eventsUidsLength = eventsUids.length;\n                for (i = 0; i < eventsUidsLength; i++) {\n                    dict[eventsUids[i]] = null;\n                }\n\n                var eventsCount = events.length;\n                for (i = 0; i < eventsCount; i++) {\n                    var event = events[i];\n                    if (dict[event.uid] !== undefined$1) {\n                        dict[event.uid] = event;\n                    }\n                }\n\n                var sortedData = [];\n                for (key in dict) {\n                    sortedData.push(dict[key]);\n                }\n\n                return sortedData;\n            },\n\n            _isMobile: function() {\n                var options = this.options;\n                return (options.mobile === true && kendo.support.mobileOS) || options.mobile === \"phone\" || options.mobile === \"tablet\";\n            },\n\n            _isTouch: function(event) {\n                return /touch/.test(event.type) || (event.originalEvent && /touch/.test(event.originalEvent.pointerType));\n            },\n\n            _isInverseColor: function(eventElement) {\n                return eventElement.hasClass(INVERSECOLORCLASS);\n            },\n\n            _groupsByResource: function(resources, groupIndex, groupsArray, parentFieldValue, parentField) {\n                if (!groupsArray) {\n                    groupsArray = [];\n                }\n\n                var resource = resources[0];\n                if (resource) {\n                    var group;\n                    var data = resource.dataSource.view();\n                    var prevIndex = 0;\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        var fieldValue = kendo.getter(resource.dataValueField)(data[dataIndex]);\n                        var currentGroupIndex = groupIndex + prevIndex + dataIndex;\n\n                        group = this._groupsByResource(resources.slice(1), currentGroupIndex, groupsArray, fieldValue, resource.field);\n                        group[resource.field] = fieldValue;\n                        prevIndex = group.groupIndex;\n\n                        if (parentField && parentFieldValue) {\n                            group[parentField] = parentFieldValue;\n                        }\n\n                        if (resources.length === 1) {\n                            group.groupIndex = groupIndex + dataIndex;\n                            groupsArray.push(group);\n                        }\n                    }\n                    return group;\n                } else {\n                    return {};\n                }\n            },\n\n            data: function() {\n                return this._data;\n            },\n\n            select: function(options) {\n                var that = this;\n                var view = that.view();\n                var selection = that._selection;\n                var groups = view.groups;\n                var selectedGroups;\n\n                if (options === undefined$1) {\n                    var selectedEvents;\n                    var slots = view._selectedSlots;\n\n                    if (!selection) {\n                        return [];\n                    }\n\n                    if (selection && selection.events) {\n                        selectedEvents = that._selectedEvents();\n                    }\n\n                    return {\n                        start: selection.start,\n                        end: selection.end,\n                        events: selectedEvents,\n                        slots: slots,\n                        resources: view._resourceBySlot(selection)\n                    };\n                }\n\n                if (!options) {\n                    that._selection = null;\n                    that._old = null;\n                    view.clearSelection();\n\n                    return;\n                }\n\n                if (Array.isArray(options)) {\n                    options = {\n                        events: options.splice(0)\n                    };\n                }\n\n                if (options.resources) {\n                    var fieldName;\n                    var filters = [];\n                    var groupsByResource = [];\n\n                    if (view.groupedResources) {\n                        that._groupsByResource(view.groupedResources, 0, groupsByResource);\n                    }\n\n                    for (fieldName in options.resources) {\n                        filters.push({ field: fieldName, operator: \"eq\", value: options.resources[fieldName] });\n                    }\n\n                    selectedGroups = new kendo.data.Query(groupsByResource)\n                        .filter(filters)\n                        .toArray();\n                }\n\n                if (options.events && options.events.length) {\n                    that._selectEvents(options.events, selectedGroups);\n                    that._select();\n\n                    return;\n                }\n\n                if (groups && (options.start && options.end)) {\n                    var rangeStart = getDate(view._startDate);\n                    var rangeEnd = kendo.date.addDays(getDate(view._endDate),1);\n                    var group;\n                    var ranges;\n\n                    if (options.start < rangeEnd && rangeStart <= options.end) {\n                        if (selectedGroups && selectedGroups.length) {\n                            group = groups[selectedGroups[0].groupIndex];\n                        } else {\n                            group = groups[0];\n                        }\n\n                        if (!group.timeSlotCollectionCount()) {\n                            options.isAllDay = true;\n                        }\n\n                        ranges = group.ranges(options.start, options.end, options.isAllDay, false);\n\n                        if (ranges.length) {\n                            that._selection = {\n                                start: kendo.timezone.toLocalDate(ranges[0].start.start),\n                                end: kendo.timezone.toLocalDate(ranges[ranges.length - 1].end.end),\n                                groupIndex: ranges[0].start.groupIndex,\n                                index: ranges[0].start.index,\n                                isAllDay: ranges[0].start.isDaySlot,\n                                events: []\n                            };\n\n                            that._select();\n                        }\n                    }\n                }\n            },\n\n            _selectEvents: function(eventsUids, selectedGroups) {\n                var that = this;\n                var idx;\n                var view = that.view();\n                var groups = view.groups;\n                var eventsLength = eventsUids.length;\n                var isGrouped = selectedGroups && selectedGroups.length;\n                var ctrlKey = that._ctrlKey;\n\n                that._ctrlKey = true;\n\n                for (idx = 0; idx < eventsLength; idx++) {\n                    if (groups && isGrouped) {\n                        var currentGroup = groups[selectedGroups[0].groupIndex];\n                        var events = [];\n                        var timeSlotCollectionCount = currentGroup.timeSlotCollectionCount();\n                        var daySlotCollectionCount = currentGroup.daySlotCollectionCount();\n\n                        for (var collIdx = 0; collIdx < timeSlotCollectionCount; collIdx++) {\n                            events = events.concat(currentGroup.getTimeSlotCollection(collIdx).events());\n                        }\n\n                        for (var dayCollIdx = 0; dayCollIdx < daySlotCollectionCount; dayCollIdx++) {\n                            events = events.concat(currentGroup.getDaySlotCollection(dayCollIdx).events());\n                        }\n\n                        events = new kendo.data.Query(events)\n                            .filter({ field: event => event.element[0].getAttribute('data-uid'), operator: \"eq\", value: eventsUids[idx] })\n                            .toArray();\n\n                        if (events[0]) {\n                            that._createSelection(events[0].element);\n                        }\n                    } else {\n                        var element = view.element.find(kendo.format(\".k-event[data-uid={0}], .k-task[data-uid={0}]\", eventsUids[idx]));\n\n                        if (element.length) {\n                            that._createSelection(element[0]);\n                        }\n                    }\n                }\n\n                that._ctrlKey = ctrlKey;\n            },\n\n            _touchHandlers: function() {\n                var that = this;\n                var startX;\n                var startY;\n                var endX;\n                var endY;\n                var timeStamp;\n                var wrapper = that.wrapper;\n                var touchMoveHandler = that._touchMove.bind(that);\n\n                wrapper.on(TOUCHSTART + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", function(e) {\n                    var content = that.wrapper.find(\".k-scheduler-content\");\n\n                    if (!that._isTouch(e)) {\n                        return;\n                    }\n\n                    content.stop(true, false);\n\n                    that._touchPosX = startX = that._tapPosition(e, 'X');\n                    that._touchPosY = startY = that._tapPosition(e, 'Y');\n                    that._userTouched = true;\n                    that.view()._scrolling = false;\n                    timeStamp = Date.now();\n\n                    wrapper.on(TOUCHMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", touchMoveHandler);\n                });\n\n                wrapper.on(\"contextmenu\" + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", function(e) {\n                    that._preventFocus = true;\n                });\n\n                wrapper.on(TOUCHEND + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", function(e) {\n                    if (!that._isTouch(e)) {\n                        return;\n                    }\n\n                    var delta = Date.now() - timeStamp;\n                    var content = that.wrapper.find(\".k-scheduler-content\");\n                    var amplitude = -that._amplitude * (3000 / delta);\n\n                    endX = that._tapPosition(e, 'X');\n                    endY = that._tapPosition(e, 'Y');\n\n                    if (that._dragging) {\n                        return;\n                    }\n\n                    if (that.options.selectable && (Math.abs(endX - startX) <= 10 || Math.abs(endY - startY) <= 10)) {\n                        that._mouseDownSelection(e);\n                    }\n\n                    if (!kendo.support.kineticScrollNeeded && delta < 200 && Math.abs(endX - startX) > 10) {\n                        content.animate({\n                            scrollTop: content[0].scrollTop + amplitude\n                        });\n                    }\n\n                    wrapper.off(TOUCHMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", touchMoveHandler);\n                });\n            },\n\n            _navigation: function() {\n                var that = this,\n                    wrapper = that.wrapper;\n\n                wrapper.on(\"focus\" + NS, function() {\n                    var selection = that._selection;\n\n                    setTimeout(function() {\n                        if (!that._preventFocus) {\n                            if ((!selection ||\n                                    (selection.events.length > 0 && wrapper.find(\"[data-uid='\" + selection.events[0] + \"']\").length === 0)) &&\n                                !that._userTouched &&\n                                !that._mouseDown) {\n                                    that._initialFocus();\n                            } else {\n                                that._mouseDown = false;\n                            }\n\n                            that._select();\n                        } else {\n                            that._preventFocus = false;\n                        }\n                    }, 300);\n                });\n\n                wrapper.on(\"focusout\" + NS, function() {\n                    that._ctrlKey = that._shiftKey = false;\n                });\n\n                wrapper.on(\"keydown\" + NS, that._keydown.bind(that));\n\n                wrapper.on(\"keyup\" + NS, function(e) {\n                    that._ctrlKey = e.ctrlKey;\n                    that._shiftKey = e.shiftKey;\n                });\n            },\n\n            _selectable: function() {\n                var that = this;\n                var wrapper = that.wrapper;\n\n                if (!that.options.selectable) {\n                    return;\n                }\n\n                wrapper.on(MOUSEDOWN + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event, .k-scheduler-body td .k-link\", function(e) {\n                    if (that._isTouch(e)) {\n                        return;\n                    }\n                    that._mouseDownSelection(e);\n                });\n\n                var mouseMoveHandler = that._mouseMove.bind(that);\n\n                wrapper.on(MOUSEDOWN + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", function(e) {\n                    var which = e.which;\n                    var button = e.button;\n                    var isRight = which && which === 3 || button && button == 2;\n\n                    if (that._isTouch(e)) {\n                        return;\n                    }\n\n                    if (!isRight) {\n                        wrapper.on(MOUSEMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", mouseMoveHandler);\n                    }\n                });\n\n                wrapper.on(\"mouseup\" + NS + \" mousecancel\" + NS, function() {\n                    wrapper.off(MOUSEMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", mouseMoveHandler);\n                });\n            },\n\n            _mouseDownSelection: function(e) {\n                var which = e.which;\n                var button = e.button;\n                var isRight = which && which === 3 || button && button == 2;\n\n                if (!isRight) {\n                    if (e.ctrlKey) {\n                        this._ctrlKey = e.ctrlKey;\n                    }\n\n                    if (e.shiftKey) {\n                        this._shiftKey = e.shiftKey;\n                    }\n\n                    this._mouseDown = true;\n                    this._createSelection(e.currentTarget);\n\n                    if ($(e.currentTarget).hasClass(\"k-event\")) {\n                        this._selection.eventElement = e.currentTarget;\n                    }\n                }\n\n                if (this.view().name !== \"year\" && kendo._activeElement() !== this.wrapper.get(0)) {\n                    kendo.focusElement(this.wrapper);\n                } else {\n                    this._select();\n                }\n\n                if (this.toolbar) {\n                    this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n                }\n            },\n\n            _selectFirstSlot: function() {\n                var firstAllDay = this.wrapper.find(\".k-scheduler-header-all-day\").find(\"td\").first(),\n                    firstContent = this.wrapper.find(\".k-scheduler-content\").find(\"td\").first(),\n                    firstSlot;\n\n                if (firstAllDay.length > 0) {\n                    firstSlot = firstAllDay;\n                } else if (firstContent.length > 0) {\n                    firstSlot = firstContent;\n                } else {\n                    firstSlot = this.wrapper.find(\".k-scheduler-body\").find(\".k-link\").first();\n                }\n\n                this._createSelection(firstSlot);\n            },\n\n            _firstEvent: function() {\n                var firstEventInAllDay = this.wrapper.find(\".k-scheduler-header-wrap .k-event, .k-task\").first(),\n                    firstEventInContent = this.wrapper.find(\".k-scheduler-content .k-event\").first(),\n                    firstEvent, allDayEvent, contentEvent;\n\n                if (firstEventInAllDay.length > 0) {\n                    if (firstEventInContent.length > 0) {\n                        allDayEvent = this.occurrenceByUid(firstEventInAllDay.data(\"uid\"));\n                        contentEvent = this.occurrenceByUid(firstEventInContent.data(\"uid\"));\n\n                        firstEvent = allDayEvent.start <= contentEvent.start ? firstEventInAllDay : firstEventInContent;\n                    } else {\n                        firstEvent = firstEventInAllDay;\n                    }\n                } else if (firstEventInContent) {\n                    firstEvent = firstEventInContent;\n                }\n\n                return firstEvent;\n            },\n\n            _initialFocus: function() {\n                var firstEvent = this._firstEvent();\n\n                if (this.options.selectable) {\n                    if (firstEvent && firstEvent.length > 0) {\n                        this._createSelection(firstEvent);\n                        this._selection.eventElement = firstEvent[0];\n                    } else {\n                        this._selectFirstSlot();\n                    }\n                } else if (this.toolbar && this.toolbar.find(\".\" + FOCUSEDSTATE).length === 0) {\n                    this._focusToolbar();\n                } else if (this.toolbar) {\n                    this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n                }\n            },\n\n            _select: function() {\n                var that = this;\n                var view = that.view();\n                var wrapper = that.wrapper;\n                var current = view.current();\n                var selection = that._selection;\n                var oldSelection = that._old ? that._old.selection : null;\n                var oldEventsLength = that._old ? that._old.eventsLength : null;\n                if (!selection) {\n                    return;\n                }\n\n                if (current) {\n                    current.removeAttribute(\"id\");\n                    wrapper.removeAttr(\"aria-activedescendant\");\n                }\n\n                view.select(selection);\n                that._selection.eventElement = null;\n\n                current = view.current();\n                if (current) {\n                    current.setAttribute(\"id\", that._ariaId);\n                    wrapper.attr(\"aria-activedescendant\", that._ariaId);\n\n                    if (oldSelection !== current || (selection.events && (oldEventsLength !== selection.events.length ))) {\n                        var currentUid = $(current).data(\"uid\");\n\n                        if (that._old && currentUid &&\n                            currentUid === $(that._old.selection).data(\"uid\") &&\n                            (selection.events && that._old.eventsLength === selection.events.length)) {\n                            return;\n                        }\n\n                        var events = that._selectedEvents();\n                        var slots = view._selectedSlots;\n\n                        that._old = {\n                            selection: current,\n                            eventsLength: events.length\n                        };\n\n                        that.trigger(CHANGE, {\n                            start: selection.start,\n                            end: selection.end,\n                            events: events,\n                            slots: slots,\n                            resources: view._resourceBySlot(selection)\n                        });\n                    }\n                }\n            },\n\n            _selectedEvents: function() {\n                var uids = this._selection.events;\n                var length = uids.length;\n                var idx = 0;\n                var event;\n\n                var events = [];\n\n                for (; idx < length; idx++) {\n                    event = this.occurrenceByUid(uids[idx]);\n                    if (event) {\n                        events.push(event);\n                    }\n                }\n\n                return events;\n            },\n\n            _tapPosition: function(event, coordinate) {\n                return /touch/.test(event.type) ? (event.originalEvent || event).changedTouches[0]['page' + coordinate] : event['page' + coordinate];\n            },\n\n            _touchMove: function(e) {\n                var that = this;\n                var content = that.wrapper.find(\".k-scheduler-content\");\n                var verticalScroll = content[0].scrollHeight > content[0].clientHeight;\n                var horizontalScroll = content[0].scrollWidth > content[0].clientWidth;\n                var endY = that._tapPosition(e, 'Y');\n                var endX = that._tapPosition(e, 'X');\n                var scrollTop = content[0].scrollTop - Math.round(endY - that._touchPosY);\n                var scrollLeft = content[0].scrollLeft - Math.round(endX - that._touchPosX);\n                var applyVerticalScroll = verticalScroll && Math.abs(endY - that._touchPosY) > 10;\n                var applyhorizontalScroll = horizontalScroll && Math.abs(endY - that._touchPosY) > 10;\n\n\n                if (that._dragging || kendo.support.kineticScrollNeeded || !that._isTouch(e)) {\n                    return;\n                }\n\n                if (applyVerticalScroll || applyhorizontalScroll) {\n                    that._amplitude = Math.round(endY - that._touchPosY);\n                    that._touchPosY = endY;\n                    that._touchPosX = endX;\n                    content.animate({\n                        scrollTop: scrollTop,\n                        scrollLeft: scrollLeft\n                    }, 0);\n                    that.view()._scrolling = true;\n                }\n            },\n\n            _mouseMove: function(e) {\n                var that = this;\n                clearTimeout(that._moveTimer);\n\n                if (that._isTouch(e)) {\n                    return;\n                }\n\n                that._moveTimer = setTimeout(function() {\n                    var view = that.view();\n                    var selection = that._selection;\n\n                    if (selection) {\n                        var slot = view.selectionByElement($(e.currentTarget));\n\n                        if (slot && selection.groupIndex === slot.groupIndex) {\n                            var startDate = slot.startDate();\n                            var endDate = slot.endDate();\n\n                            if (startDate >= selection.end) {\n                                selection.backward = false;\n                            } else if (endDate <= selection.start) {\n                                selection.backward = true;\n                            }\n\n                            if (selection.backward) {\n                                selection.start = startDate;\n                            } else {\n                                selection.end = endDate;\n                            }\n\n                            that._select();\n                        }\n                    }\n                }, 5);\n            },\n\n            _viewByIndex: function(index) {\n                var view, views = this.views;\n\n                for (view in views) {\n                    if (!index) {\n                        return view;\n                    }\n\n                    index--;\n                }\n            },\n\n            _keydownToolbar: function(e) {\n                var key = e.keyCode;\n\n                if (e.altKey && key === keys.DOWN && this.toolbar.find(\".k-nav-current\").hasClass(FOCUSEDSTATE)) {\n                    this._showCalendar();\n                    e.preventDefault();\n                    return;\n                } else if (key === keys.DOWN) {\n                    if (this._selectedViewName === \"year\") {\n                        this.view().calendar.focus();\n                    } else if (document.activeElement !== this.element[0]) {\n                        this.element.focus();\n                    }\n\n                    e.preventDefault();\n\n                    return;\n                }\n            },\n\n            _keydownView: function(e) {\n                var key = e.keyCode,\n                    isModifier = key === 16 || key === 18 || key === 17 || key === 91 || key === 92,\n                    selection = this._selection,\n                    view = this.view(),\n                    editable = view.options.editable,\n                    arrowKeys = [ keys.LEFT, keys.RIGHT, keys.UP, keys.DOWN ],\n                    isRtl = kendo.support.isRtl(this.element),\n                    previous, content, cell;\n\n                if (isModifier) {\n                    return;\n                }\n\n                // slots selection via keyboard is no longer available\n                // see here: https://github.com/telerik/kendo-themes/blob/develop/docs/accessibility/Scheduler.md\n                if (!selection) {\n                    return;\n                }\n\n                if (key === keys.ENTER) {\n                    if (selection.events.length && editable) {\n                        if (editable.update !== false) {\n                            this.editEvent(selection.events[0]);\n                        }\n                    }\n                } else if ((key === keys.DELETE || key === keys.BACKSPACE) && editable !== false && editable.destroy !== false) {\n                    this.removeEvent(selection.events[0]);\n                } else if (arrowKeys.indexOf(key) > -1) {\n                    previous = key === keys.UP || (key === keys.LEFT && !isRtl) || (key === keys.RIGHT && isRtl);\n\n                    if (view.moveToEvent(selection, previous)) {\n                        this._select();\n\n                        // Focus the Scheduler element only if it not the currently focused element\n                        if (document.activeElement !== this.element[0]) {\n                            this.element.trigger(\"focus\");\n                        }\n\n                        e.preventDefault();\n                    }\n                } else if (key === keys.HOME || key === keys.END) {\n                    e.preventDefault();\n                    content = this.view().content.eq(0);\n\n                    if (key === keys.HOME) {\n                        cell = content.find(\".k-scheduler-table td\").first();\n                    } else {\n                        cell = content.find(\".k-scheduler-table td\").last();\n                    }\n\n                    this.view()._scrollTo(cell[0], content[0]);\n                }\n            },\n\n            _keydownShortcut: function(key) {\n                var currentDate = new Date(),\n                    timezone = this.options.timezone,\n                    editable = this.view().options.editable;\n\n                if (key === 66 && !!this.view().toggleFullDay) {\n                    this.view().toggleFullDay();\n                } else if (key === 67 && editable && editable.create !== false) {\n                    this.addEvent(extend({}, {\n                        start: this.date(),\n                        end: this.date()\n                    }));\n                } else if (key === 84) {\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    if (!this.trigger(\"navigate\", { view: this._selectedViewName, action: \"today\", date: date })) {\n                        this.date(date);\n                    }\n                }\n            },\n\n            _keydownYearView: function(e) {\n                var view = this.view(),\n                    selection = this._selection,\n                    key = e.keyCode;\n\n                if (key === keys.TAB) {\n                    return;\n                }\n\n                if (key === keys.F10) {\n                    this._focusToolbar();\n                    e.preventDefault();\n                } else {\n                    this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n                    view.calendar.focus();\n                }\n\n                if (selection) {\n                    this._adjustSelectedDate();\n                }\n\n                e.preventDefault();\n            },\n\n            _keydownAgendaView: function(e) {\n                var key = e.keyCode,\n                    view = this.view(),\n                    selection = this._selection,\n                    content, cell;\n\n                if (view.move(selection, key)) {\n                    e.preventDefault();\n                    this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n                    this._select();\n                } else if (key === keys.HOME || key === keys.END) {\n                    e.preventDefault();\n                    content = this.view().content.eq(0);\n\n                    if (key === keys.HOME) {\n                        cell = content.find(\".k-scheduler-table td\").first();\n                    } else {\n                        cell = content.find(\".k-scheduler-table td\").last();\n                    }\n\n                    this.view()._scrollTo(cell[0], content[0]);\n                }\n            },\n\n            _keydownChangeView: function(key) {\n                var viewIndex = key - 49,\n                    viewByIndex;\n\n                if (viewIndex === -1) {\n                    viewIndex = 9;\n                }\n\n                viewByIndex = this._viewByIndex(viewIndex);\n\n                if (viewByIndex && !this.trigger(\"navigate\", { view: viewByIndex, action: \"changeView\", date: this.date() })) {\n                    this.view(viewByIndex);\n                }\n            },\n\n            _keydownChangeDate: function(key) {\n                var isRtl = kendo.support.isRtl(this.element),\n                    direction = (isRtl && key === keys.LEFT) || (!isRtl && key === keys.RIGHT) ? \"next\" : \"previous\";\n\n                if (direction === \"next\") {\n                    date = this.view().nextDate();\n                } else {\n                    date = this.view().previousDate();\n                }\n\n                if (!this.trigger(\"navigate\", { view: this._selectedViewName, action: direction, date: date })) {\n                    this.date(date);\n                    this._initialFocus();\n                    this._select();\n                }\n            },\n\n            _keydown: function(e) {\n                var key = e.keyCode,\n                    shortcutKeys = [66, 67, 84],\n                    toolbarIsFocused = $(e.target).closest(\".k-toolbar\").length > 0,\n                    altKey = e.altKey;\n\n                this._ctrlKey = e.ctrlKey;\n                this._shiftKey = e.shiftKey;\n\n                if (key === keys.ESC && this.popup && this.popup.visible()) {\n                    this.popup.close();\n                    e.preventDefault();\n                    return;\n                }\n\n                if ((key === keys.LEFT || key === keys.RIGHT) && this._shiftKey) {\n                    this._keydownChangeDate(key);\n                    return;\n                }\n\n                if (altKey && key >= 48 && key <= 57) {\n                    this._keydownChangeView(key);\n                    return;\n                }\n\n                if (shortcutKeys.indexOf(key) > -1) {\n                    if (!$(e.target).hasClass(\"k-scheduler-search-input\")) {\n                        this._keydownShortcut(key);\n                    }\n\n                    return;\n                }\n\n                if (toolbarIsFocused) {\n                    this._keydownToolbar(e);\n                } else {\n                    if (this._selectedViewName === \"year\") {\n                        this._keydownYearView(e);\n                        return;\n                    }\n\n                    if (key === keys.F10) {\n                        this._focusToolbar();\n                        e.preventDefault();\n                        return;\n                    }\n\n                    if (this._selectedViewName === \"agenda\") {\n                        this._keydownAgendaView(e);\n                        return;\n                    }\n\n                    this._keydownView(e);\n                }\n            },\n\n            _focusToolbar: function() {\n                this.toolbar.find(\"[tabindex=0]\").first()\n                    .trigger(\"focus\")\n                    .addClass(FOCUSEDSTATE);\n            },\n\n            _createSelection: function(item) {\n                var selection = this._selection,\n                    uid, slot;\n\n                item = $(item);\n\n                if (item.is(\".k-event\")) {\n                    uid = item.attr(kendo.attr(\"uid\"));\n\n                    if (selection && selection.events.indexOf(uid) !== -1 && !this._ctrlKey) {\n                        return;\n                    }\n                }\n\n                if (!selection || (!this._ctrlKey && !this._shiftKey)) {\n                    selection = this._selection = {\n                        events: [],\n                        groupIndex: 0\n                    };\n                }\n\n                slot = this.view().selectionByElement(item);\n\n                if (slot) {\n                    selection.groupIndex = slot.groupIndex || 0;\n                }\n\n                if (uid) {\n                    slot = getOccurrenceByUid(this._data, uid);\n                }\n\n                if (slot && slot.uid) {\n                    uid = [slot.uid];\n                }\n\n                this._updateSelection(slot, uid);\n                this._adjustSelectedDate();\n            },\n\n            _updateSelection: function(dataItem, events, groupIndex) {\n                var selection = this._selection;\n\n                if (dataItem && selection) {\n                    var view = this.view();\n\n                    if (dataItem.uid) {\n                        dataItem = view._updateEventForSelection(dataItem);\n                    }\n\n                    if (this._shiftKey && selection.start && selection.end) {\n                        var backward = dataItem.end < selection.end;\n\n                        selection.end = dataItem.endDate ? dataItem.endDate() : dataItem.end;\n\n                        if (backward && view._timeSlotInterval) {\n                            kendo.date.setTime(selection.end, -view._timeSlotInterval());\n                        }\n                    } else {\n                        selection.start = dataItem.startDate ? dataItem.startDate() : dataItem.start;\n                        selection.end = dataItem.endDate ? dataItem.endDate() : dataItem.end;\n                    }\n\n                    if (\"isDaySlot\" in dataItem) {\n                        selection.isAllDay = dataItem.isDaySlot;\n                    } else {\n                        selection.isAllDay = dataItem.isAllDay;\n                    }\n\n                    if (groupIndex !== null && groupIndex !== undefined$1) {\n                        selection.groupIndex = groupIndex;\n                    }\n\n                    selection.index = dataItem.index;\n                    if (this._ctrlKey) {\n                        var indexOfEvent = (events && events.length) ? selection.events.indexOf(events[0]) : -1;\n\n                        if (indexOfEvent > -1) {\n                            selection.events.splice(indexOfEvent, 1);\n                        } else {\n                            selection.events = selection.events.concat(events || []);\n                        }\n                    } else {\n                            selection.events = events || [];\n                    }\n                }\n            },\n\n            options: {\n                name: \"Scheduler\",\n                date: TODAY,\n                editable: true,\n                autoBind: true,\n                snap: true,\n                mobile: false,\n                timezone: \"\",\n                allDaySlot: true,\n                min: new Date(1900, 0, 1),\n                max: new Date(2099, 11, 31),\n                toolbar: null,\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                workDays: null,\n                showWorkHours: false,\n                startTime: TODAY,\n                endTime: TODAY,\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                },\n                ongoingEvents: {\n                    cssClass: ONGOING_CLASS,\n                    enabled: false,\n                    updateInterval: 60000,\n                    useLocalTimezone: true\n                },\n                footer: {},\n                messages: {\n                    today: \"Today\",\n                    pdf: \"Export to PDF\",\n                    save: \"Save\",\n                    cancel: \"Cancel\",\n                    destroy: \"Delete\",\n                    resetSeries: \"Reset Series\",\n                    deleteWindowTitle: \"Delete event\",\n                    next: \"Next\",\n                    previous: \"Previous\",\n                    refresh: \"Refresh\",\n                    selectView: \"Select view\",\n                    ariaSlotLabel: \"Selected from {0:t} to {1:t}\",\n                    ariaEventLabel: {\n                        on: \"on\",\n                        at: \"at\",\n                        to: \"to\",\n                        allDay: \"(all day)\",\n                        prefix: \"\"\n                    },\n                    search: \"Search...\",\n                    views: {\n                        day: \"Day\",\n                        week: \"Week\",\n                        workWeek: \"Work Week\",\n                        agenda: \"Agenda\",\n                        month: \"Month\",\n                        timeline: \"Timeline\",\n                        timelineWeek: \"Timeline Week\",\n                        timelineWorkWeek: \"Timeline Work Week\",\n                        timelineMonth: \"Timeline Month\",\n                        year: \"Year\"\n                    },\n                    recurrenceMessages: {\n                        deleteWindowTitle: \"Delete Recurring Item\",\n                        resetSeriesWindowTitle: \"Reset Series\",\n                        deleteWindowOccurrence: \"Delete current occurrence\",\n                        deleteWindowSeries: \"Delete the series\",\n                        editWindowTitle: \"Edit Recurring Item\",\n                        editWindowOccurrence: \"Edit current occurrence\",\n                        editWindowSeries: \"Edit the series\"\n                    },\n                    editable: {\n                        confirmation: DELETECONFIRM\n                    },\n                    editor: {\n                        title: \"Title\",\n                        start: \"Start\",\n                        end: \"End\",\n                        allDayEvent: \"All day event\",\n                        description: \"Description\",\n                        repeat: \"Repeat\",\n                        timezone: \"Timezone\",\n                        startTimezone: \"Start timezone\",\n                        endTimezone: \"End timezone\",\n                        separateTimezones: \"Use separate start and end time zones\",\n                        timezoneEditorTitle: \"Timezones\",\n                        timezoneEditorButton: \"Time zone\",\n                        timezoneTitle: \"Time zones\",\n                        noTimezone: \"No timezone\",\n                        editorTitle: \"Event\"\n                    }\n                },\n                height: null,\n                width: null,\n                resources: [],\n                group: {\n                    resources: [],\n                    orientation: \"horizontal\"\n                },\n                views: [],\n                selectable: false\n            },\n\n            events: [\n                REMOVE,\n                EDIT,\n                CANCEL,\n                SAVE,\n                \"add\",\n                \"dataBinding\",\n                \"dataBound\",\n                \"moveStart\",\n                \"move\",\n                \"moveEnd\",\n                \"resizeStart\",\n                \"resize\",\n                \"resizeEnd\",\n                \"navigate\",\n                CHANGE\n            ],\n\n            destroy: function() {\n                var that = this,\n                    element;\n\n                Widget.fn.destroy.call(that);\n\n                if (that.dataSource) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler);\n                    that.dataSource.unbind(PROGRESS, that._progressHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                }\n\n                if (that._resourceRefreshHandler) {\n                    for (var idx = 0; idx < that.resources.length; idx++) {\n                        var resourceDS = that.resources[idx].dataSource;\n                        resourceDS.unbind(CHANGE, that._resourceRefreshHandler);\n                        resourceDS.unbind(PROGRESS, that._resourceProgressHandler);\n                        resourceDS.unbind(ERROR, that._resourceErrorHandler);\n                    }\n                }\n\n                if (that.calendar) {\n                    that.calendar.destroy();\n                    that.popup.destroy();\n                }\n\n                if (that.view()) {\n                    that.view().destroy();\n                }\n\n                if (that._editor) {\n                    that._editor.destroy();\n                }\n\n                if (this._moveDraggable) {\n                    this._moveDraggable.destroy();\n                }\n\n                if (this._resizeDraggable) {\n                    this._resizeDraggable.destroy();\n                }\n\n                if (that.mediaQueryList) {\n                    that.mediaQueryList.destroy();\n                }\n\n                element = that.element\n                    .add(that.wrapper)\n                    .add(that.toolbar)\n                    .add(that.popup);\n\n                element.off(NS);\n\n                clearTimeout(that._moveTimer);\n\n                that._model = null;\n                that.toolbar = null;\n                that.element = null;\n\n                $(window).off(\"resize\" + NS, that._resizeHandler);\n\n                kendo.destroy(that.wrapper);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.options.autoBind && dataSource.fetch) {\n                    dataSource.fetch();\n                } else if (isArray(dataSource)) {\n                    this.view(this._selectedView);\n                }\n            },\n\n            items: function() {\n                var content = this.wrapper.find(\".k-scheduler-content\");\n                var view = this.view();\n\n                if (view && view.options.name === \"agenda\") {\n                    return content.find(\".k-task\");\n                } else {\n                    return content.find(\".k-event\")\n                                  .add(this.wrapper.find(\".k-scheduler-header-wrap\")\n                                           .find(\".k-scheduler-header-all-day\").siblings());\n                }\n            },\n\n            _movable: function() {\n                var startSlot;\n                var endSlot;\n                var startResources;\n                var startTime;\n                var endTime;\n                var event;\n                var clonedEvent;\n                var that = this;\n                var originSlot;\n                var originStartTime;\n                var originalEvent;\n                var distance = 0;\n                var clonedEvents = [];\n                var cachedEvents = [];\n\n                var isMobile = that._isMobile();\n                var movable = that.options.editable && that.options.editable.move !== false;\n                var resizable = that.options.editable && that.options.editable.resize !== false;\n\n                if (movable || (resizable && isMobile)) {\n                    that._dragging = false;\n                    if (isMobile && kendo.support.mobileOS.android) {\n                        distance = 5;\n                    }\n\n                    that._moveDraggable = new kendo.ui.Draggable(that.element, {\n                        distance: distance,\n                        filter: \".k-event\",\n                        ignore: \".k-resize-handle\",\n                        holdToDrag: isMobile,\n                        autoScroll: true\n                    });\n\n                    if (movable) {\n                        that._moveDraggable.bind(\"dragstart\", function(e) {\n                            var view = that.view();\n                            var eventElement = e.currentTarget;\n                            var isTouch = that._isTouch(e);\n                            that._dragging = true;\n\n                            if (!view.options.editable || view.options.editable.move === false) {\n                                that._dragging = false;\n                                e.preventDefault();\n                                return;\n                            }\n\n                            if (isTouch && !eventElement.hasClass(\"k-event-active\")) {\n                                that._dragging = false;\n                                that.element.find(\".k-event-active\").removeClass(\"k-event-active\");\n                                e.preventDefault();\n                                return;\n                            }\n\n                            event = that.occurrenceByUid(eventElement.attr(kendo.attr(\"uid\")));\n\n                            clonedEvent = event.clone();\n                            originalEvent = event.clone();\n\n                            clonedEvent.update(view._eventOptionsForMove(clonedEvent));\n\n                            clonedEvent.inverseColor = that._isInverseColor(eventElement);\n\n                            clonedEvents = [];\n                            if (that._selection) {\n                                var events = that._selection.events;\n\n                                for (var i = 0; i < events.length; i++) {\n                                    var evtClone = that.occurrenceByUid(events[i]).clone();\n                                    var evtCloneElement = this.element.find('div.k-event[data-uid=\"' + evtClone.uid + '\"]').eq(0);\n\n                                    evtClone.update(view._eventOptionsForMove(evtClone));\n\n                                    if (evtCloneElement.length) {\n                                        evtClone.inverseColor = that._isInverseColor(evtCloneElement);\n                                    }\n\n                                    clonedEvents.push(evtClone);\n                                }\n                            } else {\n                                clonedEvents.push(clonedEvent);\n                            }\n\n                            startSlot = view._slotByPosition(e.x.startLocation, e.y.startLocation);\n                            startResources = view._resourceBySlot(startSlot);\n\n                            originStartTime = startTime = startSlot.startOffset(e.x.startLocation, e.y.startLocation, that.options.snap);\n\n                            endSlot = startSlot;\n\n                            originSlot = startSlot;\n\n                            if (!startSlot || that.trigger(\"moveStart\", { event: event })) {\n                                e.preventDefault();\n                            }\n                        })\n                        .bind(\"drag\", function(e) {\n                            var view = that.view();\n                            var slot = view._slotByPosition(e.x.location, e.y.location);\n                            var distance;\n                            var range;\n                            var i;\n\n                            if (!slot) {\n                                return;\n                            }\n\n                            endTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n\n                            if (slot.isDaySlot !== startSlot.isDaySlot) {\n\n                                if (slot.isDaySlot !== originSlot.isDaySlot) {\n                                    var slotIndex = $(startSlot.element).index();\n\n                                    var targetSlotElement = $(slot.element).parent().children().eq(slotIndex);\n\n                                    startSlot = view._slotByPosition(targetSlotElement.offset().left, targetSlotElement.offset().top);\n\n                                    startTime = startSlot.startOffset(e.x.location, e.y.location, true);\n\n                                    cachedEvents = clonedEvents.map(function(event) { return event.clone(); });\n\n                                    for (i = 0; i < clonedEvents.length; i++) {\n                                        if (clonedEvents[i].isAllDay != slot.isDaySlot) {\n                                            clonedEvents[i].isAllDay = slot.isDaySlot;\n\n                                            clonedEvents[i].end = kendo.date.getDate(clonedEvents[i].start);\n                                            clonedEvents[i].start = kendo.date.getDate(clonedEvents[i].start);\n\n                                            if (!slot.isDaySlot) {\n                                                kendo.date.setTime(clonedEvents[i].start, kendo.date.getMilliseconds(view.startTime()));\n                                                kendo.date.setTime(clonedEvents[i].end, kendo.date.getMilliseconds(view.startTime()) + view._timeSlotInterval());\n                                            }\n                                        }\n                                    }\n                                } else {\n                                    startSlot = $.extend(true, { }, originSlot);\n                                    startTime = originStartTime;\n\n                                    clonedEvents = cachedEvents;\n                                }\n                            }\n\n                            distance = endTime - startTime;\n\n                            for (i = 0; i < clonedEvents.length; i++) {\n                                view._updateMoveHint(clonedEvents[i], slot.groupIndex, distance);\n                            }\n\n                            range = moveEventRange(clonedEvent, distance);\n\n                            if (!that.trigger(\"move\", {\n                                event: event,\n                                slot: { element: slot.element, start: slot.startDate(), end: slot.endDate(), isDaySlot: slot.isDaySlot },\n                                resources: view._resourceBySlot(slot),\n                                start: range.start,\n                                end: range.end\n                            })) {\n                                endSlot = slot;\n                            } else {\n                                for (i = 0; i < clonedEvents.length; i++) {\n                                    view._updateMoveHint(clonedEvents[i], slot.groupIndex, distance);\n                                }\n                            }\n                        })\n                        .bind(\"dragend\", function(e) {\n                            that.view()._removeMoveHint();\n                            var distance = endTime - startTime;\n                            var range = moveEventRange(clonedEvent, distance);\n                            var start = range.start;\n                            var end = range.end;\n                            that._dragging = false;\n\n                            var endResources = that.view()._resourceBySlot(endSlot);\n\n                            var prevented = that.trigger(\"moveEnd\", {\n                                event: event,\n                                slot: { element: endSlot.element, start: endSlot.startDate(), end: endSlot.endDate() },\n                                start: start,\n                                end: end,\n                                resources: endResources\n                            });\n\n                            if (!prevented && (event.start.getTime() !== start.getTime() ||\n                                event.end.getTime() !== end.getTime() ||\n                                originSlot.isDaySlot !== endSlot.isDaySlot ||\n                                kendo.stringify(endResources) !== kendo.stringify(startResources))) {\n\n                                that._isMultiDrag = clonedEvents.length > 1;\n\n                                for (var i = 0; i < clonedEvents.length; i++) {\n                                    var evt = clonedEvents[i];\n\n                                    range = moveEventRange(evt, distance);\n\n                                    var updatedEventOptions = that.view()._eventOptionsForMove(evt);\n                                    var eventOptions = $.extend(\n                                        {\n                                            isAllDay: evt.isAllDay,\n                                            start: range.start,\n                                            end: range.end\n                                        },\n                                        updatedEventOptions,\n                                        endResources\n                                    );\n\n                                    that._updateEvent(null, evt, eventOptions);\n                                }\n\n                                if (that._isMultiDrag) {\n                                    that.dataSource.sync();\n                                    that._isMultiDrag = false;\n                                }\n                            }\n\n                            e.currentTarget.removeClass(\"k-event-active\");\n                            this.cancelHold();\n                            clonedEvents = [];\n                            cachedEvents = [];\n                        })\n                        .bind(\"dragcancel\", function() {\n                            that.view()._removeMoveHint();\n                            this.cancelHold();\n                            clonedEvents = [];\n                            cachedEvents = [];\n                        });\n                    }\n\n                    that._moveDraggable.bind(\"hold\", function(e) {\n                        if (that._isTouch(e)) {\n                            that.element.find(\".k-event-active\").removeClass(\"k-event-active\");\n                            if (that.options.selectable) {\n                                that._createSelection(e.currentTarget);\n                            }\n                            e.currentTarget.addClass(\"k-event-active\");\n                        }\n                    });\n                }\n            },\n\n            _resizable: function() {\n                var startTime;\n                var endTime;\n                var event;\n                var clonedEvent;\n                var slot;\n                var that = this;\n                var distance = 0;\n\n                function direction(handle) {\n                    var directions = {\n                        \"k-resize-e\": \"east\",\n                        \"k-resize-w\": \"west\",\n                        \"k-resize-n\": \"north\",\n                        \"k-resize-s\": \"south\"\n                    };\n\n                    for (var key in directions) {\n                        if (handle.hasClass(key)) {\n                            return directions[key];\n                        }\n                    }\n                }\n\n                if (that._isMobile() && kendo.support.mobileOS.android) {\n                    distance = 5;\n                }\n\n                that._resizeDraggable = new kendo.ui.Draggable(that.element, {\n                    distance: distance,\n                    filter: \".k-resize-handle\",\n                    autoScroll: true,\n                    dragstart: function(e) {\n                        var dragHandle = $(e.currentTarget);\n\n                        var eventElement = dragHandle.closest(\".k-event\");\n\n                        var uid = eventElement.attr(kendo.attr(\"uid\"));\n\n                        var view = that.view();\n\n                        that._dragging = true;\n                        event = that.occurrenceByUid(uid);\n\n                        clonedEvent = event.clone();\n\n                        view._updateEventForResize(clonedEvent);\n\n                        slot = view._slotByPosition(e.x.startLocation, e.y.startLocation);\n\n                        if (that.trigger(\"resizeStart\", { event: event })) {\n                            e.preventDefault();\n                        }\n\n                        startTime = kendo.date.toUtcTime(clonedEvent.start);\n\n                        endTime = kendo.date.toUtcTime(clonedEvent.end);\n                    },\n                    drag: function(e) {\n                        if (!slot) {\n                            return;\n                        }\n\n                        var dragHandle = $(e.currentTarget);\n\n                        var dir = direction(dragHandle);\n\n                        var view = that.view();\n\n                        var currentSlot = view._slotByPosition(e.x.location, e.y.location);\n\n                        if (!currentSlot || slot.groupIndex != currentSlot.groupIndex) {\n                            return;\n                        }\n\n                        slot = currentSlot;\n\n                        var originalStart = startTime;\n\n                        var originalEnd = endTime;\n\n                        if (dir == \"south\") {\n                            if (!slot.isDaySlot && slot.end - kendo.date.toUtcTime(clonedEvent.start) >= view._timeSlotInterval()) {\n                                if (clonedEvent.isAllDay) {\n                                    endTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                                } else {\n                                    endTime = slot.endOffset(e.x.location, e.y.location, that.options.snap);\n                                }\n                            }\n                        } else if (dir == \"north\") {\n                            if (!slot.isDaySlot && kendo.date.toUtcTime(clonedEvent.end) - slot.start >= view._timeSlotInterval()) {\n                                startTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                            }\n                        } else if (dir == \"east\") {\n                            if (slot.isDaySlot && kendo.date.toUtcTime(kendo.date.getDate(slot.endDate())) >= kendo.date.toUtcTime(kendo.date.getDate(clonedEvent.start))) {\n                                if (clonedEvent.isAllDay) {\n                                    endTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                                } else {\n                                    endTime = slot.endOffset(e.x.location, e.y.location, that.options.snap);\n                                }\n                            } else if (!slot.isDaySlot && slot.end - kendo.date.toUtcTime(clonedEvent.start) >= view._timeSlotInterval()) {\n                                endTime = slot.endOffset(e.x.location, e.y.location, that.options.snap);\n                            }\n                        } else if (dir == \"west\") {\n                            if (slot.isDaySlot && kendo.date.toUtcTime(kendo.date.getDate(clonedEvent.end)) >= kendo.date.toUtcTime(kendo.date.getDate(slot.startDate()))) {\n                                startTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                            } else if (!slot.isDaySlot && kendo.date.toUtcTime(clonedEvent.end) - slot.start >= view._timeSlotInterval()) {\n                                startTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                            }\n                        }\n\n                        if (!that.trigger(\"resize\", {\n                            event: event,\n                            slot: { element: slot.element, start: slot.startDate(), end: slot.endDate() },\n                            start: kendo.timezone.toLocalDate(startTime),\n                            end: kendo.timezone.toLocalDate(endTime),\n                            resources: view._resourceBySlot(slot)\n                        })) {\n                            view._updateResizeHint(clonedEvent, slot.groupIndex, startTime, endTime);\n                        } else {\n                            startTime = originalStart;\n                            endTime = originalEnd;\n                        }\n                    },\n                    dragend: function(e) {\n                        var dragHandle = $(e.currentTarget);\n                        var start = new Date(clonedEvent.start.getTime());\n                        var end = new Date(clonedEvent.end.getTime());\n                        var dir = direction(dragHandle);\n\n                        that._dragging = false;\n                        that.view()._removeResizeHint();\n\n                        if (dir == \"south\") {\n                            end = kendo.timezone.toLocalDate(endTime);\n                        } else if (dir == \"north\") {\n                            start = kendo.timezone.toLocalDate(startTime);\n                        } else if (dir == \"east\") {\n                            if (slot.isDaySlot) {\n                                end = kendo.date.getDate(kendo.timezone.toLocalDate(endTime));\n                            } else {\n                                end = kendo.timezone.toLocalDate(endTime);\n                            }\n                        } else if (dir == \"west\") {\n                            if (slot.isDaySlot) {\n                                start = new Date(kendo.timezone.toLocalDate(startTime));\n                                start.setHours(0);\n                                start.setMinutes(0);\n                            } else {\n                                start = kendo.timezone.toLocalDate(startTime);\n                            }\n                        }\n\n                        var prevented = that.trigger(\"resizeEnd\", {\n                            event: event,\n                            slot: { element: slot.element, start: slot.startDate(), end: slot.endDate() },\n                            start: start,\n                            end: end,\n                            resources: that.view()._resourceBySlot(slot)\n                        });\n\n                        if (!prevented && end.getTime() >= start.getTime()) {\n                            if (clonedEvent.start.getTime() != start.getTime() || clonedEvent.end.getTime() != end.getTime()) {\n                                that.view()._updateEventForResize(event);\n                                that._updateEvent(dir, event, { start: start, end: end });\n                            }\n                        }\n\n                        slot = null;\n                        event = null;\n                    },\n                    dragcancel: function() {\n                        that._dragging = false;\n                        that.view()._removeResizeHint();\n\n                        slot = null;\n                        event = null;\n                    }\n                });\n            },\n\n            _updateEvent: function(dir, event, eventInfo) {\n                var that = this;\n\n                var updateEvent = function(event, callback) {\n                    var start;\n\n                    try {\n                        that._preventRefresh = true;\n                        event.update(eventInfo);\n                        that._convertDates(event);\n                        start = event.start;\n\n                        if (dir && event.duration() % MS_PER_DAY === 0 && start.getHours() === 0 && start.getMinutes() === 0 && start.getSeconds() === 0 && start.getMilliseconds() === 0) {\n                            event.set(\"isAllDay\", true);\n                        }\n                    } finally {\n                        that._preventRefresh = false;\n                    }\n\n                    if (!that.trigger(SAVE, { event: event })) {\n                        if (callback) {\n                            callback();\n                        }\n\n                        if (!that._isMultiDrag) {\n                            that.dataSource.sync();\n                        }\n                    }\n                };\n\n                var recurrenceHead = function(event) {\n                    if (event.recurrenceRule) {\n                        return that.dataSource.getByUid(event.uid);\n                    } else {\n                        return that.dataSource.get(event.recurrenceId);\n                    }\n                };\n\n                var updateSeries = function() {\n                    var head = recurrenceHead(event);\n\n                    if (dir == \"south\" || dir == \"north\") {\n                        if (eventInfo.start) {\n                            var start = kendo.date.getDate(head.start);\n                            kendo.date.setTime(start, getMilliseconds(eventInfo.start));\n                            eventInfo.start = start;\n                        }\n                        if (eventInfo.end) {\n                            var end = kendo.date.getDate(head.end);\n                            kendo.date.setTime(end, getMilliseconds(eventInfo.end));\n                            eventInfo.end = end;\n                        }\n                    }\n\n                    that.dataSource._removeExceptions(head);\n\n                    updateEvent(head);\n                };\n\n                var updateOccurrence = function() {\n                    var head = recurrenceHead(event);\n                    var eventUid;\n\n                    var callback = function() {\n                        that._convertDates(head);\n\n                        if (that._selection) {\n                            that._selection.events.push(eventUid);\n                        }\n                    };\n\n                    var exception = head.toOccurrence({ start: event.start, end: event.end });\n\n                    eventUid = exception.uid;\n\n                    updateEvent(that.dataSource.add(exception), callback);\n                };\n\n                if (event.recurrenceRule || event.isOccurrence()) {\n                    var recurrenceMessages = that.options.messages.recurrenceMessages;\n\n                    that._showRecurringDialog(event, updateOccurrence, updateSeries,{\n                        title: recurrenceMessages.editWindowTitle,\n                        text: recurrenceMessages.editRecurring ? recurrenceMessages.editRecurring : EDITRECURRING,\n                        occurrenceText: recurrenceMessages.editWindowOccurrence,\n                        seriesText: recurrenceMessages.editWindowSeries\n                    });\n                } else {\n                    updateEvent(that.dataSource.getByUid(event.uid));\n                }\n            },\n\n            _modelForContainer: function(container) {\n                container = $(container).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n\n                return this.dataSource.getByUid(container.attr(kendo.attr(\"uid\")));\n            },\n\n            showDialog: function(options) {\n                this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n                this._editor.showDialog(options);\n            },\n\n            focus: function() {\n                this.wrapper.trigger(\"focus\");\n            },\n\n            _confirmation: function(callback, model, isResetSeries) {\n                var editable = this.options.editable;\n\n                if (editable === true || editable.confirmation !== false) {\n                    var messages = this.options.messages;\n                    var title = messages.deleteWindowTitle;\n                    var text = typeof editable.confirmation === STRING ? editable.confirmation : messages.editable.confirmation;\n\n                    if (this._isEditorOpened() && model.isRecurring()) {\n                        var recurrenceMessages = this.options.messages.recurrenceMessages;\n                        title = recurrenceMessages.deleteWindowTitle;\n\n                        if (model.isException() || model.isNew()) {\n                            text = recurrenceMessages.deleteRecurringConfirmation ? recurrenceMessages.deleteRecurringConfirmation : DELETERECURRINGCONFIRM;\n                        } else {\n                            text = recurrenceMessages.deleteSeriesConfirmation ? recurrenceMessages.deleteSeriesConfirmation : DELETESERIESCONFIRM;\n                        }\n\n                        if (isResetSeries) {\n                            title = recurrenceMessages.resetSeriesWindowTitle;\n                            text = recurrenceMessages.resetSeriesConfirmation ? recurrenceMessages.resetSeriesConfirmation : RESETSERIESCONFIRM;\n                        }\n                    }\n\n                    var buttons = [\n                        { name: \"destroy\", text: isResetSeries ? messages.resetSeries : messages.destroy, click: function() { callback(); } }\n                    ];\n\n                    if (!(this._isMobile() && kendo.Pane)) {\n                        buttons.push({ name: \"canceledit\", text: messages.cancel, click: function() { callback(true); } });\n                    }\n\n                    this._unbindResize();\n\n                    this.showDialog({\n                        model: model,\n                        text: text,\n                        title: title,\n                        buttons: buttons\n                    });\n\n                    this._bindResize();\n                } else {\n                    callback();\n                }\n            },\n\n            addEvent: function(eventInfo) {\n                var editable = this._editor.editable;\n                var dataSource = this.dataSource;\n                var event;\n\n                eventInfo = eventInfo || {};\n\n                var prevented = this.trigger(\"add\", { event: eventInfo });\n\n                if (!prevented && ((editable && editable.end()) || !editable)) {\n                    this.cancelEvent();\n\n                    if (eventInfo && eventInfo.toJSON) {\n                        eventInfo = eventInfo.toJSON();\n                    }\n\n                    event = dataSource.add(eventInfo);\n\n                    if (event) {\n                        this.cancelEvent();\n                        this._editEvent(event);\n                    }\n                }\n           },\n\n           saveEvent: function() {\n                var that = this;\n                var editor = that._editor;\n                var dataSource = that.dataSource;\n\n                if (!editor) {\n                    return;\n                }\n\n                var editable = editor.editable;\n                var container = editor.container;\n                var model = that._modelForContainer(container);\n                var events, i, event;\n\n                if (container && editable && editable.end() &&\n                    !that.trigger(SAVE, { container: container, event: model } )) {\n\n                    if (!model.isOccurrence() && !!model.recurrenceException && !model.recurrenceRule) {\n                        events = dataSource.data();\n\n                        for (i = events.length - 1; i >= 0; i -= 1) {\n                            event = events[i];\n                            if (event && event.recurrenceId === model.id) {\n                                dataSource.remove(event);\n                            }\n                        }\n\n                        model.set(\"recurrenceException\", \"\");\n                    }\n\n                    if (!model.dirty && !model.isOccurrence()) {\n                        that._convertDates(model, \"remove\");\n                    }\n\n                    dataSource.sync();\n                }\n            },\n\n            cancelEvent: function() {\n                var editor = this._editor;\n                var container = editor.container;\n                var model;\n\n                if (container) {\n                    model = this._modelForContainer(container);\n\n                    if (model && model.isOccurrence()) {\n                        this._convertDates(model, \"remove\");\n                        this._convertDates(this.dataSource.get(model.recurrenceId), \"remove\");\n                    }\n\n                    this.dataSource.cancelChanges(model);\n\n                    //TODO: handle the cancel in UI\n\n                    editor.close();\n                }\n            },\n\n            editEvent: function(uid) {\n                var model = typeof uid == \"string\" ? this.occurrenceByUid(uid) : uid;\n\n                if (!model) {\n                    return;\n                }\n\n                this.cancelEvent();\n\n                if (model.isRecurring()) {\n                    this._editRecurringDialog(model);\n                } else {\n                    this._editEvent(model);\n                }\n            },\n\n            _editEvent: function(model) {\n                this._preventRefresh = true;\n                this._unbindResize();\n\n                this._createPopupEditor(model);\n                this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n\n                this._bindResize();\n            },\n\n            _editRecurringDialog: function(model) {\n                var that = this;\n\n                var editOccurrence = function() {\n                    if (model.isException()) {\n                        that._editEvent(model);\n                    } else {\n                        that.addEvent(model);\n                    }\n                };\n\n                var editSeries = function() {\n                    if (model.recurrenceId) {\n                        model = that.dataSource.get(model.recurrenceId);\n                    }\n\n                    that._editEvent(model);\n                };\n\n                var recurrenceMessages = that.options.messages.recurrenceMessages;\n                that._showRecurringDialog(model, editOccurrence, editSeries, {\n                    title: recurrenceMessages.editWindowTitle,\n                    text: recurrenceMessages.editRecurring ? recurrenceMessages.editRecurring : EDITRECURRING,\n                    occurrenceText: recurrenceMessages.editWindowOccurrence,\n                    seriesText: recurrenceMessages.editWindowSeries\n                });\n             },\n\n             _showRecurringDialog: function(model, editOccurrence, editSeries, messages) {\n                 var editable = this.options.editable;\n                 var editRecurringMode = isPlainObject(editable) ? editable.editRecurringMode : \"dialog\";\n\n                 if (editRecurringMode === \"occurrence\" || this._isMultiDrag) {\n                     editOccurrence();\n                 } else if (editRecurringMode === \"series\") {\n                     editSeries();\n                 } else {\n                     this._unbindResize();\n\n                     this.showDialog({\n                         model: model,\n                         title: messages.title,\n                         text: messages.text,\n                         buttons: [\n                             { text: messages.occurrenceText, click: editOccurrence },\n                             { text: messages.seriesText, click: editSeries }\n                         ]\n                     });\n\n                     this._bindResize();\n                 }\n            },\n\n            _createButton: function(command) {\n                var template = command.template || COMMANDBUTTONTMPL,\n                    commandName = typeof command === STRING ? command : command.name || command.text,\n                    options = { className: \"k-scheduler-\" + (commandName || \"\").replace(/\\s/g, \"\"), text: commandName, attr: \"\" };\n\n                if (!commandName && !(isPlainObject(command) && command.template)) {\n                    throw new Error(\"Custom commands should have name specified\");\n                }\n\n                if (isPlainObject(command)) {\n                    if (command.className) {\n                        command.className += \" \" + options.className;\n                    }\n\n                    if (commandName === \"edit\" && isPlainObject(command.text)) {\n                        command = extend(true, {}, command);\n                        command.text = command.text.edit;\n                    }\n\n                    options = extend(true, options, defaultCommands[commandName], command);\n                } else {\n                    options = extend(true, options, defaultCommands[commandName]);\n                }\n\n                if (!options.className) {\n                    options.className = \"k-button-solid-base\";\n                } else if (options.className.indexOf(\"k-button-solid-primary\") === -1) {\n                    options.className += \" k-button-solid-base\";\n                }\n\n                return kendo.template(template)(options);\n            },\n\n            _convertDates: function(model, method) {\n                var timezone = this.dataSource.reader.timezone;\n                var startTimezone = model.startTimezone;\n                var endTimezone = model.endTimezone;\n                var start = model.start;\n                var end = model.start;\n\n                method = method || \"apply\";\n                startTimezone = startTimezone || endTimezone;\n                endTimezone = endTimezone || startTimezone;\n\n                if (startTimezone) {\n                    if (timezone) {\n                        if (method === \"apply\") {\n                            start = kendo.timezone.convert(model.start, timezone, startTimezone);\n                            end = kendo.timezone.convert(model.end, timezone, endTimezone);\n                        } else {\n                            start = kendo.timezone.convert(model.start, startTimezone, timezone);\n                            end = kendo.timezone.convert(model.end, endTimezone, timezone);\n                        }\n                    } else {\n                        start = kendo.timezone[method](model.start, startTimezone);\n                        end = kendo.timezone[method](model.end, endTimezone);\n                    }\n\n                    model._set(\"start\", start);\n                    model._set(\"end\", end);\n                }\n            },\n\n            _createEditor: function() {\n                var that = this;\n\n                var editor;\n\n                if (this._isMobile() && kendo.Pane) {\n                    editor = that._editor = new MobileEditor(this.wrapper, extend({}, this.options, {\n                        target: this,\n                        timezone: that.dataSource.reader.timezone,\n                        resources: that.resources,\n                        createButton: this._createButton.bind(this)\n                    }));\n                } else {\n                    editor = that._editor = new PopupEditor(this.wrapper, extend({}, this.options, {\n                        target: this,\n                        createButton: this._createButton.bind(this),\n                        timezone: that.dataSource.reader.timezone,\n                        resources: that.resources\n                    }));\n                }\n\n                editor.bind(\"cancel\", function(e) {\n                    if (that.trigger(\"cancel\", { container: e.container, event: e.model })) {\n                        e.preventDefault();\n                        return;\n                    }\n                    that._preventRefresh = false;\n                    that.cancelEvent();\n\n                    if (that._attemptRefresh) {\n                        that.refresh();\n                    }\n\n                    that.focus();\n                });\n\n                editor.bind(\"edit\", function(e) {\n                    if (that.trigger(EDIT, { container: e.container, event: e.model })) {\n                        e.preventDefault();\n                    }\n                });\n\n                editor.bind(\"save\", function() {\n                    that._preventRefresh = false;\n                    that.saveEvent();\n                });\n\n                editor.bind(\"remove\", function(e) {\n                    that._preventRefresh = false;\n                    that.removeEvent(e.model);\n                });\n\n                editor.bind(\"resetSeries\", function(e) {\n                    that._confirmation(function(cancel) {\n                        that._preventRefresh = false;\n                        if (!cancel) {\n                            that.dataSource._removeExceptions(e.model);\n                            that.saveEvent();\n                        }\n                    }, e.model, true);\n                });\n            },\n\n            _createPopupEditor: function(model) {\n                var editor = this._editor;\n\n                if (!model.isNew() || model.isOccurrence()) {\n                    if (model.isOccurrence()) {\n                        this._convertDates(model.recurrenceId ? this.dataSource.get(model.recurrenceId) : model);\n                    }\n                    this._convertDates(model);\n                }\n\n                this.editable = editor.editEvent(model);\n            },\n\n            removeEvent: function(uid) {\n                var that = this,\n                    model = typeof uid == \"string\" ? that.occurrenceByUid(uid) : uid;\n\n                if (!model) {\n                    return;\n                }\n\n                if (model.isRecurring()) {\n                    that._deleteRecurringDialog(model);\n                } else {\n                    that._confirmation(function(cancel) {\n                        if (!cancel) {\n                            that._removeEvent(model);\n                        }\n                    }, model);\n                }\n            },\n\n            occurrenceByUid: function(uid) {\n                var occurrence = this.dataSource.getByUid(uid);\n                if (!occurrence) {\n                    occurrence = getOccurrenceByUid(this._data, uid);\n                }\n\n                return occurrence;\n            },\n\n            occurrencesInRange: function(start, end) {\n                return new kendo.data.Query(this._data).filter({\n                    logic: \"or\",\n                    filters: [\n                        {\n                            logic: \"and\",\n                            filters: [\n                                { field: \"start\", operator: \"gte\", value: start },\n                                { field: \"end\", operator: \"gte\", value: start },\n                                { field: \"start\", operator: \"lt\", value: end }\n                            ]\n                        },\n                        {\n                            logic: \"and\",\n                            filters: [\n                                { field: \"start\", operator: \"lte\", value: start },\n                                { field: \"end\", operator: \"gt\", value: start }\n                            ]\n                        }\n                    ]\n                }).toArray();\n            },\n\n            _removeEvent: function(model) {\n                if (!this.trigger(REMOVE, { event: model })) {\n                    if (this.dataSource.remove(model)) {\n                        this.dataSource.sync();\n                    }\n                }\n            },\n\n            _deleteRecurringDialog: function(model) {\n                var that = this;\n                var currentModel = model;\n                var editable = that.options.editable;\n                var deleteOccurrence;\n                var deleteSeries;\n                var createException;\n                var deleteOccurrenceConfirmation;\n                var deleteSeriesConfirmation;\n                var createExceptionConfirmation;\n                var editRecurringMode = isPlainObject(editable) ? editable.editRecurringMode : \"dialog\";\n\n                deleteOccurrence = function() {\n                    var occurrence = currentModel.recurrenceId ? currentModel : currentModel.toOccurrence();\n                    var head = that.dataSource.get(occurrence.recurrenceId);\n\n                    that._convertDates(head);\n                    that._removeEvent(occurrence);\n                };\n\n                deleteSeries = function() {\n                    if (currentModel.recurrenceId) {\n                        currentModel = that.dataSource.get(currentModel.recurrenceId);\n                    }\n\n                    that._removeEvent(currentModel);\n                };\n\n                createException = function() {\n                    that.dataSource.remove(currentModel);\n                    that.dataSource.sync();\n                };\n\n                if (editRecurringMode != \"dialog\" || that._isEditorOpened()) {\n                    deleteOccurrenceConfirmation = function() {\n                        that._confirmation(function(cancel) {\n                            if (!cancel) {\n                                deleteOccurrence();\n                            }\n                        }, currentModel);\n                    };\n\n                    deleteSeriesConfirmation = function() {\n                        that._confirmation(function(cancel) {\n                            if (!cancel) {\n                                deleteSeries();\n                            }\n                        }, currentModel);\n                    };\n\n                    createExceptionConfirmation = function() {\n                        that._confirmation(function(cancel) {\n                            if (!cancel) {\n                                createException();\n                            }\n                        }, currentModel);\n                    };\n                }\n\n                var seriesCallback = deleteSeriesConfirmation || deleteSeries;\n                var occurrenceCallback = deleteOccurrenceConfirmation || deleteOccurrence;\n                var exeptionCallback = createExceptionConfirmation || createException;\n\n                if (that._isEditorOpened()) {\n                    if (model.isException()) {\n                        occurrenceCallback();\n                    } else if (model.isNew()) {\n                        exeptionCallback();\n                    } else {\n                        seriesCallback();\n                    }\n                } else {\n                    var recurrenceMessages = that.options.messages.recurrenceMessages;\n                    that._showRecurringDialog(model, occurrenceCallback, seriesCallback, {\n                        title: recurrenceMessages.deleteWindowTitle,\n                        text: recurrenceMessages.deleteRecurring ? recurrenceMessages.deleteRecurring : DELETERECURRING,\n                        occurrenceText: recurrenceMessages.deleteWindowOccurrence,\n                        seriesText: recurrenceMessages.deleteWindowSeries\n                    });\n                }\n            },\n\n            _isEditorOpened: function() {\n                return !!this._editor.container;\n            },\n\n            _unbindView: function(view) {\n                var that = this;\n\n                view.destroy();\n            },\n\n            _bindView: function(view) {\n                var that = this;\n\n                if (that.options.editable) {\n                    if (that._viewRemoveHandler) {\n                        view.unbind(REMOVE, that._viewRemoveHandler);\n                    }\n\n                    that._viewRemoveHandler = function(e) {\n                        that.removeEvent(e.uid);\n                    };\n\n                    view.bind(REMOVE, that._viewRemoveHandler);\n\n                    if (that._viewAddHandler) {\n                        view.unbind(ADD, that._viewAddHandler);\n                    }\n\n                    that._viewAddHandler = function(e) {\n                        that.addEvent(e.eventInfo);\n                    };\n\n                    view.bind(ADD, this._viewAddHandler);\n\n                    if (that._viewEditHandler) {\n                        view.unbind(EDIT, that._viewEditHandler);\n                    }\n\n                    that._viewEditHandler = function(e) {\n                        that.editEvent(e.uid);\n                    };\n\n                    view.bind(EDIT, this._viewEditHandler);\n                }\n\n                if (that._viewNavigateHandler) {\n                    view.unbind(\"navigate\", that._viewNavigateHandler);\n                }\n\n                that._viewNavigateHandler = function(e) {\n                    if (e.action) {\n                        if (!that.trigger(\"navigate\", { view: e.view, isWorkDay: e.isWorkDay, action: e.action, date: e.date })) {\n                            that.date(e.date);\n                        }\n                    } else if (e.view) {\n                        var switchWorkDay = \"isWorkDay\" in e;\n                        var action = switchWorkDay ? \"changeWorkDay\" : \"changeView\";\n\n                        if (!that.trigger(\"navigate\", { view: e.view, isWorkDay: e.isWorkDay, action: action, date: e.date })) {\n                            if (switchWorkDay) {\n                                that._workDayMode = e.isWorkDay;\n                            }\n\n                            that._selectView(e.view);\n                            that.date(e.date);\n                        }\n                    }\n                };\n\n                view.bind(\"navigate\", that._viewNavigateHandler);\n\n                if (that._viewActivateHandler) {\n                    view.unbind(\"activate\", that._viewActivateHandler);\n                }\n\n                that._viewActivateHandler = function() {\n                    var view = this;\n                    if (that._selection) {\n                        view.constrainSelection(that._selection);\n\n                        if ($(document.activeElement).closest(\".k-scheduler-toolbar\").length === 0) {\n                            if (document.activeElement !== that.wrapper[0]) {\n                                that.element.trigger(\"focus\");\n                            } else {\n                                that._select();\n                            }\n                        }\n\n                        that._adjustSelectedDate();\n                    }\n                };\n\n                view.bind(\"activate\", that._viewActivateHandler);\n            },\n\n            _selectView: function(name) {\n                var that = this;\n\n                if (name && that.views[name]) {\n                    if (that._selectedView) {\n                        that._unbindView(that._selectedView);\n                    }\n\n                    that._selectedView = that._renderView(name);\n                    that._selectedViewName = name;\n\n                    if (this._initialSize) {\n                        this._initialSize = false;\n                        this._onMediaChange(window.matchMedia(MIN_SCREEN));\n                    }\n\n                    if (that._viewsCount > 1 && !that._isMobile()) {\n                        var viewElementToSelect = that.toolbar.find(\"[\" + kendo.attr(\"name\") + \"=\" + name + \"]\");\n                        var viewsDropdown = that.toolbar.find(\".k-views-dropdown\");\n                        var viewsGroupEl = viewElementToSelect.closest(\".k-button-group\");\n                        var viewsButtonGroup = viewsGroupEl.data(\"kendoButtonGroup\");\n\n                        viewsDropdown.val(name);\n\n                        if (viewsButtonGroup) {\n                            viewsButtonGroup.select(viewElementToSelect);\n                        }\n                    } else if (that._viewsCount > 1) {\n                        var viewSelect = that.toolbar.find(\".k-scheduler-mobile-views\");\n\n                        viewSelect.find(\"[value=\" + name.replace(/\\./g, \"\\\\.\") + \"]\")\n                            .prop(\"selected\", \"selected\");\n                    }\n                }\n            },\n\n            view: function(name) {\n                var that = this;\n\n                if (name) {\n                    if (name === \"year\") {\n                        that.wrapper.removeAttr(\"tabindex\");\n                    } else {\n                        that.wrapper.attr(\"tabindex\", 0);\n                    }\n\n                    that._selectView(name);\n                    that.rebind();\n\n                    return;\n                }\n\n                return that._selectedView;\n            },\n\n            viewName: function() {\n                return this.view().name;\n            },\n\n            _renderView: function(name) {\n                var view = this._initializeView(name);\n\n                this._bindView(view);\n\n                if (kendo.support.mouseAndTouchPresent || kendo.support.pointers) {\n                    view.content.css(\"-ms-touch-action\", \"pinch-zoom\");\n                    view.content.css(\"touch-action\", \"pinch-zoom\");\n                }\n\n                this._model.set(\"formattedDate\", view.dateForTitle());\n                this._model.set(\"formattedShortDate\", view.shortDateForTitle());\n                this._model.set(\"formattedMobileDate\", view.mobileDateForTitle ? view.mobileDateForTitle() : view.shortDateForTitle());\n                this._model.set(\"formattedYear\", view.mobileYearForTitle ? view.mobileYearForTitle() : kendo.format(\"{0:yyyy}\", view.startDate()));\n\n                return view;\n            },\n\n            resize: function(force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                var view = this.view();\n\n                if (!view || !view.groups) {\n                    return;\n                }\n\n                if (force || !currentSize || size.width !== currentSize.width || size.height !== currentSize.height) {\n                    this.refresh({ action: \"resize\" });\n                    this._size = size;\n                }\n            },\n\n            _adjustSelectedDate: function() {\n                var date = this._model.selectedDate,\n                    selection = this._selection,\n                    start = selection.start;\n\n                if (start && !kendo.date.isInDateRange(date, getDate(start), getDate(selection.end))) {\n                    date.setFullYear(start.getFullYear(), start.getMonth(), start.getDate());\n                }\n            },\n\n            _initializeView: function(name) {\n                var view = this.views[name];\n\n                if (view) {\n                    var isSettings = isPlainObject(view),\n                        overrideOptions = {},\n                        type = view.type;\n\n                    if (typeof type === STRING) {\n                        type = kendo.getter(view.type)(window);\n                    }\n\n                    if (isSettings && view.workDays && view.workDays.length) {\n                        overrideOptions.workDays = view.workDays;\n                    }\n\n                    if (type) {\n                        view = new type(this.wrapper, trimOptions(extend(true, {}, this.options, isSettings ? view : {}, {\n                            resources: this.resources,\n                            date: this.date(),\n                            startTime: kendo.parseDate(view.startTime) || kendo.parseDate(this.options.startTime),\n                            endTime: kendo.parseDate(view.endTime) || kendo.parseDate(this.options.endTime),\n                            showWorkHours: this._workDayMode\n                        }),overrideOptions));\n\n                    } else {\n                        throw new Error(\"There is no such view\");\n                    }\n                }\n\n                return view;\n            },\n\n            _views: function() {\n                var views = this.options.views;\n                var view;\n                var defaultView;\n                var selected;\n                var isSettings;\n                var name;\n                var type;\n                var idx;\n                var length;\n\n                this.views = {};\n                this._viewsCount = 0;\n\n                for (idx = 0, length = views.length; idx < length; idx++) {\n                    var hasType = false;\n\n                    view = views[idx];\n\n                    isSettings = isPlainObject(view);\n\n                    if (isSettings) {\n                        type = name = view.type ? view.type : view;\n                        if (typeof type !== STRING) {\n                            name = view.name || view.title;\n                            hasType = true;\n                        }\n                    } else {\n                        type = name = view;\n                        view = {};\n                    }\n\n                    defaultView = defaultViews[name];\n\n                    if (defaultView && !hasType) {\n                        view.type = defaultView.type;\n                        defaultView.title = this.options.messages.views[name];\n                        if (defaultView.type === \"day\") {\n                            defaultView.messages = { allDay: this.options.messages.allDay };\n                        } else if (defaultView.type === \"agenda\") {\n                            defaultView.messages = {\n                                event: this.options.messages.event,\n                                date: this.options.messages.date,\n                                time: this.options.messages.time\n                            };\n                        }\n                    }\n\n                    view = extend({ title: name }, defaultView, isSettings ? view : {});\n\n                    if (name) {\n                        this.views[name] = view;\n                        this._viewsCount++;\n\n                        if (!selected || view.selected) {\n                            selected = name;\n                        }\n                    }\n                }\n\n                if (selected) {\n                    this._selectedViewName = selected; // toolbar is not rendered yet\n                }\n            },\n\n            rebind: function() {\n                var that = this,\n                    resources = that.resources,\n                    resourceFetchArray = [];\n\n                if (that._preventRebind) {\n                    that._preventRebind = false;\n                    return;\n                }\n\n                if (that.options.autoBind === false && resources && resources.length > 0) {\n                    resources.forEach(function(resource) {\n                        if (resource.dataSource.data().length === 0) {\n                            that._preventRebind = true;\n                            resourceFetchArray.push(resource.dataSource.fetch());\n                        }\n                    });\n\n                    $.when.apply(null, resourceFetchArray).then(function() {\n                        that.dataSource.fetch();\n                        that._preventRebind = false;\n                    });\n                } else {\n                    that.dataSource.fetch();\n                }\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (options.timezone && !(dataSource instanceof SchedulerDataSource)) {\n                    dataSource = extend(true, dataSource, { schema: { timezone: options.timezone } });\n                } else if (dataSource instanceof SchedulerDataSource) {\n                    options.timezone = dataSource.options.schema ? dataSource.options.schema.timezone : \"\";\n                }\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource\n                        .unbind(CHANGE, that._refreshHandler)\n                        .unbind(PROGRESS, that._progressHandler)\n                        .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.SchedulerDataSource.create(dataSource)\n                    .bind(CHANGE, that._refreshHandler)\n                    .bind(PROGRESS, that._progressHandler)\n                    .bind(ERROR, that._errorHandler);\n\n                that.options.dataSource = that.dataSource;\n            },\n\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _progress: function(toggle) {\n                var element = this.element.find(\".k-scheduler-content\");\n                kendo.ui.progress(element, toggle);\n            },\n\n            _resources: function() {\n                var that = this;\n                var resources = that.options.resources;\n                var resourcePromises = [];\n\n                for (var idx = 0; idx < resources.length; idx++) {\n                    var resource = resources[idx];\n                    var field = resource.field;\n                    var name = resource.name || field;\n                    var dataSource = resource.dataSource;\n\n                    if (!field || !dataSource) {\n                        throw new Error('The \"field\" and \"dataSource\" options of the scheduler resource are mandatory.');\n                    }\n\n                    that.resources.push({\n                        field: field,\n                        name: name,\n                        title: resource.title || field,\n                        dataTextField: resource.dataTextField || \"text\",\n                        dataValueField: resource.dataValueField || \"value\",\n                        dataColorField: resource.dataColorField || \"color\",\n                        dataParentValueField: resource.dataParentValueField || \"parentValue\",\n                        valuePrimitive: resource.valuePrimitive != null ? resource.valuePrimitive : true,\n                        multiple: resource.multiple || false,\n                        dataSource: that._resourceDataSource(dataSource, name, resourcePromises)\n                    });\n                }\n\n                if (!that.options.autoBind) {\n                    that._selectView(that._selectedViewName);\n                } else {\n                    $.when.apply(null, resourcePromises)\n                          .then(function() {\n                                that.view(that._selectedViewName);\n                            });\n                }\n            },\n\n            _resourceDataSource: function(resourceDS, groupName, promises) {\n                var that = this;\n                var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS;\n                var dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                if (that.options.autoBind) {\n                    promises.push(dataSourceInstance.fetch(function() {\n                        // 'this' is the DataSource instance not the Scheduler\n                        that._bindResourceEvents(this, groupName);\n                    }));\n                } else {\n                    that._bindResourceEvents(dataSourceInstance, groupName);\n                }\n\n                return dataSourceInstance;\n            },\n\n            _bindResourceEvents: function(resourceDS, groupName) {\n                var that = this;\n                var isGrouped = that.options.group && that.options.group.resources.length;\n                var isResourceGrouped = isGrouped && that.options.group.resources.indexOf(groupName) > -1;\n\n                if (!that._resourceRefreshHandler && isResourceGrouped) {\n                    that._resourceRefreshHandler = that._refreshResource.bind(that);\n                    that._resourceErrorHandler = that._error.bind(that);\n                }\n\n                if (isResourceGrouped) {\n                    resourceDS.bind(CHANGE, that._resourceRefreshHandler)\n                        .bind(ERROR, that._resourceErrorHandler);\n                }\n            },\n\n            _refreshResource: function() {\n                var that = this;\n                var preventRefresh = (that._editor && that._editor.editable) || that._preventRefresh;\n\n                if (!preventRefresh) {\n                    that.view(that._selectedViewName);\n                }\n            },\n\n            _initModel: function() {\n                var that = this;\n                that._model = kendo.observable({\n                   selectedDate: new Date(this.options.date),\n                   formattedDate: \"\",\n                   formattedShortDate: \"\"\n               });\n\n               that._model.bind(CHANGE, function(e) {\n                    if (e.field === \"selectedDate\") {\n                        that.view(that._selectedViewName);\n                    }\n               });\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var options = that.options;\n                var height = options.height;\n                var width = options.width;\n\n                that.wrapper = that.element.addClass(\"k-scheduler\");\n\n                if (that._isMobile()) {\n                   that.wrapper.addClass(\"k-scheduler-mobile\");\n                }\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                if (width) {\n                    that.wrapper.width(width);\n                }\n            },\n\n            date: function(value) {\n                if (value != null && getDate(value) >= getDate(this.options.min) && getDate(value) <= getDate(this.options.max)) {\n                    this._model.set(\"selectedDate\", value);\n                }\n                return getDate(this._model.get(\"selectedDate\"));\n            },\n\n            _processHandlers: function(defaults) {\n                var that = this;\n\n                that._pdfClickHandler = (e) => {\n                    e.preventDefault();\n                    that.saveAsPDF();\n                };\n\n                that._createClickHandler = (e) => {\n                    e.preventDefault();\n                    that.addEvent();\n                };\n\n                that._calendarClickHandler = that._currentClickHandler = (e) => {\n                    e.preventDefault();\n                    that._showCalendar(e.target);\n                };\n\n                that._todayClickHandler = (e) => {\n                    e.preventDefault();\n\n                    var timezone = that.options.timezone,\n                        currentDate = new Date(),\n                        date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"today\", date: date })) {\n                        that.date(date);\n                    }\n                };\n\n                that._previousClickHandler = (e) => {\n                    e.preventDefault();\n\n                    var date = that.view().previousDate();\n\n                    if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"previous\", date: date })) {\n                        that.date(date);\n                    }\n                };\n\n                that._nextClickHandler = (e) => {\n                    e.preventDefault();\n\n                    var date = that.view().nextDate();\n\n                    if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"next\", date: date })) {\n                        that.date(date);\n                    }\n                };\n\n                that._refreshClickHandler = (e) => {\n                    e.preventDefault();\n\n                    var name = that.view().name;\n\n                    if (!that.trigger(\"navigate\", { view: name, action: \"changeView\", date: that.date() })) {\n                        that.view(name);\n                    }\n                };\n\n                that._viewClickHandler = (e) => {\n                    var name = e.target.attr(kendo.attr(\"name\"));\n\n                    if (!that.trigger(\"navigate\", { view: name, action: \"changeView\", date: that.date() })) {\n                        that.view(name);\n                    }\n                };\n\n                Object.values(defaults).map(t => {\n                    if (t.name) {\n                        t.click = that[\"_\" + t.name + \"ClickHandler\"];\n                    }\n                });\n            },\n\n            _processDefaults: function() {\n                var views = this.views,\n                    defaults = $.extend(true, {}, DEFAULT_TOOLS),\n                    viewsButtons = [],\n                    isRtl = kendo.support.isRtl(this.wrapper),\n                    viewsDdl, viewsMobile;\n\n                Object.keys(views).map(name => {\n                    var current = $.extend(true, {}, defaults.view);\n\n                    current.text = views[name].title;\n                    const refAttribute = `ref-view-${name.toLowerCase()}`;\n                    current.attributes = {\n                        [refAttribute]: '',\n                        \"data-name\": name\n                    };\n\n                    current.groupClass = \"k-scheduler-views\";\n                    defaults[name] = current;\n\n                    viewsButtons.push(name);\n                });\n\n                if (viewsButtons.length > 1) {\n                    viewsDdl = VIEWS_DROPDOWN_TEMPLATE({ views: this.views, label: this.options.messages.selectView, type: \"k-views-dropdown\" });\n                    viewsMobile = VIEWS_DROPDOWN_TEMPLATE({ views: this.views, label: this.options.messages.selectView, type: \"k-scheduler-mobile-views\" });\n                }\n\n                defaults.viewsDdl = {\n                    template: viewsDdl\n                };\n\n                defaults.viewsMobile = {\n                    template: viewsMobile\n                };\n\n                this._viewsButtons = viewsButtons;\n\n                if (isRtl) {\n                    defaults.previous.icon = \"caret-alt-right\";\n                    defaults.next.icon = \"caret-alt-left\";\n                }\n\n                return defaults;\n            },\n\n            _processToolbarArray: function() {\n                var options = this.options,\n                    toolbarOptions = options.toolbar,\n                    commands = [],\n                    isMobile = this._isMobile(),\n                    tools, pdf, search;\n\n                if (toolbarOptions) {\n                    commands = Array.isArray(toolbarOptions) ? toolbarOptions : [toolbarOptions];\n                }\n\n                pdf = $.grep(commands, function(item) {\n                    return item == \"pdf\" || item.name == \"pdf\";\n                }).length > 0;\n\n                search = $.grep(commands, function(item) {\n                    return item == \"search\" || item.name == \"search\";\n                }).length > 0;\n\n                if (isMobile) {\n                    tools = [...defaultMobileToolsFirst];\n\n                    if (options.editable) {\n                        tools[0].push(\"create\");\n                    }\n                } else {\n                    tools = [...defaultDesktopTools];\n                }\n\n                if (search) {\n                    tools.push(\"search\");\n                }\n\n                if (pdf) {\n                    if (isMobile) {\n                        tools[0].unshift(\"pdfMobile\");\n                    } else {\n                        tools.unshift(\"pdf\");\n                    }\n                }\n\n                if (this._viewsCount === 1) {\n                    tools.push(\"refresh\");\n                } else if (this._viewsCount > 1) {\n                    if (isMobile) {\n                        tools.push(\"viewsMobile\");\n                    } else {\n                        tools.push(\"viewsDdl\");\n                        tools.push(this._viewsButtons);\n                    }\n                }\n\n                return tools;\n            },\n\n            _processViewTools: function(items) {\n                var result = items,\n                    viewsIndex = -1;\n\n                items.some((item, index) => {\n                    if (item === \"views\" || item.name === \"views\") {\n                        viewsIndex = index;\n                        return true;\n                    }\n\n                    return false;\n                });\n\n                if (viewsIndex > -1) {\n                    result.splice(viewsIndex, 1, \"viewsDdl\", this._viewsButtons);\n                }\n\n                return result;\n            },\n\n            _processToolbarItems: function() {\n                var desktopItems = this.options.toolbar.items.desktop || this.options.toolbar.items,\n                    mobileItems = this.options.toolbar.items.mobile || this.options.toolbar.items,\n                    isMobile = this._isMobile();\n\n                if (!isMobile) {\n                    if (desktopItems.main) {\n                        if (desktopItems.navigation) {\n                            desktopItems = desktopItems.main.concat(desktopItems.navigation);\n                        } else {\n                            desktopItems = desktopItems.main;\n                        }\n                    }\n\n                    return { tools: this._processViewTools(desktopItems) };\n                } else {\n                    if (Array.isArray(mobileItems)) {\n                        return {\n                            tools: this._processViewTools(mobileItems),\n                            navigation: []\n                        };\n                    } else {\n                        return {\n                            tools: this._processViewTools(mobileItems.main),\n                            navigation: this._processViewTools(mobileItems.navigation)\n                        };\n                    }\n                }\n            },\n\n            _processTools: function() {\n                var options = this.options,\n                    toolbarOptions = options.toolbar;\n\n                if (toolbarOptions && toolbarOptions.items) {\n                    return this._processToolbarItems();\n                } else {\n                    return { tools: this._processToolbarArray() };\n                }\n            },\n\n            _toolbar: function() {\n                var that = this;\n                var options = that.options;\n                var defaults = that._processDefaults();\n                var { tools, navigation } = that._processTools();\n                var toolbar = $(\"<div class='k-scheduler-toolbar'>\");\n                var secondToolbar;\n\n                that._processHandlers(defaults);\n                that.wrapper.append(toolbar);\n                that.toolbar = toolbar;\n\n                toolbar.kendoToolBar({\n                    resizable: false,\n                    tools: tools,\n                    defaultTools: defaults,\n                    parentMessages: options.messages\n                });\n\n                if (that._isMobile() && (!navigation || navigation.length !== 0)) {\n                    secondToolbar = $(\"<div class='k-scheduler-toolbar'>\");\n                    that.wrapper.append(secondToolbar);\n                    that.toolbar = that.toolbar.add(secondToolbar);\n\n                    secondToolbar.kendoToolBar({\n                        resizable: false,\n                        tools: navigation || [...defaultMobileToolsSecond],\n                        defaultTools: defaults,\n                        parentMessages: options.messages\n                    });\n                }\n\n                that.toolbar.find(\".k-nav-current .k-button-text\").attr('data-' + kendo.ns + 'bind', \"text: formattedDate\");\n                that.toolbar.find(\".k-m-date-format\").attr('data-' + kendo.ns + 'bind', \"text: formattedMobileDate\");\n                that.toolbar.find(\".k-y-date-format\").attr('data-' + kendo.ns + 'bind', \"text: formattedYear\");\n\n                kendo.bind(that.toolbar, that._model);\n\n                that.toolbar.find(\".k-scheduler-search-input\").attr({\n                    placeholder: options.messages.search,\n                    title: options.messages.search\n                });\n\n                toolbar.on(\"input\" + NS, \".k-scheduler-search-input\", kendo.throttle(function(e) {\n                    that.dataSource.filter({\n                        logic: \"or\",\n                        filters: [\n                            { field: \"title\", operator: \"contains\", value: e.target.value },\n                            { field: \"description\", operator: \"contains\", value: e.target.value }\n                        ]\n                    });\n                }, 250));\n\n                toolbar.on(CHANGE + NS, \".k-views-dropdown, .k-scheduler-mobile-views\", function() {\n                    var name = this.value;\n\n                    if (!that.trigger(\"navigate\", { view: name, action: \"changeView\", date: that.date() })) {\n                        that.view(name);\n                    }\n                });\n\n                that._initialSize = true;\n            },\n\n            _showCalendar: function(targetElm) {\n                var that = this,\n                    target = targetElm || that.toolbar.find(\".k-nav-current\"),\n                    html = $('<div class=\"k-calendar-container\"><div class=\"k-scheduler-calendar\"></div></div>');\n\n                if (!that.popup) {\n                    that.popup = new Popup(html, {\n                        anchor: target,\n                        activate: function() {\n                            if (that.popup && that.calendar) {\n                                that.popup._toggleResize(false);\n                                that.calendar.element.find(\"table\").trigger(\"focus\");\n                                that.popup._toggleResize(true);\n                            }\n                        },\n                        open: function() {\n                            if (!that.calendar) {\n                                that.calendar = new Calendar(this.element.find(\".k-scheduler-calendar\"),\n                                {\n                                    change: function() {\n                                        var date = this.value();\n                                        if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"changeDate\", date: date })) {\n                                            that.date(date);\n                                            that.popup.close();\n                                        }\n\n                                        if (!that._isMobile()) {\n                                            that._selectedView.element.trigger(\"focus\");\n                                            that.toolbar.find(\".k-nav-current\").trigger(\"focus\").addClass(FOCUSEDSTATE);\n                                        }\n                                    },\n                                    min: that.options.min,\n                                    max: that.options.max\n                                });\n                            }\n                            that.calendar.element.on(\"keydown\" + NS, function(e) {\n                                if (e.keyCode === keys.ESC || e.keyCode === keys.TAB) {\n                                    that.popup.close();\n                                    that._selectedView.element.trigger(\"focus\");\n                                    that.toolbar.find(\".k-nav-current\").trigger(\"focus\").addClass(FOCUSEDSTATE);\n                                }\n                            });\n\n                            that.calendar.setOptions({\n                                start: that._selectedViewName === \"year\" ? \"decade\" : \"month\",\n                                depth: that._selectedViewName === \"year\" ? \"decade\" : \"month\"\n                            });\n\n                            that.calendar.value(that.date());\n                        },\n                        copyAnchorStyles: false\n                    });\n                }\n\n                that.popup.open();\n            },\n\n            refresh: function(e) {\n                var that = this;\n                var view = this.view();\n                var preventRefresh = (e && e.action === \"itemchange\" && (this._editor.editable || this._preventRefresh)) ||\n                                     (this.dataSource.options.type === \"signalr\" && this._preventRefresh);\n\n                this._progress(false);\n\n                e = e || {};\n\n                if (!view) {\n                    return;\n                }\n\n                if (preventRefresh) { // skip rebinding if editing is in progress\n                    this._attemptRefresh = true && this.dataSource.options.type === \"signalr\";\n                    return;\n                }\n\n                if (this.trigger(\"dataBinding\", { action: e.action || \"rebind\", index: e.index, items: e.items })) {\n                    return;\n                }\n\n                if (!(e && e.action === \"resize\") && this._editor) {\n                    this._editor.close();\n                }\n\n                this._data = this.dataSource.expand(view.startDate(), view.visibleEndDate());\n\n                view.refreshLayout();\n\n                view.render(this._data);\n\n                this.trigger(\"dataBound\");\n                this._attemptRefresh = false;\n            },\n\n            slotByPosition: function(x, y) {\n                var view = this.view();\n\n                if (!view._slotByPosition) {\n                    return null;\n                }\n\n                var slot = view._slotByPosition(x, y);\n\n                if (!slot) {\n                    return null;\n                }\n\n                return {\n                    startDate: slot.startDate(),\n                    endDate: slot.endDate(),\n                    groupIndex: slot.groupIndex,\n                    element: slot.element,\n                    isDaySlot: slot.isDaySlot\n                };\n            },\n\n            slotByElement: function(element) {\n                var el = $(element),\n                    offset = el.offset(),\n                    width = el.width(),\n                    height = el.height(),\n                    centerX = offset.left + width / 2,\n                    centerY = offset.top + height / 2,\n                    offset = $(element).offset();\n\n                return this.slotByPosition(centerX, centerY);\n            },\n\n            resourcesBySlot: function(slot) {\n                return this.view()._resourceBySlot(slot);\n            }\n        });\n\n        var defaultViews = {\n            day: {\n                type: \"kendo.ui.DayView\"\n            },\n            week: {\n                type: \"kendo.ui.WeekView\"\n            },\n            workWeek: {\n                type: \"kendo.ui.WorkWeekView\"\n            },\n            agenda: {\n                type: \"kendo.ui.AgendaView\"\n            },\n            month: {\n                type: \"kendo.ui.MonthView\"\n            },\n            timeline: {\n                type: \"kendo.ui.TimelineView\"\n            },\n            timelineWeek: {\n                type: \"kendo.ui.TimelineWeekView\"\n            },\n            timelineWorkWeek: {\n                type: \"kendo.ui.TimelineWorkWeekView\"\n            },\n            timelineMonth: {\n                type: \"kendo.ui.TimelineMonthView\"\n            },\n            year: {\n                type: \"kendo.ui.YearView\"\n            }\n        };\n\n        ui.plugin(Scheduler);\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Scheduler.prototype);\n\n            var SCHEDULER_EXPORT = \"k-scheduler-pdf-export\";\n            Scheduler.fn._drawPDF = function(progress) {\n                var wrapper = this.wrapper;\n                var styles = wrapper[0].style.cssText;\n\n                wrapper.css({\n                    width: wrapper.width(),\n                    height: wrapper.height()\n                });\n\n                wrapper.addClass(SCHEDULER_EXPORT);\n\n                var scheduler = this;\n                var promise = new $.Deferred();\n                var table = wrapper.find(\".k-scheduler-content\").find(\"table\").css(\"table-layout\", \"auto\");\n\n                setTimeout(function() {\n                    table.css(\"table-layout\", \"fixed\");\n                    scheduler.resize(true);\n\n                    scheduler._drawPDFShadow({}, {\n                        avoidLinks: scheduler.options.pdf.avoidLinks\n                    })\n                    .done(function(group) {\n                        var args = {\n                            page: group,\n                            pageNumber: 1,\n                            progress: 1,\n                            totalPages: 1\n                        };\n\n                        progress.notify(args);\n                        promise.resolve(args.page);\n                    })\n                    .fail(function(err) {\n                        promise.reject(err);\n                    })\n                    .always(function() {\n                        wrapper[0].style.cssText = styles;\n                        wrapper.removeClass(SCHEDULER_EXPORT);\n                        scheduler.resize(true);\n\n                        //Required because slot.offsetLeft is incorrect after first resize\n                        scheduler.resize(true);\n                    });\n                });\n\n                return promise;\n            };\n        }\n\n        var TimezoneEditor = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    zones = kendo.timezone.windows_zones;\n\n                if (!zones || !kendo.timezone.zones_titles) {\n                    throw new Error('kendo.timezones.min.js is not included.');\n                }\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                that._zonesQuery = new kendo.data.Query(zones);\n                that._zoneTitleId = kendo.guid();\n                that._zoneTitlePicker();\n                that._zonePicker();\n\n                that._zoneTitle.bind(\"cascade\", function() {\n                    if (!this.value()) {\n                        that._zone.wrapper.hide();\n                    }\n                });\n\n                that._zone.bind(\"cascade\", function() {\n                    that._value = this.value();\n                    that.trigger(CHANGE);\n                });\n\n                that.value(that.options.value);\n            },\n            options: {\n                name: \"TimezoneEditor\",\n                value: \"\",\n                optionLabel: \"No timezone\"\n            },\n            events: [ CHANGE ],\n\n            _zoneTitlePicker: function() {\n                var that = this,\n                    zoneTitle = $('<input id=\"' + that._zoneTitleId + '\" aria-label=\"' + that.options.title + '\"/>').appendTo(that.wrapper);\n\n                that._zoneTitle = new kendo.ui.DropDownList(zoneTitle, {\n                    dataSource: kendo.timezone.zones_titles,\n                    dataValueField: \"other_zone\",\n                    dataTextField: \"name\",\n                    optionLabel: that.options.optionLabel\n                });\n            },\n\n            _zonePicker: function() {\n                var that = this,\n                    zone = $('<input aria-label=\"' + that.options.title + '\"/>').appendTo(this.wrapper);\n\n                that._zone = new kendo.ui.DropDownList(zone, {\n                    dataValueField: \"zone\",\n                    dataTextField: \"territory\",\n                    dataSource: that._zonesQuery.data,\n                    cascadeFrom: that._zoneTitleId,\n                    dataBound: function() {\n                        that._value = this.value();\n                        this.wrapper.toggle(this.dataSource.view().length > 1);\n                    }\n                });\n\n                that._zone.wrapper.hide();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                kendo.destroy(this.wrapper);\n            },\n\n            value: function(value) {\n                var that = this,\n                    zone;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                zone = that._zonesQuery.filter({ field: \"zone\", operator: \"eq\", value: value }).data[0];\n\n                if (zone) {\n                    that._zoneTitle.value(zone.other_zone);\n                    that._zone.value(zone.zone);\n                } else {\n                    that._zoneTitle.select(0);\n                }\n\n            }\n        });\n\n        ui.plugin(TimezoneEditor);\n\n        var ZONETITLEOPTIONTEMPLATE = kendo.template(({ name, other_zone }) => `<option value=\"${other_zone}\">${name}</option>`);\n        var ZONEOPTIONTEMPLATE = kendo.template(({ zone, territory }) => `<option value=\"${zone}\">${territory}</option>`);\n\n        var MobileTimezoneEditor = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    zones = kendo.timezone.windows_zones;\n\n                if (!zones || !kendo.timezone.zones_titles) {\n                    throw new Error('kendo.timezones.min.js is not included.');\n                }\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                that._zonesQuery = new kendo.data.Query(zones);\n                that._zoneTitlePicker();\n                that._zonePicker();\n\n                that.value(that.options.value);\n            },\n\n            options: {\n                name: \"MobileTimezoneEditor\",\n                optionLabel: \"No timezone\",\n                value: \"\"\n            },\n\n            events: [ CHANGE ],\n\n            _bindZones: function(value) {\n                var data = value ? this._filter(value) : [];\n\n                this._zone.html(this._options(data, ZONEOPTIONTEMPLATE));\n            },\n\n            _filter: function(value) {\n                return this._zonesQuery.filter({ field: \"other_zone\", operator: \"eq\", value: value }).data;\n            },\n\n            _options: function(data, template, optionLabel) {\n                var idx = 0;\n                var html = \"\";\n                var length = data.length;\n\n                if (optionLabel) {\n                    html += template({ other_zone: \"\", name: optionLabel });\n                }\n\n                for (; idx < length; idx++) {\n                    html += template(data[idx]);\n                }\n\n                return html;\n            },\n\n            _zoneTitlePicker: function() {\n                var that = this;\n                var options = that._options(kendo.timezone.zones_titles, ZONETITLEOPTIONTEMPLATE, that.options.optionLabel);\n\n                that._zoneTitle = $('<select>' + options + '</select>')\n                                    .appendTo(that.wrapper)\n                                    .on(\"change\", function() {\n                                        var value = this.value;\n                                        var zone = that._zonePickerLabel;\n                                        var zoneSelect = zone.find(\"select\");\n\n                                        that._bindZones(value);\n\n                                        if (value && zoneSelect.children().length > 1) {\n                                            zone.show();\n                                        } else {\n                                            zone.hide();\n                                        }\n\n                                        that._value = that._zone[0].value;\n\n                                        that.trigger(CHANGE);\n                                    });\n            },\n\n            _zonePicker: function() {\n                var that = this;\n\n                that._zonePickerLabel = $(\"<li class='k-item k-listgroup-item k-zonepicker'>\" +\n                                            \"<label class='k-label k-listgroup-form-row'>\" +\n                                                \"<span class='k-item-title k-listgroup-form-field-label'></span>\" +\n                                                \"<div class='k-listgroup-form-field-wrapper'></div>\" +\n                                            \"</label>\" +\n                                        \"</li>\").hide();\n\n                that._zone = $('<select></select>')\n                                .appendTo(that._zonePickerLabel.find(\"div\"))\n                                .on(\"change\", function() {\n                                    that._value = this.value;\n\n                                    that.trigger(CHANGE);\n                                });\n\n                this.wrapper.closest(\".k-item\").after(that._zonePickerLabel);\n\n                that._bindZones(that._zoneTitle.val());\n                that._value = that._zone[0].value;\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                kendo.destroy(this.wrapper);\n            },\n\n            value: function(value) {\n                var that = this;\n                var zonePicker = that._zone;\n                var other_zone = \"\";\n                var zone_value = \"\";\n                var zone;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                zone = that._zonesQuery.filter({ field: \"zone\", operator: \"eq\", value: value }).data[0];\n\n                if (zone) {\n                    zone_value = zone.zone;\n                    other_zone = zone.other_zone;\n                }\n\n                that._zoneTitle.val(other_zone);\n                that._bindZones(other_zone);\n\n                zonePicker.val(zone_value);\n                zone_value = zonePicker[0].value;\n\n                if (zone_value && zonePicker.children.length > 1) {\n                    that._zonePickerLabel.show();\n                } else {\n                    that._zonePickerLabel.hide();\n                }\n\n                that._value = zone_value;\n            }\n        });\n\n        ui.plugin(MobileTimezoneEditor);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}