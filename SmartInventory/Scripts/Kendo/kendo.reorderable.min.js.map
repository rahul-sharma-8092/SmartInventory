{"version":3,"sources":["raw-js/kendo.reorderable.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Reorderable","this","$","window","outerWidth","_outerWidth","outerHeight","_outerHeight","getOffset","Widget","ui","CHANGE","extend","init","element","options","that","fn","call","_initDraggable","dropFilter","draggable","filter","reorderDropCue","find","kendoDropTarget","group","dragenter","e","externalDraggableInstance","_externalDraggable","_draggable","_handleExternalDraggable","offset","dropTarget","denied","_isPartOfSortable","_dropTargetAllowed","_isLastDraggable","toggleHintClass","hint","cueOffset","top","left","isHorizontal","orientation","smartPosition","inSameContainer","source","target","sourceIndex","_index","targetIndex","_dropTarget","css","height","zIndex","positionDropCue","appendTo","document","body","dragleave","drop","dropIndex","isAfter","trigger","oldIndex","newIndex","position","remove","bind","dragcancel","_dragcancel","dragend","_dragend","dragstart","_dragstart","drag","_drag","name","deniedIcon","allowIcon","events","length","icon","eq","Draggable","guid","autoScroll","elementUnderCursorFunc","_elementUnderCursor","shouldModifyCue","is","hide","show","draggableFilter","trimStart","substring","_dragcancelHandler","_dragendHandler","_dragstartHandler","_dragHandler","currentTarget","closest","_draggableInstance","_elements","unbind","sender","dropStartOffset","width","pageX","dropStartTop","pageY","dragOverContainers","clickMoveClick","hasClass","elementUnderCursor","index","externalDraggable","item","elements","get","found","pop","destroy","each","data","plugin","jQuery","kendo$1","__meta__","id","category","depends","advanced","default","Object","defineProperty","value"],"mappings":"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","file":"kendo.reorderable.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.draganddrop.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.draganddrop', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Reorderable = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"reorderable\",\n        name: \"Reorderable\",\n        category: \"framework\",\n        depends: [ \"core\", \"draganddrop\", \"icons\" ],\n        advanced: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            getOffset = kendo.getOffset,\n            Widget = kendo.ui.Widget,\n            CHANGE = \"change\";\n\n        var Reorderable = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n                that._initDraggable();\n\n                if (!that.options.dropFilter) {\n                    that.options.dropFilter = that.draggable.options.filter;\n                }\n\n                that.reorderDropCue = that.options.reorderDropCue;\n\n                element.find(options.dropFilter).kendoDropTarget({\n                    group: that.draggable.options.group,\n                    dragenter: function(e) {\n                        var externalDraggableInstance = that._externalDraggable(e);\n\n                        if (!that._draggable && !externalDraggableInstance) {\n                            return;\n                        }\n\n                        if (externalDraggableInstance) {\n                            that._handleExternalDraggable(externalDraggableInstance);\n                        }\n\n                        var dropTarget = this.element, offset;\n\n                        var denied = that._isPartOfSortable(that._draggable) ? (!that._dropTargetAllowed(dropTarget) || that._isLastDraggable()) : false;\n\n                        that.toggleHintClass(e.draggable.hint, denied);\n\n                        if (!denied) {\n                            offset = getOffset(dropTarget);\n                            var cueOffset = { top: offset.top, left: offset.left };\n                            var isHorizontal = options.orientation === \"horizontal\";\n\n                            if (!options.smartPosition || (options.inSameContainer && !options.inSameContainer({\n                                source: dropTarget,\n                                target: that._draggable,\n                                sourceIndex: that._index(dropTarget),\n                                targetIndex: that._index(that._draggable)\n                            }))) {\n                                that._dropTarget = dropTarget;\n                            } else {\n                                if (that._index(dropTarget) > that._index(that._draggable) && options.smartPosition) {\n                                    cueOffset[isHorizontal ? \"left\" : \"top\"] += isHorizontal ? outerWidth(dropTarget) : outerHeight(dropTarget);\n                                }\n                            }\n\n                            that.reorderDropCue.css({\n                                height: outerHeight(dropTarget),\n                                top: cueOffset.top,\n                                left: cueOffset.left,\n                                zIndex: 19000\n                            });\n\n                            if (options.positionDropCue) {\n                                options.positionDropCue(that.reorderDropCue, dropTarget);\n                            }\n                            that.reorderDropCue.appendTo(document.body);\n                        }\n                    },\n                    dragleave: function(e) {\n                        that._dropTarget = null;\n                    },\n                    drop: function() {\n                        that._dropTarget = null;\n\n                        if (!that._draggable) {\n                            return;\n                        }\n                        var dropTarget = this.element;\n                        var draggable = that._draggable;\n                        var dropIndex = that._index(dropTarget);\n\n                        var isAfter = that.options.orientation === \"horizontal\" ?\n                            getOffset(that.reorderDropCue).left > getOffset(dropTarget).left :\n                            getOffset(that.reorderDropCue).top > getOffset(dropTarget).top;\n\n                        dropIndex = isAfter ? dropIndex + 1 : dropIndex;\n\n                        if (that._dropTargetAllowed(dropTarget) && !that._isLastDraggable() && that._index(draggable) !== dropIndex) {\n                            that.trigger(CHANGE, {\n                                element: that._draggable,\n                                target: dropTarget,\n                                oldIndex: that._index(draggable),\n                                newIndex: that._index(dropTarget),\n                                position: isAfter ? \"after\" : \"before\"\n                            });\n                        }\n\n                        if (that.reorderDropCue) {\n                            that.reorderDropCue.remove();\n                        }\n                    }\n                });\n\n                that.draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                    dragcancel: that._dragcancel.bind(that),\n                    dragend: that._dragend.bind(that),\n                    dragstart: that._dragstart.bind(that),\n                    drag: that._drag.bind(that)\n                });\n            },\n\n            options: {\n                name: \"Reorderable\",\n                filter: \"*\",\n                orientation: \"horizontal\",\n                deniedIcon: \"cancel\",\n                allowIcon: \"plus\",\n                reorderDropCue: $('<div class=\"k-reorder-cue\"></div></div>'),\n                smartPosition: true\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            toggleHintClass: function(hint, denied) {\n                var that = this,\n                    options = that.options;\n\n                hint = $(hint);\n\n                if (hint.find(\".k-drag-status\").length > 0) {\n                    kendo.ui.icon(hint.find(\".k-drag-status\").eq(0), { icon: denied ? options.deniedIcon : options.allowIcon });\n                }\n            },\n\n            _initDraggable: function() {\n                let that = this,\n                    options = that.options;\n\n                that.draggable = options.draggable || new kendo.ui.Draggable(that.element, {\n                    group: kendo.guid() + \"-reorderable\",\n                    autoScroll: true,\n                    filter: options.filter,\n                    hint: options.hint\n                });\n\n                let elementUnderCursorFunc = that.draggable._elementUnderCursor;\n                that.draggable._elementUnderCursor = function(e) {\n                    let shouldModifyCue = that.reorderDropCue && that.reorderDropCue.is(\":visible\");\n\n                    if (shouldModifyCue) {\n                        that.reorderDropCue.hide();\n                    }\n                    let element = elementUnderCursorFunc.call(that.draggable, e);\n                    if (shouldModifyCue) {\n                        that.reorderDropCue.show();\n                    }\n                    return element;\n                };\n            },\n\n            _handleExternalDraggable: function(draggable) {\n                var that = this;\n                var draggableFilter = that.options.dropFilter.trimStart();\n\n                // make direct child selectors compatible with .closest()\n                if (draggableFilter && draggableFilter[0] == \">\") {\n                    draggableFilter = draggableFilter.substring(1);\n                }\n\n                that._dragcancelHandler = that._dragcancel.bind(that);\n                that._dragendHandler = that._dragend.bind(that);\n                that._dragstartHandler = that._dragstart.bind(that);\n                that._dragHandler = that._drag.bind(that);\n\n                that._draggable = draggable.currentTarget.closest(draggableFilter);\n                that._draggableInstance = draggable;\n                that._elements = that.element.find(that.options.dropFilter);\n\n                draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                    dragcancel: that._dragcancelHandler,\n                    dragend: that._dragendHandler,\n                    dragstart: that._dragstartHandler,\n                    drag: that._dragHandler\n                });\n            },\n\n            _dragcancel: function() {\n                var that = this;\n\n                if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                    that._dragstartHandler || that._dragHandler)) {\n\n                        that._draggableInstance.unbind({\n                        dragcancel: that._dragcancelHandler,\n                        dragend: that._dragendHandler,\n                        dragstart: that._dragstartHandler,\n                        drag: that._dragHandler\n                    });\n                }\n\n                if (that.reorderDropCue) {\n                    that.reorderDropCue.remove();\n                }\n\n                that._draggable = null;\n                that._elements = null;\n\n            },\n            _dragend: function() {\n                var that = this;\n\n                if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                    that._dragstartHandler || that._dragHandler)) {\n\n                        that._draggableInstance.unbind({\n                        dragcancel: that._dragcancelHandler,\n                        dragend: that._dragendHandler,\n                        dragstart: that._dragstartHandler,\n                        drag: that._dragHandler\n                    });\n                }\n\n                if (that.reorderDropCue) {\n                    that.reorderDropCue.remove();\n                }\n\n                that._draggable = null;\n                that._elements = null;\n            },\n            _dragstart: function(e) {\n                var that = this;\n                var target = $(e.currentTarget);\n                var draggableFilter = that.options.dropFilter.trimStart();\n\n                // make direct child selectors compatible with .closest()\n                if (draggableFilter && draggableFilter[0] == \">\") {\n                    draggableFilter = draggableFilter.substring(1);\n                }\n\n                that._draggable = target.is(draggableFilter) ? target : target.closest(draggableFilter);\n                that._elements = that.element.find(that.options.dropFilter);\n            },\n            _drag: function(e) {\n                var that = this,\n                    dropIndex, sourceIndex, denied,\n                    offset = {},\n                    target,\n                    draggableFilter = that.options.dropFilter.trimStart();\n\n                // make direct child selectors compatible with .closest()\n                if (draggableFilter && draggableFilter[0] == \">\") {\n                    draggableFilter = draggableFilter.substring(1);\n                }\n\n                target = $(e.currentTarget).closest(draggableFilter);\n\n                if (!that._dropTarget || (that.options.smartPosition && e.sender.hint.find(\".k-drag-status\").is(\".k-i-cancel,.k-svg-i-cancel\"))) {\n                    return;\n                }\n\n                dropIndex = that._index(that._dropTarget);\n                sourceIndex = that._index(target);\n                sourceIndex = dropIndex > sourceIndex ? sourceIndex + 1 : sourceIndex;\n\n                if (that.options.orientation === \"horizontal\") {\n                    var dropStartOffset = getOffset(that._dropTarget).left;\n                    var width = outerWidth(that._dropTarget);\n\n                    if (e.pageX > dropStartOffset + width / 2) {\n                        offset.left = dropStartOffset + width;\n                        dropIndex += 1;\n                    } else {\n                        offset.left = dropStartOffset;\n                    }\n                } else {\n                    var dropStartTop = getOffset(that._dropTarget).top;\n                    var height = outerHeight(that._dropTarget);\n\n                    if (e.pageY > dropStartTop + height / 2) {\n                        offset.top = dropStartTop + height;\n                        dropIndex += 1;\n                    } else {\n                        offset.top = dropStartTop;\n                    }\n                }\n\n                that.reorderDropCue.css(offset);\n\n                if (that.options.positionDropCue) {\n                    that.options.positionDropCue(that.reorderDropCue, that._dropTarget);\n                }\n\n                if (that._isPartOfSortable(target)) {\n\n                    denied = sourceIndex === dropIndex ||\n                        (that.options.dragOverContainers && !that.options.dragOverContainers(sourceIndex, dropIndex)) ||\n                        e.clickMoveClick && e.currentTarget.hasClass(\"k-drag-cell\") && $(e.elementUnderCursor).closest(\".k-drag-cell\").length === 0;\n\n                    that.toggleHintClass(e.sender.hint, denied);\n                }\n            },\n\n            _isPartOfSortable: function(draggable) {\n                var that = this;\n\n                return that._elements.index(draggable) >= 0;\n            },\n\n            _externalDraggable: function(e) {\n                var that = this,\n                    options = that.options;\n\n                if (!that._draggable && options.externalDraggable) {\n                    return options.externalDraggable(e);\n                }\n\n                return null;\n            },\n\n            _isLastDraggable: function() {\n                var inSameContainer = this.options.inSameContainer,\n                    draggable = this._draggable[0],\n                    elements = this._elements.get(),\n                    found = false,\n                    item;\n\n                if (!inSameContainer) {\n                    return false;\n                }\n\n                while (!found && elements.length > 0) {\n                    item = elements.pop();\n                    found = draggable !== item && inSameContainer({\n                        source: draggable,\n                        target: item,\n                        sourceIndex: this._index(draggable),\n                        targetIndex: this._index(item)\n                    });\n                }\n\n                return !found;\n            },\n\n            _dropTargetAllowed: function(dropTarget) {\n                var inSameContainer = this.options.inSameContainer,\n                    dragOverContainers = this.options.dragOverContainers,\n                    draggable = this._draggable;\n\n                if (draggable[0] === dropTarget[0]) {\n                    return false;\n                }\n\n                if (!inSameContainer || !dragOverContainers) {\n                    return true;\n                }\n\n                if (inSameContainer({ source: draggable,\n                    target: dropTarget,\n                    sourceIndex: this._index(draggable),\n                    targetIndex: this._index(dropTarget)\n                })) {\n                    return true;\n                }\n\n                return dragOverContainers(this._index(draggable), this._index(dropTarget));\n            },\n\n            _index: function(element) {\n                return this._elements.index(element);\n            },\n\n            destroy: function() {\n               var that = this;\n\n\n               Widget.fn.destroy.call(that);\n\n               that.element.find(that.options.dropFilter).each(function() {\n                   var item = $(this);\n                   if (item.data(\"kendoDropTarget\")) {\n                       item.data(\"kendoDropTarget\").destroy();\n                    }\n                });\n\n                if (that.draggable) {\n                    that.draggable.destroy();\n\n                    that.draggable.element = that.draggable = null;\n                }\n\n                that.reorderDropCue.remove();\n                that.elements = that.reorderDropCue = that._elements = that._draggable = null;\n           }\n        });\n\n        kendo.ui.plugin(Reorderable);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}