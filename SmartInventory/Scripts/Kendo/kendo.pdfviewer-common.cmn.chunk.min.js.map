{"version":3,"sources":["raw-js/kendo.pdfviewer-common.cmn.chunk.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","PdfviewerCommonCmnChunk","DraggableCmnChunk","FileSaverCmnChunk","CommonCmnChunk","PdfjsLoader","DateinputsCommonCmnChunk","this","kendo_draggable_cmn_chunk_js","kendo_fileSaver_cmn_chunk_js","kendo_common_cmn_chunk_js","kendo_pdfjs_loader_js","kendo_dateinputsCommon_cmn_chunk_js","extend","args","Object","assign","isObject","value","Array","isArray","deepExtend","target","sources","length","source","shift","key","Component","HTMLElement","window","DotNet","DotNetObject","buffer","ArrayBuffer","getPrototypeOf","prototype","noop","constructor","element","options","events","destroy","extendOptions","setOptions","trigger","eventName","eventData","defaultPrevented","preventDefault","sender","throttle","func","wait","timeout","context","result","previous","later","leading","Date","getTime","undefined","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","FRAMES_PER_SECOND$1","SCROLL$1","Scroller","super","filter","panScrollThrottleDelay","scrollDirectionModifier","scrollThrottleDelay","onElementScroll","e","shouldTrackScrollEvents","state","trackNextElementScroll","scrollTo","scrollLeft","scrollTop","originalEvent","onDragStart","dragStarted","shouldTrackPanEvents","selector","closest","matchesElementSelector","setState","location","pageX","pageY","locationDelta","x","y","onDrag","calculateEventLocationDelta","directionModifier","onDragEnd","resetState","bindEvents","unbindEvents","initDraggable","destroyDraggable","throttledOnDrag","draggable","D","mouseOnly","press","drag","release","bindTo","cancel","bindDraggableEvents","bindElementScroll","throttledOnElementScroll","addEventListener","unbindElementScroll","unbindDraggableEvents","removeEventListener","newState","trackPanEvents","trackScrollEvents","enablePanEventsTracking","disablePanEventsTracking","enableScrollEventsTracking","disableScrollEventsTracking","trackScrollEvent","unwrapElement","parentElement","replaceWith","from","childNodes","toClassSelector","className","CHAR_INDEX_DATA_ATTR","MATCH_INDEX_DATA_ATTR","SearchService","highlightClass","highlightMarkClass","charClass","textContainers","clearSearch","text","textNodes","charIndex","activeMatchIndex","matches","escapeRegExp","replace","search","matchCase","escapedText","searchRegex","RegExp","match","shouldTransformText","transformTextForSearch","removeIndicators","exec","push","startOffset","index","endOffset","highlightAllMatches","addActiveMatchMark","restoreOriginalText","forEachTextContainer","textContainer","querySelectorAll","forEach","node","innerHTML","textContent","extractTextNodes","transformTextNodesForSearch","nodeType","Node","TEXT_NODE","i","transformTextNodeForSearch","span","document","createElement","wrapper","parentNode","insertBefore","appendChild","splittedHtml","splitTextByChars","splittedTextHtml","callback","matchIndex","addMatchHighlight","matchStartOffset","matchEndOffset","highlight","classList","add","setAttribute","removeMatchHighlights","remove","removeAttribute","removeActiveMatchMark","mark","firstChild","wrapInnerElement","cloneNode","elements","unwrapElements","flatMap","markNextMatch","markNextMatchIndex","markPreviousMatch","markPreviousMatchIndex","moveActiveMatchIndex","delta","Math","max","getActiveMatchElement","markedMatch","querySelector","Annotation","container","viewport","annotation","pdfDoc","zoom","rootElement","LinkAnnotation","onLinkClick","destination","getAttribute","indexOf","navigateToDestination","linkElement","renderAnnotation","dest","split","getDestination","then","r","getPageIndex","goToPage","pageNumber","scrollToPage","rect","boundingRect","rawHeight","rawDims","pageHeight","left","min","top","width","height","url","encodeURI","annotationElement","position","display","pointerEvents","append","MAX_CANVAS_AREA_CHROME_SAFARI","scale","test","navigator","userAgent","maxTouchPoints","devicePixelRatio","parsePdfFromBase64String","base64String","atob","appendPage","dom","page","removeChild","removeChildren","openPrintDialog","done","onError","printDialog","open","body","style","margin","focus","print","onAfterPrint","close","createEmptyPage","canvasContext","pageElement","styles","createCanvas","renderCanvas","error","scaleNum","canvas","render","promise","printContent","Image","floor","src","toDataURL","onload","catch","name","keys","transforms","renderPage","emptyPage","_pageInfo","renderInProgress","getTextContent","textLayer","TextLayer","textContentSource","rotation","transform","transformOrigin","el","fontSize","prepend","getAnnotations","intent","annotations","annotationLayer","overflow","subtype","rendered","scrollToSearchMatch","matchElement","ref","closestCharElement","closestTextElement","closestPageElement","offsetLeft","scroller","offsetTop","pages","HTMLDivElement","offsetHeight","scrollElement","behavior","currentPage","round","adjustCanvasSize","targetWidth","targetHeight","maxWidth","maxHeight","maxArea","desktopBrowser","d","mobileOS","a","mozilla","browser","isFirefox","safari","adjustedWidth","adjustedHeight","ratio","deltaHeight","adjustedArea","areaRatio","sqrt","adjustRatio","cssClass","getViewport","getContext","adjustedScale","addClass","LINE_FACTOR","AnnotationEditorPrefix","AnnotationEditorType","AnnotationBorderStyleType","shadow","obj","prop","nonSerializable","defineProperty","enumerable","configurable","writable","hexNumbers","n","toString","padStart","Util","makeHexColor","g","b","normalizeRect","slice","AnnotationPrefix","_IdManager_id","_CommandManager_commands","_CommandManager_locked","_CommandManager_maxSize","_CommandManager_position","_AnnotationEditorUIManager_instances","_AnnotationEditorUIManager_abortController","_AnnotationEditorUIManager_activeEditor","_AnnotationEditorUIManager_allEditors","_AnnotationEditorUIManager_allLayers","_AnnotationEditorUIManager_annotationStorage","_AnnotationEditorUIManager_changedExistingAnnotations","_AnnotationEditorUIManager_commandManager","_AnnotationEditorUIManager_currentPageIndex","_AnnotationEditorUIManager_deletedAnnotationsElementIds","_AnnotationEditorUIManager_draggingEditors","_AnnotationEditorUIManager_editorTypes","_AnnotationEditorUIManager_editorsToRescale","_AnnotationEditorUIManager_enableHighlightFloatingButton","_AnnotationEditorUIManager_focusMainContainerTimeoutId","_AnnotationEditorUIManager_focusManagerAC","_AnnotationEditorUIManager_highlightColors","_AnnotationEditorUIManager_highlightWhenShiftUp","_AnnotationEditorUIManager_highlightToolbar","_AnnotationEditorUIManager_idManager","_AnnotationEditorUIManager_isEnabled","_AnnotationEditorUIManager_isWaiting","_AnnotationEditorUIManager_lastActiveElement","_AnnotationEditorUIManager_mode","_AnnotationEditorUIManager_selectedEditors","_AnnotationEditorUIManager_selectedTextNode","_AnnotationEditorUIManager_showAllStates","_AnnotationEditorUIManager_previousStates","_AnnotationEditorUIManager_translation","_AnnotationEditorUIManager_translationTimeoutId","_AnnotationEditorUIManager_container","_AnnotationEditorUIManager_viewer","_AnnotationEditorUIManager_getAnchorElementForSelection","_AnnotationEditorUIManager_getLayerForTextLayer","_AnnotationEditorUIManager_displayHighlightToolbar","_AnnotationEditorUIManager_selectionChange","_AnnotationEditorUIManager_onSelectEnd","_AnnotationEditorUIManager_addSelectionListener","_AnnotationEditorUIManager_addFocusManager","_AnnotationEditorUIManager_removeFocusManager","_AnnotationEditorUIManager_addKeyboardManager","_AnnotationEditorUIManager_removeKeyboardManager","_AnnotationEditorUIManager_addCopyPasteListeners","_AnnotationEditorUIManager_removeCopyPasteListeners","_AnnotationEditorUIManager_addDragAndDropListeners","_AnnotationEditorUIManager_dispatchUpdateStates","_AnnotationEditorUIManager_dispatchUpdateUI","_AnnotationEditorUIManager_enableAll","_AnnotationEditorUIManager_disableAll","_AnnotationEditorUIManager_addEditorToLayer","_AnnotationEditorUIManager_lastSelectedEditor_get","_AnnotationEditorUIManager_isEmpty","_AnnotationEditorUIManager_selectEditors","IdManager","idPrefix","set","_","id","_a","_b","WeakMap","CommandManager","maxSize","cmd","undo","post","mustExec","type","NaN","overwriteIfSameType","keepUndo","save","next","splice","redo","hasSomethingToUndo","hasSomethingToRedo","AnnotationEditorUIManager","viewer","pdfViewer","eventBus","pdfDocument","highlightColors","annotationEditorMode","NONE","viewParameters","isShiftKeyDown","_eventBus","AbortController","Map","Set","isEditing","isEmpty","hasSelectedEditor","hasSelectedText","signal","_signal","_on","onEditingAction","bind","onPageChanging","onScaleChanging","onRotationChanging","onSetPreference","call","annotationStorage","realScale","PixelsPerInch","PDF_TO_CSS_UNITS","abort","layer","values","clear","getTextLayerForAnchor","anchorElement","combinedSignal","abortSignal","AbortSignal","any","direction","getComputedStyle","highlightColorNames","reverse","switchToMode","mode","on","once","dispatch","setPreference","focusMainContainer","findParent","layerX","layerY","div","getBoundingClientRect","disableUserSelect","toggle","addShouldRescale","editor","removeShouldRescale","delete","commitOrRemove","pagesRotation","highlightSelection","methodOfCreation","selection","getSelection","isCollapsed","anchorNode","anchorOffset","focusNode","focusOffset","boxes","getSelectionBoxes","empty","isNoneMode","createAndAddNewEditor","showAllEditors","HIGHLIGHT","showEditorToolBar","anchor","getMode","FREETEXT","hideEditorToolBar","addToAnnotationStorage","has","setValue","blur","hasSelection","activeElement","contains","_focusEventsAllowed","lastEditor","lastActiveElement","addEditListeners","removeEditListeners","dragOver","event","dataTransfer","items","editorType","isHandlingMimeForPasting","dropEffect","drop","item","paste","currentLayer","copy","editors","serialized","serialize","clipboardData","setData","JSON","stringify","cut","data","getData","parse","ex","unselectAll","newEditors","deserializedEditor","deserialize","addCommands","setEditingState","registerEditorTypes","types","defaultPropertiesToUpdate","getId","get","getLayer","pageIndex","currentPageIndex","addLayer","enable","disable","removeLayer","updateMode","editId","isFromKeyboard","annotationElementId","setSelected","enterInEditMode","addNewEditorFromKeyboard","canCreateNewEmptyEditor","addNewEditor","updateToolbar","updateParams","AnnotationEditorParamsType","CREATE","HIGHLIGHT_DEFAULT_COLOR","HIGHLIGHT_SHOW_ALL","updateDefaultParams","visible","show","enableWaiting","mustWait","disableClick","enableClick","getEditors","getEditor","addEditor","removeEditor","unselect","addDeletedAnnotationElement","addChangedExistingAnnotation","deleted","isDeletedAnnotationElement","removeDeletedAnnotationElement","removeChangedExistingAnnotation","setActiveEditor","propertiesToUpdate","updateUI","toggleSelected","select","selectedEditor","isSelected","firstSelectedEditor","size","isEnterHandled","params","hasSomethingToControl","selectAll","commit","translateSelectedEditors","noCommit","totalX","totalY","translateInPage","setUpDragSession","savedX","savedY","savedPageIndex","newX","newY","newPageIndex","endDragSession","map","mustBeAddedInUndoStack","move","parent","_setParentAndPosition","dragSelectedEditors","tx","ty","rebuild","changeParent","addOrRebuild","isActive","getActive","getActiveEditor","ii","rangeCount","getRangeAt","commonAncestorContainer","parentWidth","parentHeight","rotator","w","h","range","collapsed","getClientRects","renderAnnotationElement","editorId","getRawValue","hasBeenModified","WeakSet","hasTextLayer","hide","activeLayer","toggleDrawing","abortController","pointerup","button","details","entries","some","HIGHLIGHT_FREE","ed","TRANSLATE_SMALL","TRANSLATE_BIG","PresentationModeState","ScrollMode","binarySearchFirstItem","condition","start","minIndex","maxIndex","currentIndex","_TextAccessibilityManager_instances","_a$8","_TextAccessibilityManager_enabled","_TextAccessibilityManager_textChildren","_TextAccessibilityManager_textNodes","_TextAccessibilityManager_waitingElements","_TextAccessibilityManager_compareElementPositions","_TextAccessibilityManager_addIdToAriaOwns","_TextLayerBuilder_instances","_a$7","_TextLayerBuilder_onAppend","_TextLayerBuilder_textLayer","_TextLayerBuilder_textLayers","_TextLayerBuilder_selectionChangeAbortController","_TextLayerBuilder_bindMouse","_TextLayerBuilder_removeGlobalSelectionListener","_TextLayerBuilder_enableGlobalSelectionListener","_AnnotationElement_instances","_AnnotationElement_updates","_AnnotationElement_hasBorder","_AnnotationElement_popupElement","_AnnotationElement_setRectEdited","_LinkAnnotationElement_instances","_LinkAnnotationElement_setInternalLink","_PopupElement_instances","_PopupElement_boundKeyDown","_PopupElement_boundHide","_PopupElement_boundShow","_PopupElement_boundToggle","_PopupElement_color","_PopupElement_container","_PopupElement_contentsObj","_PopupElement_dateObj","_PopupElement_elements","_PopupElement_parent","_PopupElement_parentRect","_PopupElement_pinned","_PopupElement_popup","_PopupElement_position","_PopupElement_rect","_PopupElement_richText","_PopupElement_titleObj","_PopupElement_updates","_PopupElement_wasVisible","_PopupElement_html_get","_PopupElement_fontSize_get","_PopupElement_fontColor_get","_PopupElement_makePopupContent","_PopupElement_keyDown","_PopupElement_setPosition","_PopupElement_toggle","_PopupElement_show","_PopupElement_hide","_AnnotationLayer_accessibilityManager","_AnnotationLayer_annotationCanvasMap","TextAccessibilityManager","setTextMapping","textDivs","Error","sort","textChildren","nodeIndex","getElementById","isRemovable","addPointerInTextLayer","removePointerInTextLayer","children","owns","includes","join","console","warn","child","moveElementInDOM","contentElement","hasChildNodes","elementToCompare","before","after","e1","e2","rect1","rect2","top1","bot1","mid1","top2","bot2","mid2","TextLayerBuilder","pdfPage","accessibilityManager","onAppend","tabIndex","viewport_1","textContentParams","_c","update","onBefore","streamTextContent","includeMarkedContent","disableNormalization","markedContentElements","endOfContent","hidden","makeColorComp","scaleAndClamp","end","textLayerDiv","ColorConverters","CMYK_G","c","m","k","G_CMYK","G_RGB","G_rgb","G_HTML","G","RGB_G","RGB_rgb","color","RGB_HTML","T_HTML","T_rgb","CMYK_RGB","CMYK_rgb","CMYK_HTML","components","rgb","RGB_CMYK","GetElementsByNameSet","getRectDims","AnnotationElement","parameters","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","hasJSActions","_fieldObjects","popup","annotationEditorType","fieldObjects","_createContainer","_createQuadrilaterals","_hasPopupData","titleObj","contentsObj","richText","str","_isEditable","isEditable","hasPopupData","updateEdited","resetEdited","WidgetAnnotationElement","zIndex","popupRef","alternativeText","title","noRotate","PopupAnnotationElement","rotationValue","hasOwnCanvas","setRotation","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","RadioButtonWidgetAnnotationElement","borderBottomStyle","borderColor","view","pageWidth","angle","elementWidth","elementHeight","_commonActions","setColor","jsName","styleName","detail","colorType","colorArray","visibility","noView","noPrint","preventScroll","userName","readonly","disabled","required","_setRequired","bgColor","fillColor","fgColor","textColor","strokeColor","_dispatchEventFromSandbox","actions","jsEvent","commonActions","action","_setDefaultPropertiesFromJS","storedData","actionName","quadPoints","rectBlX","rectBlY","rectTrX","rectTrY","fround","trX","trY","blX","blY","subarray","svgBuffer","svg","defs","clipPath","rectWidth","rectHeight","backgroundImage","_createPopup","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","getElementsByName","maybeShow","forceHide","getElementsToTriggerPopup","addHighlightArea","triggers","_editOnDoubleClick","isRequired","currentRect","showElementAndHideCanvas","previousSibling","nodeName","_getKeyModifier","FeatureTest","platform","isMac","metaKey","ctrlKey","_setEventListener","elementData","baseName","valueGetter","shiftKey","modifier","focused","relatedTarget","_setEventListeners","names","getter","Blur","Focus","_setBackgroundColor","backgroundColor","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","computedFontSize","roundToOneDecimal","multiLine","abs","lineHeight","textAlignment","textAlign","storage","getValue","fieldValue","buttonValue","radio","fieldName","readOnly","checked","defaultValue","defaultFieldValue","pdfButtonValue","curChecked","PopupElement","modificationDate","parentRect","elementIds","PDFDateString","toDateObject","popupShow","baseColor","outlineColor","CSS","supports","BACKGROUND_ENLIGHT","header","dir","date","toLocaleDateString","time","toLocaleTimeString","html","XfaLayer","xfaHtml","lastChild","contents","_formatContents","p","lines","line","createTextNode","popupContent","isVisible","attributes","popupLines","lineAttributes","altKey","useParentRect","intersect","normalizedRect","popupLeft","popupTop","parseInt","FreeTextAnnotationElement","textPosition","content","lineSpan","_DrawLayer_instances","_a$6","_DrawLayer_parent","_DrawLayer_id","_DrawLayer_mapping","_DrawLayer_toUpdate","_DrawLayer_setBox","_DrawLayer_createSVG","_DrawLayer_createClipPath","_AnnotationEditor_instances","_a$5","_AnnotationEditor_x","_AnnotationEditor_y","_AnnotationEditor_disabled","_AnnotationEditor_keepAspectRatio","_AnnotationEditor_focusAC","_AnnotationEditor_hasBeenClicked","_AnnotationEditor_initialPosition","_AnnotationEditor_isEditing","_AnnotationEditor_isInEditMode","_AnnotationEditor_moveInDOMTimeout","_AnnotationEditor_prevDragX","_AnnotationEditor_prevDragY","_AnnotationEditor_isDraggable","_AnnotationEditor_zIndex","_AnnotationEditor_translate","_AnnotationEditor_rotatePoint","_AnnotationEditor_selectOnPointerEvent","_AnnotationEditor_setUpDragSession","_AnnotationEditor_addFocusListeners","_AnnotationEditor_stopResizing","_FreeTextEditor_instances","_a$4","_FreeTextEditor_color","_FreeTextEditor_content","_FreeTextEditor_editorDivId","_FreeTextEditor_editModeAC","_FreeTextEditor_fontSize","_FreeTextEditor_initialData","_FreeTextEditor_updateFontSize","_FreeTextEditor_updateColor","_FreeTextEditor_extractText","_FreeTextEditor_setEditorDimensions","_FreeTextEditor_getNodeContent","_FreeTextEditor_setContent","_FreeTextEditor_serializeContent","_FreeTextEditor_deserializeContent","_FreeTextEditor_hasElementChanged","DrawLayer","setParent","root","_svgFactory","DOMSVGFactory","outlines","opacity","isPathUpdatable","box","free","path","pathId","toSVGPath","clipPathId","use","highlightOutline","maskId","mask","use1","use2","finalizeLine","updateBox","updateLine","removeFreeHighlight","updatePath","rotate","changeColor","changeOpacity","removeClass","create","clipPathUse","getRGB","startsWith","colorRGB","ColorManager","_colors","_colorsMapping","colors","computedColor","getColorValues","convert","matchMedia","RGB","every","getHexCode","AnnotationEditor","_willKeepAspectRatio","_structTreeParentId","pageRotation","pageDimensions","pageTranslation","isAttachedToDOM","_editToolbar","_initialOptions","_isVisible","_uiManager","_l10nPromise","_zIndex","idManager","uiManager","isCentered","parentDimensions","_type","_defaultLineColor","_colorManager","deleteAnnotationElement","fakeEditor","FakeEditor","getNextId","initialize","l10n","_value","mime","_isDraggable","center","parentRotation","fixAndSetPosition","setInBackground","setInForeground","focusin","focusout","isMultipleSelection","setAt","screenToPageTranslation","translate","scrollIntoView","block","xValue","yValue","findNewParent","bx","by","getBaseTranslation","toFixed","_hasBeenMoved","_borderLineWidth","_mustFixPosition","moveInDOM","pageTranslationToScreen","parentScale","scaledWidth","scaledHeight","isCSSRoundSupported","setDims","fixDims","getInitialTranslation","addEditToolbar","removeEditToolbar","getClientDimensions","pointerdown","moveEditorInDOM","getRect","shiftX","shiftY","getRectInCurrentCoords","x1","y1","x2","y2","onceAdded","enableEditMode","disableEditMode","isInEditMode","needsToBeRebuilt","isForCopying","isResizable","makeResizable","toolbarPosition","_stopResizingWithKeyboard","disableEditing","enableEditing","getImageForAltText","contentDiv","setAspectRatio","aspectRatio","MIN_SIZE","telemetryInitialData","telemetryFinalData","_reportTelemetry","resetAnnotationElement","highlightEditor","freeTextEditor","ac","clientX","clientY","pointerMoveCallback","passive","capture","pointerUpCallback","_telemetryTimeout","EOL_PATTERN","FreeTextEditor","editorDiv","overlayDiv","_defaultColor","_defaultFontSize","strings","documentElement","_internalPadding","parseFloat","getPropertyValue","FREETEXT_SIZE","FREETEXT_COLOR","_translateEmpty","contentEditable","editorDivKeydown","editorDivFocus","editorDivBlur","editorDivInput","editorDivPaste","innerText","trim","savedText","newText","trimEnd","setText","shouldGetKeyboardEvents","dblclick","keydown","baseX","baseY","messages","freeTextEditorPlaceholder","posX","posY","replaceAll","normalize","deleteFromDocument","insertNode","collapseToStart","startContainer","bufferBefore","bufferAfter","nodeValue","newRange","Range","beforeLength","reduce","acc","setStart","setEnd","removeAllRanges","addRange","initialData","annotationType","padding","structTreeParentId","replaceChildren","toJSON","_Outliner_instances","_Outliner_box","_Outliner_verticalEdges","_Outliner_intervals","_Outliner_getOutlines","_Outliner_binarySearch","_Outliner_insert","_Outliner_remove","_Outliner_breakEdge","_HighlightOutline_box","_HighlightOutline_outlines","_FreeOutliner_instances","_a$3","_FreeOutliner_box","_FreeOutliner_bottom","_FreeOutliner_innerMargin","_FreeOutliner_isLTR","_FreeOutliner_top","_FreeOutliner_last","_FreeOutliner_lastX","_FreeOutliner_lastY","_FreeOutliner_min","_FreeOutliner_min_dist","_FreeOutliner_scaleFactor","_FreeOutliner_thickness","_FreeOutliner_points","_FreeOutliner_MIN_DIST","_FreeOutliner_MIN_DIFF","_FreeOutliner_MIN","_FreeOutliner_getLastCoords","_FreeHighlightOutline_instances","_FreeHighlightOutline_box","_FreeHighlightOutline_bbox","_FreeHighlightOutline_innerMargin","_FreeHighlightOutline_isLTR","_FreeHighlightOutline_points","_FreeHighlightOutline_scaleFactor","_FreeHighlightOutline_outline","_FreeHighlightOutline_rescale","_FreeHighlightOutline_rescaleAndSwap","_FreeHighlightOutline_computeMinMax","_HighlightEditor_instances","_a$2","_HighlightEditor_anchorNode","_HighlightEditor_anchorOffset","_HighlightEditor_boxes","_HighlightEditor_clipPathId","_HighlightEditor_focusOutlines","_HighlightEditor_focusNode","_HighlightEditor_focusOffset","_HighlightEditor_highlightDiv","_HighlightEditor_highlightOutlines","_HighlightEditor_id","_HighlightEditor_isFreeHighlight","_HighlightEditor_lastPoint","_HighlightEditor_opacity","_HighlightEditor_outlineId","_HighlightEditor_text","_HighlightEditor_thickness","_HighlightEditor_methodOfCreation","_HighlightEditor_createOutlines","_HighlightEditor_createFreeOutlines","_HighlightEditor_updateColor","_HighlightEditor_updateThickness","_HighlightEditor_cleanDrawLayer","_HighlightEditor_addToDrawLayer","_HighlightEditor_rotateBbox","_HighlightEditor_keydown","_HighlightEditor_setCaret","_HighlightEditor_getRotation","_HighlightEditor_serializeBoxes","_HighlightEditor_serializeOutlines","_HighlightEditor_highlightMove","_HighlightEditor_endHighlight","_AnnotationEditorLayer_instances","_a$1","_AnnotationEditorLayer_accessibilityManager","_AnnotationEditorLayer_allowClick","_AnnotationEditorLayer_annotationLayer","_AnnotationEditorLayer_clickAC","_AnnotationEditorLayer_editorFocusTimeoutId","_AnnotationEditorLayer_editors","_AnnotationEditorLayer_hadPointerDown","_AnnotationEditorLayer_isCleaningUp","_AnnotationEditorLayer_isDisabling","_AnnotationEditorLayer_textLayer","_AnnotationEditorLayer_textSelectionAC","_AnnotationEditorLayer_uiManager","_AnnotationEditorLayer_editorTypes","_AnnotationEditorLayer_textLayerPointerDown","_AnnotationEditorLayer_currentEditorType_get","_AnnotationEditorLayer_createNewEditor","_AnnotationEditorLayer_getCenterPoint","_AnnotationEditorLayer_cleanup","_Page_instances","_Page_previousRotation","_Page_layers","_Page_dispatchLayerRendered","setFontsize","savedFontsize","col","savedColor","savedDisplay","savedVisibility","_freeTextDefaultContent","_editorType","Outliner","innerMargin","isLTR","minX","Infinity","maxX","minY","maxY","EPSILON","pow","ceil","right","bboxWidth","bboxHeight","shiftedMinX","shiftedMinY","lastEdge","at","lastPoint","edge","getOutlines","outlineVerticalEdges","edges","allEdges","edge1","edge2","outline","lastPointX","lastPointY","HighlightOutline","array","middle","results","j","jj","y3","y4","Outline","FreeHighlightOutline","polygon","prevX","prevY","points","FreeOutliner","scaleFactor","thickness","Float64Array","isNaN","layerWidth","layerHeight","diffX","diffY","hypot","diffD","K","x0","y0","nY","thX","thY","atan2","PI","bottom","lastTop","lastBottom","lastTopX","lastTopY","lastBottomX","lastBottomY","last","outlineObj","N","getNewOutline","sx","sy","outliner","lastX","lastY","ltrCallback","bbox","bezierBoundingBox","HighlightEditor","_defaultThickness","_defaultOpacity","highlightId","computeTelemetryFinalData","numberOfColors","_d","_e","HIGHLIGHT_THICKNESS","HIGHLIGHT_COLOR","addUndoableEditor","mustBeSelected","drawLayer","highlightDiv","pointerover","pointerleave","_moveCaret","startHighlighting","stopPropagation","noContextMenu","_freeHighlight","_freeHighlightId","_freeHighlightClipId","outlinerForOutline","highlightOutlines","setPosition","Float32Array","AnnotationEditorLayer","editorTypes","_initialized","isInvisible","disableTextSelection","togglePointerEvents","toggleAnnotationLayerPointerEvents","INK","addInkEditorIfNeeded","enableTextSelection","isCommitting","offsetX","offsetY","enabled","annotationElementIds","editables","getEditableAnnotations","editable","changedAnnotations","resetAnnotations","getEditableAnnotation","attach","detach","pasteEditor","STAMP","setLayerDimensions","oldRotation","tlX","tlY","centerX","innerWidth","centerY","innerHeight","LAYERS_ORDER","_AnnotationStorage_modified","freeze","hash","transfer","_PDFLinkService_isValidExplicitDest","LinkTarget","PDFLinkService","externalLinkTarget","externalLinkRel","ignoreDestinationZoom","_ignoreDestinationZoom","baseUrl","pdfHistory","externalLinkEnabled","setDocument","setViewer","setHistory","pagesCount","numPages","currentPageNumber","isInPresentationMode","goToDestination","namedDest","explicitDest","destRef","cachedPageNumber","Number","isInteger","pushCurrentPosition","scrollPageIntoView","destArray","val","pageLabelToPageNumber","pushPage","addLinkAttributes","link","newWindow","rel","href","onclick","targetStr","getDestinationHash","getAnchorUrl","escape","setHash","query","urlSearchParams","URLSearchParams","toLowerCase","parseQueryString","phrase","zoomArgs","zoomArg","zoomArgNumber","allowNegativeOffset","unescape","executeNamedAction","back","forward","nextPage","previousPage","executeSetOCGState","optionalContentConfig","optionalContentConfigPromise","setOCGState","Promise","resolve","PdfViewerInteractionMode","num","gen","argsLen","allowNull","arg","S","__meta__","category","description","depends","chunk","zoomLevel","zoomLevelType","currentZoom","documentContainer","pageSize","offsetWidth","calculatedZoomLevel","fileName","saveOptions","onDownload","pdf","Blob","blob","s","reason","f","l","verbosity","isEvalSupported","arrayBuffer","typedArray","getDocumentParameters","loadOnDemandPageSize","getDocument","getPage","all","loadOnDemand","pdfPages","sheet","CSSStyleSheet","replaceSync","ownerDocument","adoptedStyleSheets","allDone","Boolean"],"mappings":"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","file":"kendo.pdfviewer-common.cmn.chunk.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.draggable.cmn.chunk.js'), require('kendo.file-saver.cmn.chunk.js'), require('kendo.common.cmn.chunk.js'), require('kendo.pdfjs.loader.js'), require('kendo.dateinputs-common.cmn.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.draggable.cmn.chunk', 'kendo.file-saver.cmn.chunk', 'kendo.common.cmn.chunk', 'kendo.pdfjs.loader', 'kendo.dateinputs-common.cmn.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.PdfviewerCommonCmnChunk = {}), global.kendo._globals.DraggableCmnChunk, global.kendo._globals.FileSaverCmnChunk, global.kendo._globals.CommonCmnChunk, global.kendo._globals.PdfjsLoader, global.kendo._globals.DateinputsCommonCmnChunk));\n})(this, (function (exports, kendo_draggable_cmn_chunk_js, kendo_fileSaver_cmn_chunk_js, kendo_common_cmn_chunk_js, kendo_pdfjs_loader_js, kendo_dateinputsCommon_cmn_chunk_js) {\n    const __meta__ = {\n        id: \"pdfviewer-common.cmn.chunk\",\n        name: \"PdfviewerCommonCmnChunk\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: ['draggable.cmn.chunk', 'file-saver.cmn.chunk', 'common.cmn.chunk', 'pdfjs.loader', 'dateinputs-common.cmn.chunk'],\n        hidden: true,\n        chunk: true\n    };\n\n    // @ts-expect-error TS(2556): A spread argument must either have a tuple type or... Remove this comment to see the full error message\n    const extend = (...args) => Object.assign(...args);\n    const isObject = (value) => value && typeof (value) === \"object\" && !Array.isArray(value);\n    const isHtmlElement = (element) => element instanceof HTMLElement;\n    const isDomElement = (element) => element instanceof Element;\n    /* eslint-disable no-undef */\n    // @ts-expect-error TS(2304): Cannot find name 'DotNet'.\n    const isDotNetObject = (value) => value && window && window.DotNet && window.DotNet.DotNetObject && value instanceof DotNet.DotNetObject;\n    /* eslint-enable no-undef */\n    const deepExtend = (target, ...sources) => {\n        if (!sources.length) {\n            return target;\n        }\n        const source = sources.shift();\n        if (isObject(target) && isObject(source)) {\n            for (const key in source) {\n                if (source[key] instanceof Component) {\n                    target[key] = source[key];\n                }\n                else if (isHtmlElement(source[key])) {\n                    target[key] = source[key];\n                }\n                else if (key === \"dotNetInstance\" || isDotNetObject(source[key])) {\n                    // avoid cloning a DotNetObject as it might have circular properties\n                    // see https://github.com/telerik/blazor/issues/7507\n                    // the check for the name of our own option - \"dotNetInstance\"\n                    // is an additional guard against the Blazor API being different in other .NET versions\n                    target[key] = source[key];\n                }\n                else if (source[key] && source[key].buffer && source[key].buffer instanceof ArrayBuffer) {\n                    target[key] = source[key];\n                }\n                else if (isObject(source[key]) && Object.getPrototypeOf(source[key]) !== Object.prototype) {\n                    target[key] = source[key];\n                }\n                else if (isObject(source[key])) {\n                    if (!target[key] || !isObject(target[key])) {\n                        extend(target, { [key]: {} });\n                    }\n                    deepExtend(target[key], source[key]);\n                }\n                else {\n                    extend(target, { [key]: source[key] });\n                }\n            }\n        }\n        return deepExtend(target, ...sources);\n    };\n    const isFunction = fn => typeof (fn) === \"function\";\n    const isString = value => typeof (value) === \"string\";\n    const toArray = value => Array.from(value);\n    const isDefined = value => typeof (value) !== \"undefined\";\n    const isNotNull = value => value !== null;\n    const hasValue = value => isDefined(value) && isNotNull(value);\n    const noop = function () { };\n    const convertToHtml = (htmlString, ownerDocument) => {\n        const template = (ownerDocument || document).createElement('template');\n        template.innerHTML = htmlString.trim();\n        const content = template.content;\n        if (content.childNodes.length > 1) {\n            return content.childNodes;\n        }\n        return content.firstChild;\n    };\n    const toPixel = value => parseFloat(value) + \"px\";\n    const toClassSelector$1 = (className) => (className === null || className === void 0 ? void 0 : className.startsWith(\".\")) ? className : `.${className}`;\n    const mousewheelDelta = (e) => {\n        let delta = 0;\n        if (e.wheelDelta) {\n            delta = -e.wheelDelta / 120;\n        }\n        else if (e.detail) {\n            delta = e.detail / 3;\n        }\n        delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n        return delta;\n    };\n    const createPromise = () => {\n        let resolveFn;\n        let rejectFn;\n        const promise = new Promise(function (resolve, reject) {\n            resolveFn = resolve;\n            rejectFn = reject;\n        });\n        // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n        promise.resolve = resolveFn;\n        // @ts-expect-error TS(2339): Property 'reject' does not exist on type 'Promise<... Remove this comment to see the full error message\n        promise.reject = rejectFn;\n        return promise;\n    };\n\n    class Component {\n        constructor(element, options) {\n            this.options = {\n                events: {}\n            };\n            this.element = element;\n            this.options = options;\n        }\n        destroy() {\n            this.element = null;\n        }\n        extendOptions(options) {\n            this.options = deepExtend(this.options, options);\n        }\n        setOptions(options) {\n            this.options = options;\n        }\n        trigger(eventName, args = {}) {\n            const eventData = {\n                defaultPrevented: false,\n                preventDefault: () => {\n                    eventData.defaultPrevented = true;\n                }\n            };\n            if (isFunction(this.options.events[eventName])) {\n                this.options.events[eventName](extend(eventData, args, {\n                    sender: this\n                }));\n            }\n            return eventData.defaultPrevented;\n        }\n    }\n\n    const throttle = function (func, wait, options = {}) {\n        let timeout, context, args, result;\n        let previous = 0;\n        const later = function () {\n            previous = options.leading === false ? 0 : new Date().getTime();\n            timeout = undefined;\n            result = func.apply(context, args);\n            if (!timeout) {\n                context = args = null;\n            }\n        };\n        const throttled = function () {\n            const now = new Date().getTime();\n            if (!previous && options.leading === false) {\n                previous = now;\n            }\n            const remaining = wait - (now - previous);\n            context = undefined; // this\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = undefined;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) {\n                    context = args = null;\n                }\n            }\n            else if (!timeout && options.trailing !== false) {\n                timeout = window.setTimeout(later, remaining);\n            }\n            return result;\n        };\n        return throttled;\n    };\n    const preventDefault = (e) => {\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        if (e.originalEvent) {\n            e.originalEvent.preventDefault();\n        }\n    };\n    const matchesElementSelector = (element, selector) => {\n        if (!element || !selector) {\n            return false;\n        }\n        return element.closest(selector);\n    };\n    const FRAMES_PER_SECOND$1 = 1000 / 60;\n    const SCROLL$1 = \"scroll\";\n    /**\n     * @hidden\n     */\n    class Scroller extends Component {\n        constructor(element, options) {\n            super(element, options);\n            this.options = {\n                events: {\n                    [SCROLL$1]: noop,\n                },\n                filter: '',\n                // throttle the scroll events to get a more similar experience\n                // to the scrolling behavior in Adobe Acrobat Reader\n                // as well as allow a way to improve the scrolling performance for large files\n                panScrollThrottleDelay: FRAMES_PER_SECOND$1,\n                // the drag directions are actually reversed, e.g.\n                // dragging to the right actually moves the document to the left\n                scrollDirectionModifier: -1,\n                scrollThrottleDelay: FRAMES_PER_SECOND$1,\n            };\n            this.onElementScroll = (e) => {\n                const element = this.element;\n                if (!this.shouldTrackScrollEvents()) {\n                    return;\n                }\n                if (this.state.trackNextElementScroll) {\n                    this.scrollTo(element.scrollLeft, element.scrollTop);\n                }\n                else {\n                    // reset the state, so that consecutive scroll events can be handled\n                    this.state.trackNextElementScroll = true;\n                }\n                this.trigger(SCROLL$1, {\n                    originalEvent: e\n                });\n            };\n            this.onDragStart = (e) => {\n                this.state.dragStarted = false;\n                if (!this.shouldTrackPanEvents()) {\n                    return;\n                }\n                const target = e.target || (e.originalEvent || {}).target;\n                if (this.options.filter &&\n                    !matchesElementSelector(target, this.options.filter)) {\n                    return;\n                }\n                preventDefault(e);\n                this.setState({\n                    dragStarted: true,\n                    location: {\n                        pageX: e.pageX,\n                        pageY: e.pageY\n                    },\n                    locationDelta: {\n                        x: 0,\n                        y: 0\n                    }\n                });\n            };\n            this.onDrag = (e) => {\n                if (!this.shouldTrackPanEvents() || !this.state.dragStarted) {\n                    return;\n                }\n                this.calculateEventLocationDelta(e);\n                this.setState({\n                    location: {\n                        pageX: e.pageX,\n                        pageY: e.pageY\n                    }\n                });\n                const directionModifier = this.options.scrollDirectionModifier;\n                const scrollLeft = this.element.scrollLeft +\n                    directionModifier * this.state.locationDelta.x;\n                const scrollTop = this.element.scrollTop +\n                    directionModifier * this.state.locationDelta.y;\n                this.scrollTo(scrollLeft, scrollTop);\n            };\n            this.onDragEnd = () => {\n                if (!this.shouldTrackPanEvents()) {\n                    return;\n                }\n            };\n            this.extendOptions(options);\n            this.resetState();\n            this.bindEvents();\n        }\n        destroy() {\n            this.unbindEvents();\n        }\n        initDraggable() {\n            this.destroyDraggable();\n            if (this.options.panScrollThrottleDelay > 0) {\n                this.throttledOnDrag = throttle(this.onDrag, this.options.panScrollThrottleDelay);\n            }\n            else {\n                this.throttledOnDrag = this.onDrag;\n            }\n            this.draggable = new kendo_draggable_cmn_chunk_js.D({\n                mouseOnly: false,\n                press: this.onDragStart,\n                drag: this.throttledOnDrag,\n                release: this.onDragEnd\n            });\n            this.draggable.bindTo(this.element);\n        }\n        destroyDraggable() {\n            if (this.draggable && this.draggable.destroy) {\n                this.draggable.destroy();\n                if (this.throttledOnDrag && this.throttledOnDrag.cancel) {\n                    this.throttledOnDrag.cancel();\n                    this.throttledOnDrag = null;\n                }\n            }\n        }\n        bindEvents() {\n            this.bindDraggableEvents();\n            this.bindElementScroll();\n        }\n        bindDraggableEvents() {\n            this.initDraggable();\n        }\n        bindElementScroll() {\n            if (this.options.scrollThrottleDelay > 0) {\n                this.throttledOnElementScroll = throttle(this.onElementScroll, this.options.scrollThrottleDelay);\n            }\n            else {\n                this.throttledOnElementScroll = this.onElementScroll;\n            }\n            this.element.addEventListener(SCROLL$1, this.throttledOnElementScroll);\n        }\n        unbindEvents() {\n            this.unbindElementScroll();\n            this.unbindDraggableEvents();\n        }\n        unbindDraggableEvents() {\n            this.destroyDraggable();\n        }\n        unbindElementScroll() {\n            if (this.throttledOnElementScroll &&\n                this.throttledOnElementScroll.cancel) {\n                this.throttledOnElementScroll.cancel();\n                this.throttledOnElementScroll = null;\n            }\n            this.element.removeEventListener(SCROLL$1, this.throttledOnElementScroll);\n        }\n        setState(newState) {\n            this.state = Object.assign({}, this.state || {}, newState);\n        }\n        resetState() {\n            this.setState({\n                trackPanEvents: false,\n                trackScrollEvents: false,\n                trackNextElementScroll: false,\n                location: { pageX: 0, pageY: 0 },\n                locationDelta: { x: 0, y: 0 }\n            });\n        }\n        enablePanEventsTracking() {\n            this.state.trackPanEvents = true;\n            this.bindDraggableEvents();\n        }\n        disablePanEventsTracking() {\n            this.unbindDraggableEvents();\n            this.state.trackPanEvents = false;\n        }\n        shouldTrackPanEvents() {\n            return this.state.trackPanEvents;\n        }\n        enableScrollEventsTracking() {\n            this.state.trackScrollEvents = true;\n            this.unbindElementScroll();\n            this.bindElementScroll();\n        }\n        disableScrollEventsTracking() {\n            this.unbindElementScroll();\n            this.state.trackScrollEvents = false;\n        }\n        shouldTrackScrollEvents() {\n            return this.state.trackScrollEvents;\n        }\n        calculateEventLocationDelta(e) {\n            this.state.locationDelta = {\n                x: e.pageX - this.state.location.pageX,\n                y: e.pageY - this.state.location.pageY\n            };\n        }\n        scrollTo(x, y, options = { trackScrollEvent: true }) {\n            if (!options.trackScrollEvent) {\n                this.state.trackNextElementScroll = false;\n            }\n            this.element.scrollLeft = x;\n            this.element.scrollTop = y;\n        }\n    }\n\n    const unwrapElement = (element) => {\n        const parentElement = element.parentElement;\n        if (!element || !parentElement) {\n            return;\n        }\n        parentElement.replaceWith(...Array.from(parentElement.childNodes));\n    };\n    const unwrapElements = (elements) => {\n        if (!elements || !elements.length || elements.length <= 0) {\n            return;\n        }\n        for (let i = 0; i < elements.length; i++) {\n            unwrapElement(elements[i]);\n        }\n    };\n    const wrapElement = (element, wrapper) => {\n        if (element.parentNode) {\n            element.parentNode.insertBefore(wrapper, element);\n            wrapper.appendChild(element);\n        }\n    };\n    const wrapInnerElement = (element, wrapper) => {\n        if (!element || !element.parentNode || !wrapper) {\n            return;\n        }\n        element.appendChild(wrapper);\n        while (element.firstChild && element.firstChild !== wrapper) {\n            wrapper.appendChild(element.firstChild);\n        }\n    };\n    const addClass$1 = (className, element) => {\n        element.classList.add(className);\n    };\n    const removeClass$1 = (className, element) => {\n        element.classList.remove(className);\n    };\n    const toClassSelector = (className) => `.${className}`;\n    const CHAR_INDEX_DATA_ATTR = 'data-char-index';\n    const MATCH_INDEX_DATA_ATTR = 'data-match-index';\n    /**\n     * @hidden\n     */\n    class SearchService {\n        constructor(options) {\n            this.options = {\n                highlightClass: 'k-search-highlight',\n                highlightMarkClass: 'k-search-highlight-mark',\n                charClass: 'k-text-char',\n                textContainers: []\n            };\n            this.extendOptions(options);\n            this.resetState();\n        }\n        destroy() {\n            this.clearSearch();\n        }\n        extendOptions(options) {\n            this.options = Object.assign({}, this.options, options);\n        }\n        setState(newState) {\n            this.state = Object.assign({}, this.state || {}, newState);\n        }\n        resetState() {\n            this.setState({\n                text: '',\n                textNodes: [],\n                charIndex: 0,\n                activeMatchIndex: 0,\n                matches: []\n            });\n        }\n        escapeRegExp(text) {\n            return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n        search({ text, matchCase }) {\n            const escapedText = this.escapeRegExp(text);\n            const searchRegex = new RegExp(escapedText, matchCase ? 'g' : 'ig');\n            let match;\n            if (this.shouldTransformText()) {\n                this.transformTextForSearch();\n            }\n            this.state.matches = [];\n            this.state.activeMatchIndex = 0;\n            this.removeIndicators();\n            if (escapedText === '') {\n                return [];\n            }\n            match = searchRegex.exec(this.state.text);\n            while (match) {\n                this.state.matches.push({\n                    startOffset: match.index,\n                    endOffset: match.index + match[0].length\n                });\n                match = searchRegex.exec(this.state.text);\n            }\n            this.highlightAllMatches();\n            this.addActiveMatchMark();\n            return this.state.matches;\n        }\n        clearSearch() {\n            this.removeIndicators();\n            this.restoreOriginalText();\n        }\n        restoreOriginalText() {\n            this.forEachTextContainer((textContainer) => {\n                const nodes = Array.from(textContainer.querySelectorAll('span:not(.' + this.options.charClass + ')'));\n                nodes.forEach((node) => {\n                    node.innerHTML = node.textContent;\n                });\n            });\n        }\n        shouldTransformText() {\n            return !this.state.text;\n        }\n        transformTextForSearch() {\n            this.state.textNodes = [];\n            this.state.charIndex = 0;\n            this.state.text = '';\n            this.forEachTextContainer((textContainer) => {\n                this.extractTextNodes(textContainer);\n            });\n            this.transformTextNodesForSearch(this.state.textNodes);\n        }\n        extractTextNodes(node) {\n            if (node.nodeType === Node.TEXT_NODE) {\n                this.state.textNodes.push(node);\n            }\n            else {\n                for (let i = 0; i < node.childNodes.length; i++) {\n                    this.extractTextNodes(node.childNodes[i]);\n                }\n            }\n        }\n        transformTextNodesForSearch(textNodes) {\n            for (let i = 0; i < textNodes.length; i++) {\n                this.transformTextNodeForSearch(textNodes[i]);\n            }\n        }\n        transformTextNodeForSearch(node) {\n            const text = node.textContent;\n            if (text.length <= 0) {\n                return;\n            }\n            this.state.text = this.state.text + text;\n            const span = document.createElement('span');\n            wrapElement(node, span);\n            const splittedHtml = this.splitTextByChars(text);\n            span.innerHTML = splittedHtml;\n            unwrapElement(span.childNodes[0]);\n        }\n        splitTextByChars(text) {\n            let splittedTextHtml = '';\n            for (let i = 0; i < text.length; i++) {\n                splittedTextHtml += `<span class='${this.options.charClass}' ${CHAR_INDEX_DATA_ATTR}=${this.state.charIndex}>${text[i]}</span>`;\n                this.state.charIndex++;\n            }\n            return splittedTextHtml;\n        }\n        forEachTextContainer(callback) {\n            for (let i = 0; i < this.options.textContainers.length; i++) {\n                const textContainer = this.options.textContainers[i];\n                callback(textContainer, i);\n            }\n        }\n        highlightAllMatches() {\n            this.state.matches.forEach((match, matchIndex) => {\n                this.addMatchHighlight(match.startOffset, match.endOffset, matchIndex);\n            });\n        }\n        addMatchHighlight(matchStartOffset, matchEndOffset, matchIndex) {\n            for (let i = matchStartOffset; i < matchEndOffset; i++) {\n                this.forEachTextContainer((textContainer) => {\n                    const highlights = Array.from(textContainer.querySelectorAll(toClassSelector(`${this.options.charClass}[${CHAR_INDEX_DATA_ATTR}='${i}']`)));\n                    highlights.forEach((highlight) => {\n                        addClass$1(this.options.highlightClass, highlight);\n                        highlight.setAttribute(MATCH_INDEX_DATA_ATTR, matchIndex);\n                    });\n                });\n            }\n        }\n        removeMatchHighlights() {\n            this.forEachTextContainer((textContainer) => {\n                const highlights = Array.from(textContainer.querySelectorAll(toClassSelector(this.options.highlightClass)));\n                highlights.forEach((highlight) => {\n                    removeClass$1(this.options.highlightClass, highlight);\n                    highlight.removeAttribute(MATCH_INDEX_DATA_ATTR);\n                });\n            });\n        }\n        addActiveMatchMark() {\n            if (!this.state.activeMatchIndex && this.state.activeMatchIndex !== 0) {\n                this.state.activeMatchIndex = 0;\n            }\n            else if (this.state.activeMatchIndex > this.state.matches.length) {\n                this.state.activeMatchIndex = this.state.matches.length;\n            }\n            else {\n                this.removeActiveMatchMark();\n            }\n            const mark = document.createElement('span');\n            mark.classList.add(this.options.highlightMarkClass);\n            this.forEachTextContainer((textContainer) => {\n                const matches = Array.from(textContainer.querySelectorAll(toClassSelector(this.options.charClass +\n                    '[' +\n                    MATCH_INDEX_DATA_ATTR +\n                    '=\\'' +\n                    this.state.activeMatchIndex +\n                    '\\']')));\n                matches.forEach((match) => {\n                    wrapInnerElement(match, mark.cloneNode(true));\n                });\n            });\n        }\n        removeActiveMatchMark() {\n            this.forEachTextContainer((textContainer) => {\n                const marks = Array.from(textContainer.querySelectorAll(toClassSelector(this.options.highlightMarkClass)));\n                const childNodes = marks.flatMap((x) => Array.from(x.childNodes));\n                unwrapElements(childNodes);\n            });\n        }\n        removeIndicators() {\n            this.removeActiveMatchMark();\n            this.removeMatchHighlights();\n        }\n        markNextMatch() {\n            this.markNextMatchIndex();\n            this.addActiveMatchMark();\n        }\n        markPreviousMatch() {\n            this.markPreviousMatchIndex();\n            this.addActiveMatchMark();\n        }\n        markNextMatchIndex() {\n            this.moveActiveMatchIndex(1);\n        }\n        markPreviousMatchIndex() {\n            this.moveActiveMatchIndex(-1);\n        }\n        moveActiveMatchIndex(delta) {\n            this.state.activeMatchIndex += delta;\n            if (this.state.activeMatchIndex < 0) {\n                this.state.activeMatchIndex = Math.max(this.state.matches.length - 1, 0);\n            }\n            else if (this.state.activeMatchIndex >\n                this.state.matches.length - 1) {\n                this.state.activeMatchIndex = 0;\n            }\n        }\n        getActiveMatchElement() {\n            let markedMatch;\n            this.forEachTextContainer((textContainer) => {\n                const mark = textContainer.querySelector(toClassSelector(this.options.highlightMarkClass));\n                if (mark) {\n                    markedMatch = mark;\n                    return;\n                }\n            });\n            return markedMatch;\n        }\n    }\n\n    class Annotation {\n        constructor(container, viewport, annotation, pdfDoc, zoom, rootElement) {\n            this.container = container;\n            this.viewport = viewport;\n            this.zoom = zoom;\n            this.annotation = annotation;\n            this.pdfDoc = pdfDoc;\n            this.rootElement = rootElement;\n        }\n        destroy() {\n        }\n    }\n    class LinkAnnotation extends Annotation {\n        constructor(container, viewport, annotation, pdfDoc, zoom, rootElement) {\n            super(container, viewport, annotation, pdfDoc, zoom, rootElement);\n            this.onLinkClick = (e) => {\n                const destination = e.target.getAttribute('href');\n                if (destination && destination.indexOf('#') === 0) {\n                    this.navigateToDestination(destination);\n                    e.preventDefault();\n                }\n            };\n            this.linkElement = null;\n            this.renderAnnotation();\n            this.bindEvents();\n        }\n        destroy() {\n            this.unbindEvents();\n        }\n        bindEvents() {\n            this.linkElement.addEventListener('click', this.onLinkClick);\n        }\n        unbindEvents() {\n            this.linkElement.removeEventListener('click', this.onLinkClick);\n        }\n        navigateToDestination(destination) {\n            const dest = destination.split('#')[1];\n            this.pdfDoc.getDestination(dest).then(r => {\n                this.pdfDoc.getPageIndex(r[0]).then(i => this.goToPage(i));\n            });\n        }\n        goToPage(pageNumber) {\n            scrollToPage(this.rootElement, pageNumber);\n        }\n        renderAnnotation() {\n            const annotation = this.annotation, viewport = this.viewport, rect = annotation.rect, boundingRect = [\n                [rect[0], rect[1]],\n                [rect[2], rect[3]]\n            ], rawHeight = viewport.rawDims.pageHeight;\n            const left = Math.min(boundingRect[0][0], boundingRect[1][0]) * this.zoom, top = (rawHeight - Math.max(boundingRect[0][1], boundingRect[1][1])) * this.zoom, width = (boundingRect[1][0] - boundingRect[0][0]) * this.zoom, height = (boundingRect[1][1] - boundingRect[0][1]) * this.zoom;\n            const url = annotation.url || (annotation.dest && `#${encodeURI(annotation.dest)}`);\n            const annotationElement = createElement('span', '', {\n                position: 'absolute',\n                left: left + 'pt',\n                top: top + 'pt'\n            });\n            const linkElement = this.linkElement = createElement('a', '', {\n                width: width + 'pt',\n                height: height + 'pt',\n                display: 'inline-block',\n                pointerEvents: 'auto'\n            });\n            linkElement.setAttribute('href', url);\n            annotationElement.append(linkElement);\n            this.container.append(annotationElement);\n        }\n    }\n\n    const MAX_CANVAS_WIDTH_HEIGHT_CHROME = 65535;\n    const MAX_CANVAS_AREA_CHROME_SAFARI = 268435456;\n    const MAX_CANVAS_WIDTH_HEIGHT_FIREFOX = 32767;\n    const MAX_CANVAS_AREA_FIREFOX = 124992400;\n    const MAX_CANVAS_WIDTH_SAFARI = 4194303;\n    const MAX_CANVAS_HEIGHT_SAFARI = 8388607;\n    const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) || (navigator.maxTouchPoints &&\n        navigator.maxTouchPoints > 2 &&\n        /Macintosh/i.test(navigator.userAgent));\n    const isSafari = (userAgent) => {\n        return kendo_common_cmn_chunk_js.d(userAgent).safari ||\n            (kendo_common_cmn_chunk_js.a(userAgent) && kendo_common_cmn_chunk_js.a(userAgent).browser === 'mobilesafari');\n    };\n    const isFirefox = (userAgent) => {\n        const desktopBrowser = kendo_common_cmn_chunk_js.d(userAgent);\n        const mobileOS = kendo_common_cmn_chunk_js.a(userAgent);\n        return (desktopBrowser && desktopBrowser.mozilla) || (mobileOS && mobileOS.browser === 'firefox');\n    };\n    /**\n     * @hidden\n     */\n    const DEFAULT_ZOOM_LEVEL$2 = 1.25;\n    const scale = () => (isIOS() ? devicePixelRatio : devicePixelRatio * 3);\n    const parsePdfFromBase64String = (base64String) => {\n        return atob(base64String.replace(/^(data:application\\/pdf;base64,)/gi, ''));\n    };\n    const getDocumentParameters = (options) => {\n        let params = {\n            verbosity: 0,\n            isEvalSupported: false\n        };\n        if (typeof options.data === 'string') {\n            params.data = parsePdfFromBase64String(options.data);\n        }\n        else if (typeof options.url === 'string') {\n            params.url = options.url;\n        }\n        else if (options.arrayBuffer instanceof ArrayBuffer) {\n            params = options.arrayBuffer;\n        }\n        else if (options.typedArray) {\n            params = options.typedArray;\n        }\n        return params;\n    };\n    /**\n     * @hidden\n     */\n    const removeChildren = (dom) => {\n        while (dom.firstChild) {\n            dom.removeChild(dom.firstChild);\n        }\n    };\n    const appendPage = (dom, page, index) => {\n        if (index === 0) {\n            removeChildren(dom);\n        }\n        dom.appendChild(page);\n    };\n    /**\n     * @hidden\n     */\n    const download = (options, fileName = 'Document', saveOptions = {}, onDownload) => {\n        if (options.pdf) {\n            options.pdf\n                .getData()\n                .then((data) => new Blob([data], { type: 'application/pdf' }))\n                .then((blob) => {\n                if (!onDownload(blob, fileName, saveOptions)) {\n                    kendo_fileSaver_cmn_chunk_js.s(blob, fileName, saveOptions);\n                }\n            })\n                .catch((reason) => {\n                options.error.call(undefined, reason);\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    const loadPDF = (options) => {\n        const params = getDocumentParameters(options);\n        const { dom, zoom, done, error, rootElement } = options;\n        const loadOnDemandPageSize = options.loadOnDemandPageSize || 2;\n        kendo_pdfjs_loader_js.getDocument(params)\n            .promise.then((pdfDoc) => {\n            const pages = [];\n            for (let i = 1; i <= pdfDoc.numPages; i++) {\n                pages.push(pdfDoc.getPage(i));\n            }\n            return { pages, pdfDoc };\n        }).then(({ pages, pdfDoc }) => {\n            Promise.all(pages)\n                .then((all) => all.map((page, i) => {\n                const emptyPage = createEmptyPage(page, zoom, pdfDoc, rootElement);\n                appendPage(dom, emptyPage.pageElement, i);\n                if (options.loadOnDemand) {\n                    // If LOD is enabled, render the first two(default) or X pages initially.\n                    if (i < loadOnDemandPageSize) {\n                        renderPage(page, emptyPage, error);\n                    }\n                }\n                else {\n                    renderPage(page, emptyPage, error);\n                }\n                page._pageInfo.emptyPage = emptyPage;\n                return page;\n            })).then((pdfPages) => {\n                // required by new PDFJS version\n                const sheet = new CSSStyleSheet();\n                sheet.replaceSync(`.hiddenCanvasElement {\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        width: 0;\n                        height: 0;\n                        display: none;\n                    }`);\n                options.dom.ownerDocument.adoptedStyleSheets = [sheet];\n                done({ pdfPages, pdfDoc, zoom });\n            })\n                .catch((reason) => {\n                options.error(reason);\n            });\n        })\n            .catch((reason) => {\n            options.error(reason);\n        });\n    };\n    /**\n     * @hidden\n     */\n    const reloadDocument = (params) => {\n        const { pdfDoc, zoom, dom, done, error, loadOnDemand, rootElement } = params;\n        const pages = [];\n        let currentPageIndex = 0;\n        // Save the index of the current page in view before we reload the document.\n        if (loadOnDemand && rootElement) {\n            currentPageIndex = currentPage(rootElement);\n        }\n        for (let i = 1; i <= pdfDoc.numPages; i++) {\n            pages.push(pdfDoc.getPage(i));\n        }\n        Promise.all(pages)\n            .then((all) => all.map((page, i) => {\n            // Set 'rendered' back to false so that the pages can be re-rendered when scrolling.\n            page._pageInfo.rendered = false;\n            const emptyPage = createEmptyPage(page, zoom, pdfDoc, rootElement);\n            appendPage(dom, emptyPage.pageElement, i);\n            // If on demand is not enabled, proceed as usual.\n            if (!loadOnDemand) {\n                renderPage(page, emptyPage, error);\n            }\n            page._pageInfo.emptyPage = emptyPage;\n            return page;\n        }))\n            .then((pdfPages) => {\n            /* If on demand is enabled, render the page that was previously in view.\n               Then scroll to that page. */\n            if (loadOnDemand) {\n                const page = pdfPages[currentPageIndex];\n                renderPage(page, page._pageInfo.emptyPage, error);\n                scrollToPage(rootElement, currentPageIndex);\n            }\n            done(pdfPages);\n        })\n            .catch(error);\n    };\n    /**\n     * @hidden\n     */\n    const print = (pages, done, error) => {\n        const dom = document.createElement('div');\n        const allDone = pages.map(() => false);\n        const scaleNum = scale();\n        pages.forEach((page, index) => {\n            const viewport = renderCanvas(page, (el) => {\n                dom.appendChild(el);\n                allDone[index] = true;\n                if (allDone.every(Boolean)) {\n                    openPrintDialog(dom, Math.floor(viewport.width / scaleNum), Math.floor(viewport.height / scaleNum), done, error);\n                }\n            }, error);\n        });\n    };\n    const openPrintDialog = (dom, width, height, done, onError) => {\n        const printDialog = window.open('', '', 'innerWidth=' +\n            width +\n            ',innerHeight=' +\n            height +\n            'location=no,titlebar=no,toolbar=no');\n        if (!printDialog || !printDialog.document) {\n            onError();\n            return;\n        }\n        if (printDialog) {\n            printDialog.document.body.style.margin = '0';\n            printDialog.document.body.appendChild(dom);\n            printDialog.focus();\n            setTimeout(() => {\n                printDialog.print();\n                done();\n            });\n            const onAfterPrint = () => {\n                printDialog.removeEventListener('afterprint', onAfterPrint);\n                printDialog.close();\n            };\n            printDialog.addEventListener('afterprint', onAfterPrint);\n        }\n    };\n    const createEmptyPage = (page, zoom, pdfDoc, rootElement) => {\n        const { canvasContext, viewport, pageElement, styles } = createCanvas(page, zoom, 'k-page');\n        return {\n            canvasContext,\n            viewport,\n            pageElement,\n            styles,\n            zoom,\n            pdfDoc,\n            rootElement\n        };\n    };\n    const renderCanvas = (page, done, error) => {\n        const { canvasContext, viewport, scaleNum, canvas, pageElement } = createCanvas(page);\n        page.render({ canvasContext, viewport })\n            .promise.then(() => {\n            const printContent = new Image(Math.floor((viewport.width / scaleNum)), Math.floor((viewport.height / scaleNum)));\n            printContent.src = canvas.toDataURL();\n            const onload = () => {\n                printContent.removeEventListener('load', onload);\n                done(pageElement);\n            };\n            printContent.addEventListener('load', onload);\n        })\n            .catch(error);\n        return viewport;\n    };\n    const createElement = function (name, className, styles) {\n        const element = document.createElement(name);\n        if (className) {\n            element.className = className;\n        }\n        Object.keys(styles).forEach((key) => (element.style[key] = styles[key]));\n        return element;\n    };\n    const transforms = {\n        '0': '',\n        '90': 'rotate(90deg) translateY(-100%)',\n        '180': 'rotate(180deg) translate(-100%, -100%)',\n        '270': 'rotate(270deg) translateX(-100%)'\n    };\n    const renderPage = (page, emptyPage, error) => {\n        const { canvasContext, viewport, pageElement, styles, zoom, pdfDoc, rootElement } = emptyPage;\n        page._pageInfo.renderInProgress = true;\n        page.render({ canvasContext, viewport })\n            .promise.then(() => {\n            page.getTextContent().then((textContent) => {\n                const textLayer = createElement('div', 'k-text-layer', styles);\n                new kendo_pdfjs_loader_js.TextLayer({\n                    textContentSource: textContent,\n                    container: textLayer,\n                    viewport: viewport\n                }).render().then(() => {\n                    textLayer.style.width = textLayer.style.width.replace(/px/g, 'pt');\n                    textLayer.style.height = textLayer.style.height.replace(/px/g, 'pt');\n                    const rotation = textLayer.getAttribute('data-main-rotation') || '0';\n                    if (transforms[rotation]) {\n                        textLayer.style.transform = transforms[rotation];\n                        textLayer.style.transformOrigin = 'top left';\n                    }\n                    textLayer.querySelectorAll('span').forEach((el) => {\n                        if (el.style.fontSize) {\n                            el.style.fontSize = el.style.fontSize.replace(/px/g, 'pt');\n                        }\n                    });\n                    pageElement.prepend(textLayer); // Use prepend to ensure the element is always inserted before the annotation layer.\n                }).catch(error);\n            });\n            page.getAnnotations({ intent: 'display' }).then((annotations) => {\n                const annotationLayer = createElement('div', 'k-annotations-layer', {\n                    position: 'absolute',\n                    top: '0',\n                    left: '0',\n                    overflow: 'hidden',\n                    height: styles.height,\n                    width: styles.width,\n                    pointerEvents: 'none'\n                });\n                pageElement.appendChild(annotationLayer);\n                for (const annotation of annotations) {\n                    switch (annotation.subtype) {\n                        case 'Link':\n                            new LinkAnnotation(annotationLayer, viewport, annotation, pdfDoc, zoom, rootElement);\n                            break;\n                        default:\n                            null;\n                    }\n                }\n            });\n        })\n            .then(() => {\n            page._pageInfo.rendered = true;\n            page._pageInfo.renderInProgress = false;\n        })\n            .catch(error);\n        return pageElement;\n    };\n    const searchMatchScrollLeftOffset = 0;\n    const searchMatchScrollTopOffset = -64;\n    const scrollToSearchMatch = (matchElement, ref) => {\n        if (!matchElement) {\n            return;\n        }\n        const closestCharElement = matchElement.closest('.k-text-char');\n        const closestTextElement = closestCharElement\n            ? closestCharElement.closest('span[role=\"presentation\"]')\n            : null;\n        if (!closestTextElement) {\n            return;\n        }\n        const closestPageElement = closestTextElement.closest('.k-page');\n        if (!closestPageElement) {\n            return;\n        }\n        const scrollLeft = closestPageElement.offsetLeft +\n            -1 * ref.scroller.element.offsetLeft +\n            closestTextElement.offsetLeft +\n            searchMatchScrollLeftOffset;\n        const scrollTop = closestPageElement.offsetTop +\n            -1 * ref.scroller.element.offsetTop +\n            closestTextElement.offsetTop +\n            searchMatchScrollTopOffset;\n        ref.scroller.scrollTo(scrollLeft, scrollTop, { trackScrollEvent: false });\n    };\n    /**\n     * @hidden\n     */\n    const goToNextSearchMatch = (ref) => {\n        ref.search.markNextMatch();\n        const matchElement = ref.search.getActiveMatchElement();\n        scrollToSearchMatch(matchElement, ref);\n    };\n    /**\n     * @hidden\n     */\n    const goToPreviousSearchMatch = (ref) => {\n        ref.search.markPreviousMatch();\n        const matchElement = ref.search.getActiveMatchElement();\n        scrollToSearchMatch(matchElement, ref);\n    };\n    /**\n     * @hidden\n     */\n    const calculateZoomLevel = (zoomLevel, zoomLevelType, currentZoom, dom) => {\n        const documentContainer = dom.closest('.k-pdf-viewer-canvas');\n        const page = dom.querySelector('.k-page');\n        const pageSize = { width: page.offsetWidth, height: page.offsetHeight };\n        let calculatedZoomLevel = zoomLevel;\n        if (zoomLevelType === 'ActualWidth') {\n            calculatedZoomLevel = 1;\n        }\n        else if (zoomLevelType === 'FitToWidth') {\n            calculatedZoomLevel =\n                documentContainer.offsetWidth / (pageSize.width / currentZoom);\n        }\n        else if (zoomLevelType === 'FitToPage') {\n            calculatedZoomLevel =\n                documentContainer.offsetHeight / (pageSize.height / currentZoom);\n        }\n        return calculatedZoomLevel;\n    };\n    /**\n     * Scrolls the PDFViewer document to the passed page number.\n     *\n     * @param rootElement The root HTML element of the PDFViewer component.\n     * @param pageNumber The page number.\n     */\n    const scrollToPage = (rootElement, pageNumber) => {\n        const pages = rootElement.querySelectorAll('.k-page');\n        const page = pages[0];\n        if (page instanceof HTMLDivElement) {\n            const top = (page.offsetHeight + page.offsetTop) *\n                Math.max(0, Math.min(pageNumber, pages.length - 1));\n            const scrollElement = page.closest('.k-pdf-viewer-canvas');\n            if (scrollElement) {\n                scrollElement.scrollTo({ top, behavior: 'auto' });\n            }\n        }\n    };\n    /**\n     * A function which gives you the page number of the document according to the scroll position.\n     *\n     * @param rootElement The root HTML element of the PDFViewer component.\n     * @returns The page number.\n     */\n    const currentPage = (rootElement) => {\n        const scrollElement = rootElement.querySelector('.k-pdf-viewer-canvas');\n        const page = rootElement.querySelector('.k-page');\n        return scrollElement && page\n            ? Math.floor(Math.round(scrollElement.scrollTop) /\n                (page.offsetHeight + page.offsetTop) +\n                0.01)\n            : 0;\n    };\n    /**\n     * @hidden\n     *\n     * related to https://github.com/telerik/kendo-pdfviewer-common/issues/6\n     * the bigger the canvas size, the worse the performance;\n     * if initial size after scaling is greater than browser limits,\n     * we are limiting it to the limits, then halving it for performance.\n     */\n    const adjustCanvasSize = (targetWidth, targetHeight) => {\n        const { maxWidth, maxHeight, maxArea } = isFirefox(navigator.userAgent) ?\n            { maxWidth: MAX_CANVAS_WIDTH_HEIGHT_FIREFOX, maxHeight: MAX_CANVAS_WIDTH_HEIGHT_FIREFOX, maxArea: MAX_CANVAS_AREA_FIREFOX } :\n            isSafari(navigator.userAgent) ?\n                { maxWidth: MAX_CANVAS_WIDTH_SAFARI, maxHeight: MAX_CANVAS_HEIGHT_SAFARI, maxArea: MAX_CANVAS_AREA_CHROME_SAFARI } :\n                {\n                    maxWidth: MAX_CANVAS_WIDTH_HEIGHT_CHROME,\n                    maxHeight: MAX_CANVAS_WIDTH_HEIGHT_CHROME,\n                    maxArea: MAX_CANVAS_AREA_CHROME_SAFARI\n                };\n        let adjustedWidth = targetWidth;\n        let adjustedHeight = targetHeight;\n        const ratio = targetWidth / targetHeight;\n        if (targetWidth > maxWidth) {\n            adjustedWidth = maxWidth;\n            const deltaWidth = targetWidth - maxWidth;\n            const deltaHeight = deltaWidth / ratio;\n            adjustedHeight = targetHeight - deltaHeight;\n        }\n        if (adjustedHeight > maxHeight) {\n            const deltaHeight = adjustedHeight - maxHeight;\n            const deltaWidth = deltaHeight * ratio;\n            adjustedHeight = maxHeight;\n            adjustedWidth -= deltaWidth;\n        }\n        const adjustedArea = adjustedWidth * adjustedHeight;\n        if (adjustedArea > maxArea) {\n            const areaRatio = Math.sqrt(maxArea / adjustedArea);\n            adjustedWidth *= areaRatio;\n            adjustedHeight *= areaRatio;\n        }\n        const adjustRatio = adjustedWidth / targetWidth;\n        return {\n            adjustedWidth: adjustedWidth !== targetWidth ? Math.floor(adjustedWidth / 2) : targetWidth,\n            adjustedHeight: adjustedHeight !== targetHeight ? Math.floor(adjustedHeight / 2) : targetHeight,\n            adjustRatio: adjustRatio !== 1 ? adjustRatio / 2 : 1\n        };\n    };\n    const createCanvas = (page, zoom = 1, cssClass = '') => {\n        const scaleNum = scale();\n        const viewport = page.getViewport({ scale: scaleNum });\n        const { adjustedWidth, adjustedHeight, adjustRatio } = adjustCanvasSize(viewport.width, viewport.height);\n        const styles = {\n            width: Math.floor(viewport.width / scaleNum) * zoom + 'pt',\n            height: Math.floor(viewport.height / scaleNum) * zoom + 'pt'\n        };\n        const pageElement = createElement('div', cssClass, styles);\n        const canvas = createElement('canvas', '', {\n            width: '100%',\n            height: '100%'\n        });\n        canvas.height = adjustedHeight;\n        canvas.width = adjustedWidth;\n        const canvasContext = canvas.getContext('2d');\n        pageElement.appendChild(canvas);\n        const adjustedScale = adjustRatio * scaleNum;\n        viewport.width = adjustedWidth;\n        viewport.height = adjustedHeight;\n        viewport.scale = adjustedScale;\n        return {\n            canvasContext,\n            viewport,\n            scaleNum,\n            canvas,\n            pageElement,\n            styles\n        };\n    };\n\n    const addClass = (className, element) => {\n        element.classList.add(className);\n    };\n    const removeClass = (className, element) => {\n        element.classList.remove(className);\n    };\n    const hasClass = (className, element) => {\n        if (element instanceof HTMLElement) {\n            return element.classList.contains(className);\n        }\n    };\n\n    const clamp = (value, min, max) => Math.min(max, Math.max(min, value));\n\n    /* Copyright 2012 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // /* globals process */\n    // NW.js / Electron is a browser context, but copies some Node.js objects; see\n    // http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/access-nodejs-and-nwjs-api-in-browser-context\n    // https://www.electronjs.org/docs/api/processprocessversionselectron-readonly\n    // https://www.electronjs.org/docs/api/processprocesstype-readonly\n    // const isNodeJS =\n    //     (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n    //     typeof process === \"object\" &&\n    //     process + \"\" === \"[object process]\" &&\n    //     !process.versions.nw &&\n    //     !(process.versions.electron && process.type && process.type !== \"browser\");\n    // const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n    // const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n    // const MAX_IMAGE_SIZE_TO_CACHE = 10e6; // Ten megabytes.\n    // Represent the percentage of the height of a single-line field over\n    // the font size. Acrobat seems to use this value.\n    const LINE_FACTOR = 1.35;\n    const LINE_DESCENT_FACTOR = 0.35;\n    const BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n    /**\n     * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n     * how these flags are being used:\n     *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n     *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n     *  - SAVE is used, on the worker-thread, when saving modified annotations.\n     *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n     *    annotations are rendered onto the canvas (i.e. by being included in the\n     *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n     *    and their `annotationMode`-option.\n     *  - IS_EDITING is used when editing is active in the viewer.\n     *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n     *    `OperatorList`-constructor (on the worker-thread).\n     */\n    // const RenderingIntentFlag = {\n    //     ANY: 0x01,\n    //     DISPLAY: 0x02,\n    //     PRINT: 0x04,\n    //     SAVE: 0x08,\n    //     ANNOTATIONS_FORMS: 0x10,\n    //     ANNOTATIONS_STORAGE: 0x20,\n    //     ANNOTATIONS_DISABLE: 0x40,\n    //     IS_EDITING: 0x80,\n    //     OPLIST: 0x100\n    // };\n    const AnnotationMode = {\n        DISABLE: 0,\n        ENABLE: 1,\n        ENABLE_FORMS: 2,\n        ENABLE_STORAGE: 3\n    };\n    const AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n    const AnnotationEditorType = {\n        DISABLE: -1,\n        NONE: 0,\n        FREETEXT: 3,\n        HIGHLIGHT: 9,\n        STAMP: 13,\n        INK: 15\n    };\n    const AnnotationEditorParamsType = {\n        RESIZE: 1,\n        CREATE: 2,\n        FREETEXT_SIZE: 11,\n        FREETEXT_COLOR: 12,\n        FREETEXT_OPACITY: 13,\n        INK_COLOR: 21,\n        INK_THICKNESS: 22,\n        INK_OPACITY: 23,\n        HIGHLIGHT_COLOR: 31,\n        HIGHLIGHT_DEFAULT_COLOR: 32,\n        HIGHLIGHT_THICKNESS: 33,\n        HIGHLIGHT_FREE: 34,\n        HIGHLIGHT_SHOW_ALL: 35\n    };\n    // Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\n    // const PermissionFlag = {\n    //     PRINT: 0x04,\n    //     MODIFY_CONTENTS: 0x08,\n    //     COPY: 0x10,\n    //     MODIFY_ANNOTATIONS: 0x20,\n    //     FILL_INTERACTIVE_FORMS: 0x100,\n    //     COPY_FOR_ACCESSIBILITY: 0x200,\n    //     ASSEMBLE: 0x400,\n    //     PRINT_HIGH_QUALITY: 0x800\n    // };\n    // const TextRenderingMode = {\n    //     FILL: 0,\n    //     STROKE: 1,\n    //     FILL_STROKE: 2,\n    //     INVISIBLE: 3,\n    //     FILL_ADD_TO_PATH: 4,\n    //     STROKE_ADD_TO_PATH: 5,\n    //     FILL_STROKE_ADD_TO_PATH: 6,\n    //     ADD_TO_PATH: 7,\n    //     FILL_STROKE_MASK: 3,\n    //     ADD_TO_PATH_FLAG: 4\n    // };\n    // const ImageKind = {\n    //     GRAYSCALE_1BPP: 1,\n    //     RGB_24BPP: 2,\n    //     RGBA_32BPP: 3\n    // };\n    const AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n    };\n    const AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n    };\n    const AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n    };\n    const AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n    };\n    const AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n    };\n    const AnnotationActionEventType = {\n        E: \"Mouse Enter\",\n        X: \"Mouse Exit\",\n        D: \"Mouse Down\",\n        U: \"Mouse Up\",\n        Fo: \"Focus\",\n        Bl: \"Blur\",\n        PO: \"PageOpen\",\n        PC: \"PageClose\",\n        PV: \"PageVisible\",\n        PI: \"PageInvisible\",\n        K: \"Keystroke\",\n        F: \"Format\",\n        V: \"Validate\",\n        C: \"Calculate\"\n    };\n    // const DocumentActionEventType = {\n    //     WC: \"WillClose\",\n    //     WS: \"WillSave\",\n    //     DS: \"DidSave\",\n    //     WP: \"WillPrint\",\n    //     DP: \"DidPrint\"\n    // };\n    // const PageActionEventType = {\n    //     O: \"PageOpen\",\n    //     C: \"PageClose\"\n    // };\n    // const VerbosityLevel = {\n    //     ERRORS: 0,\n    //     WARNINGS: 1,\n    //     INFOS: 5\n    // };\n    // const CMapCompressionType = {\n    //     NONE: 0,\n    //     BINARY: 1\n    // };\n    // // All the possible operations for an operator list.\n    // const OPS = {\n    //     // Intentionally start from 1 so it is easy to spot bad operators that will be\n    //     // 0's.\n    //     // PLEASE NOTE: We purposely keep any removed operators commented out, since\n    //     //              re-numbering the list would risk breaking third-party users.\n    //     dependency: 1,\n    //     setLineWidth: 2,\n    //     setLineCap: 3,\n    //     setLineJoin: 4,\n    //     setMiterLimit: 5,\n    //     setDash: 6,\n    //     setRenderingIntent: 7,\n    //     setFlatness: 8,\n    //     setGState: 9,\n    //     save: 10,\n    //     restore: 11,\n    //     transform: 12,\n    //     moveTo: 13,\n    //     lineTo: 14,\n    //     curveTo: 15,\n    //     curveTo2: 16,\n    //     curveTo3: 17,\n    //     closePath: 18,\n    //     rectangle: 19,\n    //     stroke: 20,\n    //     closeStroke: 21,\n    //     fill: 22,\n    //     eoFill: 23,\n    //     fillStroke: 24,\n    //     eoFillStroke: 25,\n    //     closeFillStroke: 26,\n    //     closeEOFillStroke: 27,\n    //     endPath: 28,\n    //     clip: 29,\n    //     eoClip: 30,\n    //     beginText: 31,\n    //     endText: 32,\n    //     setCharSpacing: 33,\n    //     setWordSpacing: 34,\n    //     setHScale: 35,\n    //     setLeading: 36,\n    //     setFont: 37,\n    //     setTextRenderingMode: 38,\n    //     setTextRise: 39,\n    //     moveText: 40,\n    //     setLeadingMoveText: 41,\n    //     setTextMatrix: 42,\n    //     nextLine: 43,\n    //     showText: 44,\n    //     showSpacedText: 45,\n    //     nextLineShowText: 46,\n    //     nextLineSetSpacingShowText: 47,\n    //     setCharWidth: 48,\n    //     setCharWidthAndBounds: 49,\n    //     setStrokeColorSpace: 50,\n    //     setFillColorSpace: 51,\n    //     setStrokeColor: 52,\n    //     setStrokeColorN: 53,\n    //     setFillColor: 54,\n    //     setFillColorN: 55,\n    //     setStrokeGray: 56,\n    //     setFillGray: 57,\n    //     setStrokeRGBColor: 58,\n    //     setFillRGBColor: 59,\n    //     setStrokeCMYKColor: 60,\n    //     setFillCMYKColor: 61,\n    //     shadingFill: 62,\n    //     beginInlineImage: 63,\n    //     beginImageData: 64,\n    //     endInlineImage: 65,\n    //     paintXObject: 66,\n    //     markPoint: 67,\n    //     markPointProps: 68,\n    //     beginMarkedContent: 69,\n    //     beginMarkedContentProps: 70,\n    //     endMarkedContent: 71,\n    //     beginCompat: 72,\n    //     endCompat: 73,\n    //     paintFormXObjectBegin: 74,\n    //     paintFormXObjectEnd: 75,\n    //     beginGroup: 76,\n    //     endGroup: 77,\n    //     // beginAnnotations: 78,\n    //     // endAnnotations: 79,\n    //     beginAnnotation: 80,\n    //     endAnnotation: 81,\n    //     // paintJpegXObject: 82,\n    //     paintImageMaskXObject: 83,\n    //     paintImageMaskXObjectGroup: 84,\n    //     paintImageXObject: 85,\n    //     paintInlineImageXObject: 86,\n    //     paintInlineImageXObjectGroup: 87,\n    //     paintImageXObjectRepeat: 88,\n    //     paintImageMaskXObjectRepeat: 89,\n    //     paintSolidColorImageMask: 90,\n    //     constructPath: 91,\n    //     setStrokeTransparent: 92,\n    //     setFillTransparent: 93\n    // };\n    // const PasswordResponses = {\n    //     NEED_PASSWORD: 1,\n    //     INCORRECT_PASSWORD: 2\n    // };\n    // let verbosity = VerbosityLevel.WARNINGS;\n    // function setVerbosityLevel(level) {\n    //     if (Number.isInteger(level)) {\n    //         verbosity = level;\n    //     }\n    // }\n    // function getVerbosityLevel() {\n    //     return verbosity;\n    // }\n    // // A notice for devs. These are good for things that are helpful to devs, such\n    // // as warning that Workers were disabled, which is important to devs but not\n    // // end users.\n    // function info(msg) {\n    //     if (verbosity >= VerbosityLevel.INFOS) {\n    //         console.log(`Info: ${msg}`);\n    //     }\n    // }\n    // // Non-fatal warnings.\n    // function warn(msg) {\n    //     if (verbosity >= VerbosityLevel.WARNINGS) {\n    //         console.log(`Warning: ${msg}`);\n    //     }\n    // }\n    // function unreachable(msg) {\n    //     throw new Error(msg);\n    // }\n    // function assert(cond, msg) {\n    //     if (!cond) {\n    //         unreachable(msg);\n    //     }\n    // }\n    // // Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\n    // function _isValidProtocol(url) {\n    //     if (!url || (url && !url.protocol)) {\n    //         return false;\n    //     }\n    //     switch (url.protocol) {\n    //         case \"http:\":\n    //         case \"https:\":\n    //         case \"ftp:\":\n    //         case \"mailto:\":\n    //         case \"tel:\":\n    //             return true;\n    //         default:\n    //             return false;\n    //     }\n    // }\n    // /**\n    //  * Attempts to create a valid absolute URL.\n    //  *\n    //  * @param {URL|string} url - An absolute, or relative, URL.\n    //  * @param {URL|string} [baseUrl] - An absolute URL.\n    //  * @param {Object} [options]\n    //  * @returns Either a valid {URL}, or `null` otherwise.\n    //  */\n    // function createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n    //     if (!url) {\n    //         return null;\n    //     }\n    //     try {\n    //         if (options && typeof url === \"string\") {\n    //             // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n    //             if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n    //                 const dots = url.match(/\\./g);\n    //                 // Avoid accidentally matching a *relative* URL pointing to a file named\n    //                 // e.g. \"www.pdf\" or similar.\n    //                 if (dots && dots.length >= 2) {\n    //                     url = `http://${url}`;\n    //                 }\n    //             }\n    //             // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n    //             // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n    //             if (options.tryConvertEncoding) {\n    //                 try {\n    //                     url = stringToUTF8String(url);\n    //                 } catch (e) { }\n    //             }\n    //         }\n    //         const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    //         if (_isValidProtocol(absoluteUrl)) {\n    //             return absoluteUrl;\n    //         }\n    //     } catch (e) {\n    //         /* `new URL()` will throw on incorrect data. */\n    //     }\n    //     return null;\n    // }\n    function shadow(obj, prop, value, nonSerializable = false) {\n        // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n        //     assert(\n        //         prop in obj,\n        //         `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n        //     );\n        // }\n        Object.defineProperty(obj, prop, {\n            value,\n            enumerable: !nonSerializable,\n            configurable: true,\n            writable: false\n        });\n        return value;\n    }\n    // /**\n    //  * @type {any}\n    //  */\n    // const BaseException = (function BaseExceptionClosure() {\n    //     // eslint-disable-next-line no-shadow\n    //     function BaseException(message, name) {\n    //         if (this.constructor === BaseException) {\n    //             unreachable(\"Cannot initialize BaseException.\");\n    //         }\n    //         this.message = message;\n    //         this.name = name;\n    //     }\n    //     BaseException.prototype = new Error();\n    //     BaseException.constructor = BaseException;\n    //     return BaseException;\n    // })();\n    // class PasswordException extends BaseException {\n    //     constructor(msg, code) {\n    //         super(msg, \"PasswordException\");\n    //         this.code = code;\n    //     }\n    // }\n    // class UnknownErrorException extends BaseException {\n    //     constructor(msg, details) {\n    //         super(msg, \"UnknownErrorException\");\n    //         this.details = details;\n    //     }\n    // }\n    // class InvalidPDFException extends BaseException {\n    //     constructor(msg) {\n    //         super(msg, \"InvalidPDFException\");\n    //     }\n    // }\n    // class MissingPDFException extends BaseException {\n    //     constructor(msg) {\n    //         super(msg, \"MissingPDFException\");\n    //     }\n    // }\n    // class UnexpectedResponseException extends BaseException {\n    //     constructor(msg, status) {\n    //         super(msg, \"UnexpectedResponseException\");\n    //         this.status = status;\n    //     }\n    // }\n    // /**\n    //  * Error caused during parsing PDF data.\n    //  */\n    // class FormatError extends BaseException {\n    //     constructor(msg) {\n    //         super(msg, \"FormatError\");\n    //     }\n    // }\n    // /**\n    //  * Error used to indicate task cancellation.\n    //  */\n    // class AbortException extends BaseException {\n    //     constructor(msg) {\n    //         super(msg, \"AbortException\");\n    //     }\n    // }\n    function bytesToString(bytes) {\n        if (typeof bytes !== \"object\" || (bytes && bytes.length === undefined)) {\n            // unreachable(\"Invalid argument for bytesToString\");\n        }\n        const length = bytes.length;\n        const MAX_ARGUMENT_COUNT = 8192;\n        if (length < MAX_ARGUMENT_COUNT) {\n            return String.fromCharCode.apply(null, bytes);\n        }\n        const strBuf = [];\n        for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n            const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n            const chunk = bytes.subarray(i, chunkEnd);\n            strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n        return strBuf.join(\"\");\n    }\n    // function stringToBytes(str) {\n    //     if (typeof str !== \"string\") {\n    //         unreachable(\"Invalid argument for stringToBytes\");\n    //     }\n    //     const length = str.length;\n    //     const bytes = new Uint8Array(length);\n    //     for (let i = 0; i < length; ++i) {\n    //         bytes[i] = str.charCodeAt(i) & 0xff;\n    //     }\n    //     return bytes;\n    // }\n    // function string32(value) {\n    //     if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    //         assert(\n    //             typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n    //             `string32: Unexpected input \"${value}\".`\n    //         );\n    //     }\n    //     return String.fromCharCode(\n    //         (value >> 24) & 0xff,\n    //         (value >> 16) & 0xff,\n    //         (value >> 8) & 0xff,\n    //         value & 0xff\n    //     );\n    // }\n    // function objectSize(obj) {\n    //     return Object.keys(obj).length;\n    // }\n    // // Ensure that the returned Object has a `null` prototype; hence why\n    // // `Object.fromEntries(...)` is not used.\n    function objectFromMap(map) {\n        const obj = Object.create(null);\n        for (const [key, value] of map) {\n            obj[key] = value;\n        }\n        return obj;\n    }\n    // // Checks the endianness of the platform.\n    // function isLittleEndian() {\n    //     const buffer8 = new Uint8Array(4);\n    //     buffer8[0] = 1;\n    //     const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n    //     return view32[0] === 1;\n    // }\n    // // Checks if it's possible to eval JS expressions.\n    // function isEvalSupported() {\n    //     try {\n    //         new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    //         return true;\n    //     } catch (e) {\n    //         return false;\n    //     }\n    // }\n    class FeatureTest {\n        // static get isLittleEndian() {\n        //     return shadow(this, \"isLittleEndian\", isLittleEndian());\n        // }\n        // static get isEvalSupported() {\n        //     return shadow(this, \"isEvalSupported\", isEvalSupported());\n        // }\n        // static get isOffscreenCanvasSupported() {\n        //     return shadow(\n        //         this,\n        //         \"isOffscreenCanvasSupported\",\n        //         typeof OffscreenCanvas !== \"undefined\"\n        //     );\n        // }\n        // static get platform() {\n        //     if (\n        //         (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        //         (typeof navigator !== \"undefined\" &&\n        //             navigator && typeof navigator.platform === \"string\")\n        //     ) {\n        //         return shadow(this, \"platform\", {\n        //             isMac: navigator.platform.includes(\"Mac\"),\n        //         });\n        //     }\n        //     return shadow(this, \"platform\", { isMac: false });\n        // }\n        static get isCSSRoundSupported() {\n            return shadow(this, \"isCSSRoundSupported\", globalThis && globalThis.CSS && globalThis.CSS.supports &&\n                globalThis.CSS.supports(\"width: round(1.5px, 1px)\"));\n        }\n    }\n    const hexNumbers = Array.from(Array(256).keys(), n => n.toString(16).padStart(2, \"0\"));\n    class Util {\n        static makeHexColor(r, g, b) {\n            return `${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n        }\n        //     // Apply a scaling matrix to some min/max values.\n        //     // If a scaling factor is negative then min and max must be\n        //     // swapped.\n        //     static scaleMinMax(transform, minMax) {\n        //         let temp;\n        //         if (transform[0]) {\n        //             if (transform[0] < 0) {\n        //                 temp = minMax[0];\n        //                 minMax[0] = minMax[2];\n        //                 minMax[2] = temp;\n        //             }\n        //             minMax[0] *= transform[0];\n        //             minMax[2] *= transform[0];\n        //             if (transform[3] < 0) {\n        //                 temp = minMax[1];\n        //                 minMax[1] = minMax[3];\n        //                 minMax[3] = temp;\n        //             }\n        //             minMax[1] *= transform[3];\n        //             minMax[3] *= transform[3];\n        //         } else {\n        //             temp = minMax[0];\n        //             minMax[0] = minMax[1];\n        //             minMax[1] = temp;\n        //             temp = minMax[2];\n        //             minMax[2] = minMax[3];\n        //             minMax[3] = temp;\n        //             if (transform[1] < 0) {\n        //                 temp = minMax[1];\n        //                 minMax[1] = minMax[3];\n        //                 minMax[3] = temp;\n        //             }\n        //             minMax[1] *= transform[1];\n        //             minMax[3] *= transform[1];\n        //             if (transform[2] < 0) {\n        //                 temp = minMax[0];\n        //                 minMax[0] = minMax[2];\n        //                 minMax[2] = temp;\n        //             }\n        //             minMax[0] *= transform[2];\n        //             minMax[2] *= transform[2];\n        //         }\n        //         minMax[0] += transform[4];\n        //         minMax[1] += transform[5];\n        //         minMax[2] += transform[4];\n        //         minMax[3] += transform[5];\n        //     }\n        //     // Concatenates two transformation matrices together and returns the result.\n        //     static transform(m1, m2) {\n        //         return [\n        //             m1[0] * m2[0] + m1[2] * m2[1],\n        //             m1[1] * m2[0] + m1[3] * m2[1],\n        //             m1[0] * m2[2] + m1[2] * m2[3],\n        //             m1[1] * m2[2] + m1[3] * m2[3],\n        //             m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n        //             m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n        //         ];\n        //     }\n        //     // For 2d affine transforms\n        //     static applyTransform(p, m) {\n        //         const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n        //         const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n        //         return [xt, yt];\n        //     }\n        //     static applyInverseTransform(p, m) {\n        //         const d = m[0] * m[3] - m[1] * m[2];\n        //         const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n        //         const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n        //         return [xt, yt];\n        //     }\n        //     // Applies the transform to the rectangle and finds the minimum axially\n        //     // aligned bounding box.\n        //     static getAxialAlignedBoundingBox(r, m) {\n        //         const p1 = this.applyTransform(r, m);\n        //         const p2 = this.applyTransform(r.slice(2, 4), m);\n        //         const p3 = this.applyTransform([r[0], r[3]], m);\n        //         const p4 = this.applyTransform([r[2], r[1]], m);\n        //         return [\n        //             Math.min(p1[0], p2[0], p3[0], p4[0]),\n        //             Math.min(p1[1], p2[1], p3[1], p4[1]),\n        //             Math.max(p1[0], p2[0], p3[0], p4[0]),\n        //             Math.max(p1[1], p2[1], p3[1], p4[1]),\n        //         ];\n        //     }\n        //     static inverseTransform(m) {\n        //         const d = m[0] * m[3] - m[1] * m[2];\n        //         return [\n        //             m[3] / d,\n        //             -m[1] / d,\n        //             -m[2] / d,\n        //             m[0] / d,\n        //             (m[2] * m[5] - m[4] * m[3]) / d,\n        //             (m[4] * m[1] - m[5] * m[0]) / d,\n        //         ];\n        //     }\n        //     // This calculation uses Singular Value Decomposition.\n        //     // The SVD can be represented with formula A = USV. We are interested in the\n        //     // matrix S here because it represents the scale values.\n        //     static singularValueDecompose2dScale(m) {\n        //         const transpose = [m[0], m[2], m[1], m[3]];\n        //         // Multiply matrix m with its transpose.\n        //         const a = m[0] * transpose[0] + m[1] * transpose[2];\n        //         const b = m[0] * transpose[1] + m[1] * transpose[3];\n        //         const c = m[2] * transpose[0] + m[3] * transpose[2];\n        //         const d = m[2] * transpose[1] + m[3] * transpose[3];\n        //         // Solve the second degree polynomial to get roots.\n        //         const first = (a + d) / 2;\n        //         const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n        //         const sx = first + second || 1;\n        //         const sy = first - second || 1;\n        //         // Scale values are the square roots of the eigenvalues.\n        //         return [Math.sqrt(sx), Math.sqrt(sy)];\n        //     }\n        //     // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n        //     // For coordinate systems whose origin lies in the bottom-left, this\n        //     // means normalization to (BL,TR) ordering. For systems with origin in the\n        //     // top-left, this means (TL,BR) ordering.\n        static normalizeRect(rect) {\n            const r = rect.slice(0); // clone rect\n            if (rect[0] > rect[2]) {\n                r[0] = rect[2];\n                r[2] = rect[0];\n            }\n            if (rect[1] > rect[3]) {\n                r[1] = rect[3];\n                r[3] = rect[1];\n            }\n            return r;\n        }\n    }\n    // const PDFStringTranslateTable = [\n    //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n    //     0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    //     0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n    //     0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n    //     0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n    //     0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n    // ];\n    // function stringToPDFString(str) {\n    //     // See section 7.9.2.2 Text String Type.\n    //     // The string can contain some language codes bracketed with 0x0b,\n    //     // so we must remove them.\n    //     if (str[0] >= \"\\xEF\") {\n    //         let encoding;\n    //         if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    //             encoding = \"utf-16be\";\n    //             if (str.length % 2 === 1) {\n    //                 str = str.slice(0, -1);\n    //             }\n    //         } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    //             encoding = \"utf-16le\";\n    //             if (str.length % 2 === 1) {\n    //                 str = str.slice(0, -1);\n    //             }\n    //         } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n    //             encoding = \"utf-8\";\n    //         }\n    //         if (encoding) {\n    //             try {\n    //                 const decoder = new TextDecoder(encoding, { fatal: true });\n    //                 const buffer = stringToBytes(str);\n    //                 const decoded = decoder.decode(buffer);\n    //                 if (!decoded.includes(\"\\x1b\")) {\n    //                     return decoded;\n    //                 }\n    //                 return decoded.replaceAll(/\\x1b[^\\x1b]*(?:\\x1b|$)/g, \"\");\n    //             } catch (ex) {\n    //                 warn(`stringToPDFString: \"${ex}\".`);\n    //             }\n    //         }\n    //     }\n    //     // ISO Latin 1\n    //     const strBuf = [];\n    //     for (let i = 0, ii = str.length; i < ii; i++) {\n    //         const charCode = str.charCodeAt(i);\n    //         if (charCode === 0x1b) {\n    //             // eslint-disable-next-line no-empty\n    //             while (++i < ii && str.charCodeAt(i) !== 0x1b) { }\n    //             continue;\n    //         }\n    //         const code = PDFStringTranslateTable[charCode];\n    //         strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    //     }\n    //     return strBuf.join(\"\");\n    // }\n    // function stringToUTF8String(str) {\n    //     return decodeURIComponent(escape(str));\n    // }\n    // function utf8StringToString(str) {\n    //     return unescape(encodeURIComponent(str));\n    // }\n    // function isArrayEqual(arr1, arr2) {\n    //     if (arr1.length !== arr2.length) {\n    //         return false;\n    //     }\n    //     for (let i = 0, ii = arr1.length; i < ii; i++) {\n    //         if (arr1[i] !== arr2[i]) {\n    //             return false;\n    //         }\n    //     }\n    //     return true;\n    // }\n    // function getModificationDate(date = new Date()) {\n    //     const buffer = [\n    //         date.getUTCFullYear().toString(),\n    //         (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    //         date.getUTCDate().toString().padStart(2, \"0\"),\n    //         date.getUTCHours().toString().padStart(2, \"0\"),\n    //         date.getUTCMinutes().toString().padStart(2, \"0\"),\n    //         date.getUTCSeconds().toString().padStart(2, \"0\"),\n    //     ];\n    //     return buffer.join(\"\");\n    // }\n    // let NormalizeRegex = null;\n    // let NormalizationMap = null;\n    // function normalizeUnicode(str) {\n    //     if (!NormalizeRegex) {\n    //         // In order to generate the following regex:\n    //         //  - create a PDF containing all the chars in the range 0000-FFFF with\n    //         //    a NFKC which is different of the char.\n    //         //  - copy and paste all those chars and get the ones where NFKC is\n    //         //    required.\n    //         // It appears that most the chars here contain some ligatures.\n    //         NormalizeRegex =\n    //             /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    //         NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n    //     }\n    //     return str.replaceAll(NormalizeRegex, (_, p1, p2) =>\n    //         p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2)\n    //     );\n    // }\n    function getUuid() {\n        if (\n        // (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        (typeof crypto !== \"undefined\" && crypto && typeof crypto.randomUUID === \"function\")) {\n            return crypto.randomUUID();\n        }\n        const buf = new Uint8Array(32);\n        if (typeof crypto !== \"undefined\" &&\n            crypto && typeof crypto.getRandomValues === \"function\") {\n            crypto.getRandomValues(buf);\n        }\n        else {\n            for (let i = 0; i < 32; i++) {\n                buf[i] = Math.floor(Math.random() * 255);\n            }\n        }\n        return bytesToString(buf);\n    }\n    const AnnotationPrefix = \"pdfjs_internal_id_\";\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _IdManager_id;\n    class IdManager {\n        constructor(idPrefix = AnnotationEditorPrefix) {\n            _IdManager_id.set(this, 0);\n            this.idPrefix = AnnotationEditorPrefix;\n            // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n            Object.defineProperty(this, \"reset\", {\n                value: () => (kendo_dateinputsCommon_cmn_chunk_js._(this, _IdManager_id, 0, \"f\"))\n            });\n            // }\n            this.idPrefix = idPrefix;\n        }\n        get id() {\n            var _a, _b;\n            return `${this.idPrefix}${kendo_dateinputsCommon_cmn_chunk_js._(this, _IdManager_id, (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _IdManager_id, \"f\"), _a = _b++, _b), \"f\"), _a}`;\n        }\n    }\n    _IdManager_id = new WeakMap();\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _CommandManager_commands, _CommandManager_locked, _CommandManager_maxSize, _CommandManager_position;\n    /*\n     * Class to handle undo/redo.\n     * Commands are just saved in a buffer.\n     * If we hit some memory issues we could likely use a circular buffer.\n     * It has to be used as a singleton.\n     */\n    class CommandManager {\n        constructor(maxSize = 128) {\n            _CommandManager_commands.set(this, []);\n            _CommandManager_locked.set(this, false);\n            _CommandManager_maxSize.set(this, void 0);\n            _CommandManager_position.set(this, -1);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_maxSize, maxSize, \"f\");\n        }\n        /**\n         * @typedef {Object} addOptions\n         * @property {function} cmd\n         * @property {function} undo\n         * @property {function} [post]\n         * @property {boolean} mustExec\n         * @property {number} type\n         * @property {boolean} overwriteIfSameType\n         * @property {boolean} keepUndo\n         */\n        /*\n         * Add a new couple of commands to be used in case of redo/undo.\n         * @param {addOptions} options\n         */\n        add({ cmd, undo, post, mustExec, type = NaN, overwriteIfSameType = false, keepUndo = false, }) {\n            if (mustExec) {\n                cmd();\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_locked, \"f\")) {\n                return;\n            }\n            const save = { cmd, undo, post, type };\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") === -1) {\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").length > 0) {\n                    // All the commands have been undone and then a new one is added\n                    // hence we clear the queue.\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").length = 0;\n                }\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_position, 0, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").push(save);\n                return;\n            }\n            if (overwriteIfSameType && kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\")[kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\")].type === type) {\n                // For example when we change a color we don't want to\n                // be able to undo all the steps, hence we only want to\n                // keep the last undoable action in this sequence of actions.\n                if (keepUndo) {\n                    save.undo = kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\")[kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\")].undo;\n                }\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\")[kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\")] = save;\n                return;\n            }\n            const next = kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") + 1;\n            if (next === kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_maxSize, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").splice(0, 1);\n            }\n            else {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_position, next, \"f\");\n                if (next < kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").length) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").splice(next);\n                }\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").push(save);\n        }\n        /**\n         * Undo the last command.\n         */\n        undo() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") === -1) {\n                // Nothing to undo.\n                return;\n            }\n            // Avoid to insert something during the undo execution.\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_locked, true, \"f\");\n            const { undo, post } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\")[kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\")];\n            undo();\n            post === null || post === void 0 ? void 0 : post();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_locked, false, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_position, kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") - 1, \"f\");\n        }\n        /**\n         * Redo the last command.\n         */\n        redo() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") < kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").length - 1) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_position, kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") + 1, \"f\");\n                // Avoid to insert something during the redo execution.\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_locked, true, \"f\");\n                const { cmd, post } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\")[kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\")];\n                cmd();\n                post === null || post === void 0 ? void 0 : post();\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_locked, false, \"f\");\n            }\n        }\n        /**\n         * Check if there is something to undo.\n         * @returns {boolean}\n         */\n        hasSomethingToUndo() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") !== -1;\n        }\n        /**\n         * Check if there is something to redo.\n         * @returns {boolean}\n         */\n        hasSomethingToRedo() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_position, \"f\") < kendo_dateinputsCommon_cmn_chunk_js.a(this, _CommandManager_commands, \"f\").length - 1;\n        }\n        destroy() {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _CommandManager_commands, null, \"f\");\n        }\n    }\n    _CommandManager_commands = new WeakMap(), _CommandManager_locked = new WeakMap(), _CommandManager_maxSize = new WeakMap(), _CommandManager_position = new WeakMap();\n\n    /* Copyright 2014 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _AnnotationEditorUIManager_instances, _AnnotationEditorUIManager_abortController, _AnnotationEditorUIManager_activeEditor, _AnnotationEditorUIManager_allEditors, _AnnotationEditorUIManager_allLayers, _AnnotationEditorUIManager_annotationStorage, _AnnotationEditorUIManager_changedExistingAnnotations, _AnnotationEditorUIManager_commandManager, _AnnotationEditorUIManager_currentPageIndex, _AnnotationEditorUIManager_deletedAnnotationsElementIds, _AnnotationEditorUIManager_draggingEditors, _AnnotationEditorUIManager_editorTypes, _AnnotationEditorUIManager_editorsToRescale, _AnnotationEditorUIManager_enableHighlightFloatingButton, _AnnotationEditorUIManager_focusMainContainerTimeoutId, _AnnotationEditorUIManager_focusManagerAC, _AnnotationEditorUIManager_highlightColors, _AnnotationEditorUIManager_highlightWhenShiftUp, _AnnotationEditorUIManager_highlightToolbar, _AnnotationEditorUIManager_idManager, _AnnotationEditorUIManager_isEnabled, _AnnotationEditorUIManager_isWaiting, _AnnotationEditorUIManager_lastActiveElement, _AnnotationEditorUIManager_mode, _AnnotationEditorUIManager_selectedEditors, _AnnotationEditorUIManager_selectedTextNode, _AnnotationEditorUIManager_showAllStates, _AnnotationEditorUIManager_previousStates, _AnnotationEditorUIManager_translation, _AnnotationEditorUIManager_translationTimeoutId, _AnnotationEditorUIManager_container, _AnnotationEditorUIManager_viewer, _AnnotationEditorUIManager_getAnchorElementForSelection, _AnnotationEditorUIManager_getLayerForTextLayer, _AnnotationEditorUIManager_displayHighlightToolbar, _AnnotationEditorUIManager_selectionChange, _AnnotationEditorUIManager_onSelectEnd, _AnnotationEditorUIManager_addSelectionListener, _AnnotationEditorUIManager_addFocusManager, _AnnotationEditorUIManager_removeFocusManager, _AnnotationEditorUIManager_addKeyboardManager, _AnnotationEditorUIManager_removeKeyboardManager, _AnnotationEditorUIManager_addCopyPasteListeners, _AnnotationEditorUIManager_removeCopyPasteListeners, _AnnotationEditorUIManager_addDragAndDropListeners, _AnnotationEditorUIManager_dispatchUpdateStates, _AnnotationEditorUIManager_dispatchUpdateUI, _AnnotationEditorUIManager_enableAll, _AnnotationEditorUIManager_disableAll, _AnnotationEditorUIManager_addEditorToLayer, _AnnotationEditorUIManager_lastSelectedEditor_get, _AnnotationEditorUIManager_isEmpty, _AnnotationEditorUIManager_selectEditors;\n    // import { ImageManager } from \"./helpers/image-manager\";\n    class AnnotationEditorUIManager {\n        // static get _keyboardManager() {\n        //     const proto = AnnotationEditorUIManager.prototype;\n        //     /**\n        //      * If the focused element is an input, we don't want to handle the arrow.\n        //      * For example, sliders can be controlled with the arrow keys.\n        //      */\n        //     const arrowChecker = self =>\n        //         self.#container.contains(document.activeElement) &&\n        //         document.activeElement.tagName !== \"BUTTON\" &&\n        //         self.hasSomethingToControl();\n        //     const textInputChecker = (_self, { target: el }) => {\n        //         if (el instanceof HTMLInputElement) {\n        //             const { type } = el;\n        //             return type !== \"text\" && type !== \"number\";\n        //         }\n        //         return true;\n        //     };\n        //     const small = this.TRANSLATE_SMALL;\n        //     const big = this.TRANSLATE_BIG;\n        //     return shadow(\n        //         this,\n        //         \"_keyboardManager\",\n        //         new KeyboardManager([\n        //             [\n        //                 [\"ctrl+a\", \"mac+meta+a\"],\n        //                 proto.selectAll,\n        //                 { checker: textInputChecker },\n        //             ],\n        //             [[\"ctrl+z\", \"mac+meta+z\"], proto.undo, { checker: textInputChecker }],\n        //             [\n        //                 // On mac, depending of the OS version, the event.key is either \"z\" or\n        //                 // \"Z\" when the user presses \"meta+shift+z\".\n        //                 [\n        //                     \"ctrl+y\",\n        //                     \"ctrl+shift+z\",\n        //                     \"mac+meta+shift+z\",\n        //                     \"ctrl+shift+Z\",\n        //                     \"mac+meta+shift+Z\",\n        //                 ],\n        //                 proto.redo,\n        //                 { checker: textInputChecker },\n        //             ],\n        //             [\n        //                 [\n        //                     \"Backspace\",\n        //                     \"alt+Backspace\",\n        //                     \"ctrl+Backspace\",\n        //                     \"shift+Backspace\",\n        //                     \"mac+Backspace\",\n        //                     \"mac+alt+Backspace\",\n        //                     \"mac+ctrl+Backspace\",\n        //                     \"Delete\",\n        //                     \"ctrl+Delete\",\n        //                     \"shift+Delete\",\n        //                     \"mac+Delete\",\n        //                 ],\n        //                 proto.delete,\n        //                 { checker: textInputChecker },\n        //             ],\n        //             [\n        //                 [\"Enter\", \"mac+Enter\"],\n        //                 proto.addNewEditorFromKeyboard,\n        //                 {\n        //                     // Those shortcuts can be used in the toolbar for some other actions\n        //                     // like zooming, hence we need to check if the container has the\n        //                     // focus.\n        //                     checker: (self, { target: el }) =>\n        //                         !(el instanceof HTMLButtonElement) &&\n        //                         self.#container.contains(el) &&\n        //                         !self.isEnterHandled,\n        //                 },\n        //             ],\n        //             [\n        //                 [\" \", \"mac+ \"],\n        //                 proto.addNewEditorFromKeyboard,\n        //                 {\n        //                     // Those shortcuts can be used in the toolbar for some other actions\n        //                     // like zooming, hence we need to check if the container has the\n        //                     // focus.\n        //                     checker: (self, { target: el }) =>\n        //                         !(el instanceof HTMLButtonElement) &&\n        //                         self.#container.contains(document.activeElement),\n        //                 },\n        //             ],\n        //             [[\"Escape\", \"mac+Escape\"], proto.unselectAll],\n        //             [\n        //                 [\"ArrowLeft\", \"mac+ArrowLeft\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [-small, 0], checker: arrowChecker },\n        //             ],\n        //             [\n        //                 [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [-big, 0], checker: arrowChecker },\n        //             ],\n        //             [\n        //                 [\"ArrowRight\", \"mac+ArrowRight\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [small, 0], checker: arrowChecker },\n        //             ],\n        //             [\n        //                 [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [big, 0], checker: arrowChecker },\n        //             ],\n        //             [\n        //                 [\"ArrowUp\", \"mac+ArrowUp\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [0, -small], checker: arrowChecker },\n        //             ],\n        //             [\n        //                 [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [0, -big], checker: arrowChecker },\n        //             ],\n        //             [\n        //                 [\"ArrowDown\", \"mac+ArrowDown\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [0, small], checker: arrowChecker },\n        //             ],\n        //             [\n        //                 [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n        //                 proto.translateSelectedEditors,\n        //                 { args: [0, big], checker: arrowChecker },\n        //             ],\n        //         ])\n        //     );\n        // }\n        constructor({ container = null, viewer, pdfViewer, \n        // altTextManager,\n        eventBus, pdfDocument, \n        // pageColors,\n        highlightColors = \"\",\n        // enableHighlightFloatingButton,\n        // enableUpdatedAddImage,\n        // enableNewAltTextWhenAddingImage,\n        // mlManager\n         }) {\n            _AnnotationEditorUIManager_instances.add(this);\n            // todo: props\n            // todo: extract to pdf viewer\n            this.pdfViewer = null;\n            this.annotationEditorMode = kendo_pdfjs_loader_js.AnnotationEditorType.NONE;\n            this.viewParameters = {};\n            this.isShiftKeyDown = false;\n            this._eventBus = null;\n            // todo: props\n            _AnnotationEditorUIManager_abortController.set(this, new AbortController());\n            _AnnotationEditorUIManager_activeEditor.set(this, null);\n            _AnnotationEditorUIManager_allEditors.set(this, new Map());\n            _AnnotationEditorUIManager_allLayers.set(this, new Map());\n            // #altTextManager = null;\n            _AnnotationEditorUIManager_annotationStorage.set(this, null);\n            _AnnotationEditorUIManager_changedExistingAnnotations.set(this, null);\n            _AnnotationEditorUIManager_commandManager.set(this, new CommandManager());\n            // #copyPasteAC = null;\n            _AnnotationEditorUIManager_currentPageIndex.set(this, 0);\n            _AnnotationEditorUIManager_deletedAnnotationsElementIds.set(this, new Set());\n            _AnnotationEditorUIManager_draggingEditors.set(this, null);\n            _AnnotationEditorUIManager_editorTypes.set(this, null);\n            _AnnotationEditorUIManager_editorsToRescale.set(this, new Set());\n            // todo: change default value\n            // #enableHighlightFloatingButton = false;\n            _AnnotationEditorUIManager_enableHighlightFloatingButton.set(this, true);\n            // #enableUpdatedAddImage = false;\n            // #enableNewAltTextWhenAddingImage = false;\n            // #filterFactory = null;\n            _AnnotationEditorUIManager_focusMainContainerTimeoutId.set(this, null);\n            _AnnotationEditorUIManager_focusManagerAC.set(this, null);\n            // todo: this is defined in \"highlightEditorColors\" in pdf.js as\n            // value: \"yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F\",\n            _AnnotationEditorUIManager_highlightColors.set(this, \"\");\n            _AnnotationEditorUIManager_highlightWhenShiftUp.set(this, false);\n            _AnnotationEditorUIManager_highlightToolbar.set(this, null);\n            _AnnotationEditorUIManager_idManager.set(this, new IdManager());\n            _AnnotationEditorUIManager_isEnabled.set(this, false);\n            _AnnotationEditorUIManager_isWaiting.set(this, false);\n            // #keyboardManagerAC = null;\n            _AnnotationEditorUIManager_lastActiveElement.set(this, null);\n            // #mainHighlightColorPicker = null;\n            // #mlManager = null;\n            _AnnotationEditorUIManager_mode.set(this, kendo_pdfjs_loader_js.AnnotationEditorType.NONE);\n            _AnnotationEditorUIManager_selectedEditors.set(this, new Set());\n            _AnnotationEditorUIManager_selectedTextNode.set(this, null);\n            // #pageColors = null;\n            _AnnotationEditorUIManager_showAllStates.set(this, null);\n            _AnnotationEditorUIManager_previousStates.set(this, {\n                isEditing: false,\n                isEmpty: true,\n                hasSomethingToUndo: false,\n                hasSomethingToRedo: false,\n                hasSelectedEditor: false,\n                hasSelectedText: false,\n            });\n            _AnnotationEditorUIManager_translation.set(this, [0, 0]);\n            _AnnotationEditorUIManager_translationTimeoutId.set(this, null);\n            _AnnotationEditorUIManager_container.set(this, null);\n            _AnnotationEditorUIManager_viewer.set(this, null);\n            // // const signal = (this._signal = this.#abortController.signal);\n            const signal = this._signal = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_abortController, \"f\").signal;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_container, container, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_viewer, viewer, \"f\");\n            this.pdfViewer = pdfViewer;\n            // this.#altTextManager = altTextManager;\n            this._eventBus = eventBus;\n            this._eventBus._on(\"editingaction\", this.onEditingAction.bind(this), {\n                signal,\n            });\n            this._eventBus._on(\"pagechanging\", this.onPageChanging.bind(this), {\n                signal,\n            });\n            this._eventBus._on(\"scalechanging\", this.onScaleChanging.bind(this), {\n                signal,\n            });\n            this._eventBus._on(\"rotationchanging\", this.onRotationChanging.bind(this), {\n                signal,\n            });\n            this._eventBus._on(\"setpreference\", this.onSetPreference.bind(this), {\n                signal,\n            });\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addSelectionListener).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addDragAndDropListeners).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addKeyboardManager).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_annotationStorage, pdfDocument.annotationStorage, \"f\");\n            // this.#filterFactory = pdfDocument.filterFactory;\n            // this.#pageColors = pageColors;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_highlightColors, highlightColors || \"\", \"f\");\n            // this.#enableHighlightFloatingButton = enableHighlightFloatingButton;\n            // this.#enableUpdatedAddImage = enableUpdatedAddImage;\n            // this.#enableNewAltTextWhenAddingImage = enableNewAltTextWhenAddingImage;\n            // this.#mlManager = mlManager || null;\n            this.viewParameters = {\n                realScale: kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS,\n                rotation: 0,\n            };\n            // this.isShiftKeyDown = false;\n            // if ( typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n            //     window.uiManager = this;\n            //     Object.defineProperty(this, \"reset\", {\n            //         value: () => {\n            //             this.selectAll();\n            //             this.delete();\n            //             this.#idManager.reset();\n            //         },\n            //     });\n            // }\n        }\n        destroy() {\n            var _a;\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_abortController, \"f\")) === null || _a === void 0 ? void 0 : _a.abort();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_abortController, null, \"f\");\n            this._signal = null;\n            for (const layer of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n                layer.destroy();\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorsToRescale, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_activeEditor, null, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").destroy();\n            // this.#altTextManager?.destroy();\n            // this.#highlightToolbar?.hide();\n            // this.#highlightToolbar = null;\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\")) {\n                clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, null, \"f\");\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\")) {\n                clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_translationTimeoutId, null, \"f\");\n            }\n        }\n        // todo: new\n        getTextLayerForAnchor(anchorElement) {\n            if (!anchorElement) {\n                return null;\n            }\n            return anchorElement.closest(\".textLayer\") || anchorElement.closest(\".k-text-layer\");\n        }\n        combinedSignal(abortSignal) {\n            // eslint-disable-next-line\n            if (AbortSignal && AbortSignal[\"any\"]) {\n                return AbortSignal.any([this._signal, abortSignal.signal]);\n            }\n            else {\n                // add this for the unit tests\n                // AbortSignal.any is an API since March 2024\n                // however, this API is not currently available in\n                // the node/jest-related bits version that we are using\n                return this._signal || abortSignal.signal;\n            }\n        }\n        // get mlManager() {\n        //     return this.#mlManager;\n        // }\n        // get useNewAltTextFlow() {\n        //     return this.#enableUpdatedAddImage;\n        // }\n        // get useNewAltTextWhenAddingImage() {\n        //     return this.#enableNewAltTextWhenAddingImage;\n        // }\n        // get hcmFilter() {\n        //     return shadow(\n        //         this,\n        //         \"hcmFilter\",\n        //         this.#pageColors\n        //             ? this.#filterFactory.addHCMFilter(\n        //                 this.#pageColors.foreground,\n        //                 this.#pageColors.background\n        //             )\n        //             : \"none\"\n        //     );\n        // }\n        get direction() {\n            return kendo_pdfjs_loader_js.shadow(this, \"direction\", getComputedStyle(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_container, \"f\")).direction);\n        }\n        get highlightColors() {\n            return kendo_pdfjs_loader_js.shadow(this, \"highlightColors\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_highlightColors, \"f\")\n                ? new Map(\n                // Array.from(\n                //     this.#highlightColors\n                //         .split(\",\")\n                //         .map(pair => pair.split(\"=\").map(x => x.trim()))\n                // )\n                )\n                : null);\n        }\n        get highlightColorNames() {\n            return kendo_pdfjs_loader_js.shadow(this, \"highlightColorNames\", this.highlightColors\n                ? new Map(Array.from(this.highlightColors, e => e.reverse()))\n                : null);\n        }\n        // setMainHighlightColorPicker(colorPicker) {\n        //     this.#mainHighlightColorPicker = colorPicker;\n        // }\n        // editAltText(editor, firstTime = false) {\n        //     this.#altTextManager?.editAltText(this, editor, firstTime);\n        // }\n        switchToMode(mode, callback) {\n            // Switching to a mode can be asynchronous.\n            this._eventBus.on(\"annotationeditormodechanged\", callback, {\n                once: true,\n                signal: this._signal,\n                mode\n            });\n            this._eventBus.dispatch(\"showannotationeditorui\", {\n                source: this,\n                mode,\n            });\n        }\n        setPreference(name, value) {\n            this._eventBus.dispatch(\"setpreference\", {\n                source: this,\n                name,\n                value,\n            });\n        }\n        // onSetPreference({ name, value }) {\n        onSetPreference({ name }) {\n            switch (name) {\n                case \"enableNewAltTextWhenAddingImage\":\n                    // this.#enableNewAltTextWhenAddingImage = value;\n                    break;\n                default: break;\n            }\n        }\n        onPageChanging({ pageNumber }) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_currentPageIndex, pageNumber - 1, \"f\");\n        }\n        focusMainContainer() {\n            var _a;\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_container, \"f\")) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        findParent(x, y) {\n            for (const layer of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n                const { x: layerX, y: layerY, width, height, } = layer.div.getBoundingClientRect();\n                if (x >= layerX &&\n                    x <= layerX + width &&\n                    y >= layerY &&\n                    y <= layerY + height) {\n                    return layer;\n                }\n            }\n            return null;\n        }\n        disableUserSelect(value = false) {\n            var _a;\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_viewer, \"f\")) === null || _a === void 0 ? void 0 : _a.classList.toggle(\"noUserSelect\", value);\n        }\n        addShouldRescale(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorsToRescale, \"f\").add(editor);\n        }\n        removeShouldRescale(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorsToRescale, \"f\").delete(editor);\n        }\n        onScaleChanging({ scale }) {\n            this.commitOrRemove();\n            this.viewParameters.realScale = scale * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS;\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorsToRescale, \"f\")) {\n                editor.onScaleChanging();\n            }\n        }\n        onRotationChanging({ pagesRotation }) {\n            this.commitOrRemove();\n            this.viewParameters.rotation = pagesRotation;\n        }\n        highlightSelection(methodOfCreation = \"\") {\n            const selection = document.getSelection();\n            if (!selection || selection.isCollapsed) {\n                return;\n            }\n            const { anchorNode, anchorOffset, focusNode, focusOffset } = selection;\n            const text = selection.toString();\n            const anchorElement = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getAnchorElementForSelection).call(this, selection);\n            // const textLayer = anchorElement.closest(\".textLayer\");\n            const textLayer = this.getTextLayerForAnchor(anchorElement);\n            const boxes = this.getSelectionBoxes(textLayer);\n            if (!boxes) {\n                return;\n            }\n            selection.empty();\n            const layer = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getLayerForTextLayer).call(this, textLayer);\n            const isNoneMode = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.NONE;\n            const callback = () => {\n                layer === null || layer === void 0 ? void 0 : layer.createAndAddNewEditor({ x: 0, y: 0 }, false, {\n                    methodOfCreation,\n                    boxes,\n                    anchorNode,\n                    anchorOffset,\n                    focusNode,\n                    focusOffset,\n                    text,\n                });\n                if (isNoneMode) {\n                    // this.showAllEditors(\"highlight\", true, /* updateButton = */ true);\n                    this.showAllEditors(\"highlight\", true);\n                }\n            };\n            if (isNoneMode) {\n                this.switchToMode(kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT, callback);\n                return;\n            }\n            callback();\n        }\n        showEditorToolBar(anchor) {\n            if (!anchor) {\n                return;\n            }\n            // todo: disable showing a toolbar for other annotations\n            const annotationEditorMode = this.getMode();\n            if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n                const editor = anchor.closest(\".highlightEditor\");\n                if (!editor) {\n                    return;\n                }\n            }\n            if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n                const editor = anchor.closest(\".freeTextEditor\");\n                if (!editor) {\n                    return;\n                }\n            }\n            if (annotationEditorMode !== kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT &&\n                annotationEditorMode !== kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n                return;\n            }\n            this._eventBus.dispatch(\"kendoAnnotationEditorToolBarShow\", {\n                source: this,\n                anchor: anchor\n            });\n        }\n        hideEditorToolBar() {\n            this._eventBus.dispatch(\"kendoAnnotationEditorToolBarHide\", {\n                source: this,\n            });\n        }\n        /**\n         * Add an editor in the annotation storage.\n         * @param {AnnotationEditor} editor\n         */\n        addToAnnotationStorage(editor) {\n            if (!editor.isEmpty() &&\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_annotationStorage, \"f\") &&\n                !kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_annotationStorage, \"f\").has(editor.id)) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_annotationStorage, \"f\").setValue(editor.id, editor);\n            }\n        }\n        blur() {\n            this.isShiftKeyDown = false;\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_highlightWhenShiftUp, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_highlightWhenShiftUp, false, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_onSelectEnd).call(this, \"main_toolbar\");\n            }\n            if (!this.hasSelection) {\n                return;\n            }\n            // When several editors are selected and the window loses focus, we want to\n            // keep the last active element in order to be able to focus it again when\n            // the window gets the focus back but we don't want to trigger any focus\n            // callbacks else only one editor will be selected.\n            const { activeElement } = document;\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n                if (editor.div.contains(activeElement)) {\n                    kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_lastActiveElement, [editor, activeElement], \"f\");\n                    editor._focusEventsAllowed = false;\n                    break;\n                }\n            }\n        }\n        focus() {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_lastActiveElement, \"f\")) {\n                return;\n            }\n            const [lastEditor, lastActiveElement] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_lastActiveElement, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_lastActiveElement, null, \"f\");\n            lastActiveElement.addEventListener(\"focusin\", () => {\n                lastEditor._focusEventsAllowed = true;\n            }, { once: true, signal: this._signal });\n            lastActiveElement.focus();\n        }\n        addEditListeners() {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addKeyboardManager).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addCopyPasteListeners).call(this);\n        }\n        removeEditListeners() {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeKeyboardManager).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeCopyPasteListeners).call(this);\n        }\n        dragOver(event) {\n            for (const { type } of event.dataTransfer.items) {\n                for (const editorType of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                    if (editorType.isHandlingMimeForPasting(type)) {\n                        event.dataTransfer.dropEffect = \"copy\";\n                        event.preventDefault();\n                        return;\n                    }\n                }\n            }\n        }\n        /**\n         * Drop callback.\n         * @param {DragEvent} event\n         */\n        drop(event) {\n            for (const item of event.dataTransfer.items) {\n                for (const editorType of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                    if (editorType.isHandlingMimeForPasting(item.type)) {\n                        editorType.paste(item, this.currentLayer);\n                        event.preventDefault();\n                        return;\n                    }\n                }\n            }\n        }\n        /**\n         * Copy callback.\n         * @param {ClipboardEvent} event\n         */\n        copy(event) {\n            var _a;\n            event.preventDefault();\n            // An editor is being edited so just commit it.\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\")) === null || _a === void 0 ? void 0 : _a.commitOrRemove();\n            if (!this.hasSelection) {\n                return;\n            }\n            const editors = [];\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n                const serialized = editor.serialize(/* isForCopying = */ true);\n                if (serialized) {\n                    editors.push(serialized);\n                }\n            }\n            if (editors.length === 0) {\n                return;\n            }\n            event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n        }\n        /**\n         * Cut callback.\n         * @param {ClipboardEvent} event\n         */\n        cut(event) {\n            this.copy(event);\n            this.delete();\n        }\n        /**\n         * Paste callback.\n         * @param {ClipboardEvent} event\n         */\n        paste(event) {\n            event.preventDefault();\n            const { clipboardData } = event;\n            for (const item of clipboardData.items) {\n                for (const editorType of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                    if (editorType.isHandlingMimeForPasting(item.type)) {\n                        editorType.paste(item, this.currentLayer);\n                        return;\n                    }\n                }\n            }\n            let data = clipboardData.getData(\"application/pdfjs\");\n            if (!data) {\n                return;\n            }\n            try {\n                data = JSON.parse(data);\n            }\n            catch (ex) {\n                // warn(`paste: \"${ex.message}\".`);\n                return;\n            }\n            if (!Array.isArray(data)) {\n                return;\n            }\n            this.unselectAll();\n            const layer = this.currentLayer;\n            try {\n                const newEditors = [];\n                for (const editor of data) {\n                    const deserializedEditor = layer.deserialize(editor);\n                    if (!deserializedEditor) {\n                        return;\n                    }\n                    newEditors.push(deserializedEditor);\n                }\n                const cmd = () => {\n                    for (const editor of newEditors) {\n                        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addEditorToLayer).call(this, editor);\n                    }\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_selectEditors).call(this, newEditors);\n                };\n                const undo = () => {\n                    for (const editor of newEditors) {\n                        editor.remove();\n                    }\n                };\n                this.addCommands({ cmd, undo, mustExec: true });\n            }\n            catch (ex) {\n                // warn(`paste: \"${ex.message}\".`);\n            }\n        }\n        // /**\n        //  * Keydown callback.\n        //  * @param {KeyboardEvent} event\n        //  */\n        // keydown(event) {\n        //     if (!this.isShiftKeyDown && event.key === \"Shift\") {\n        //         this.isShiftKeyDown = true;\n        //     }\n        //     if (\n        //         this.#mode !== AnnotationEditorType.NONE &&\n        //         !this.isEditorHandlingKeyboard\n        //     ) {\n        //         AnnotationEditorUIManager._keyboardManager.exec(this, event);\n        //     }\n        // }\n        // /**\n        //  * Keyup callback.\n        //  * @param {KeyboardEvent} event\n        //  */\n        // keyup(event) {\n        //     if (this.isShiftKeyDown && event.key === \"Shift\") {\n        //         this.isShiftKeyDown = false;\n        //         if (this.#highlightWhenShiftUp) {\n        //             this.#highlightWhenShiftUp = false;\n        //             this.#onSelectEnd(\"main_toolbar\");\n        //         }\n        //     }\n        // }\n        /**\n         * Execute an action for a given name.\n         * For example, the user can click on the \"Undo\" entry in the context menu\n         * and it'll trigger the undo action.\n         */\n        onEditingAction({ name }) {\n            switch (name) {\n                case \"undo\":\n                case \"redo\":\n                case \"delete\":\n                case \"selectAll\":\n                    this[name]();\n                    break;\n                case \"highlightSelection\":\n                    this.highlightSelection(\"context_menu\");\n                    break;\n                default: break;\n            }\n        }\n        /**\n         * Set the editing state.\n         * It can be useful to temporarily disable it when the user is editing a\n         * FreeText annotation.\n         * @param {boolean} isEditing\n         */\n        setEditingState(isEditing) {\n            // setEditingState() {\n            if (isEditing) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addFocusManager).call(this);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addCopyPasteListeners).call(this);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                    isEditing: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE,\n                    isEmpty: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this),\n                    hasSomethingToUndo: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToUndo(),\n                    hasSomethingToRedo: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToRedo(),\n                    hasSelectedEditor: false,\n                });\n            }\n            else {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeFocusManager).call(this);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeCopyPasteListeners).call(this);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                    isEditing: false,\n                });\n                this.disableUserSelect(false);\n            }\n        }\n        registerEditorTypes(types) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_editorTypes, types, \"f\");\n            for (const editorType of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editorType.defaultPropertiesToUpdate);\n            }\n        }\n        /**\n         * Get an id.\n         * @returns {string}\n         */\n        getId() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_idManager, \"f\").id;\n        }\n        get currentLayer() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").get(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_currentPageIndex, \"f\"));\n        }\n        getLayer(pageIndex) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").get(pageIndex);\n        }\n        get currentPageIndex() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_currentPageIndex, \"f\");\n        }\n        /**\n         * Add a new layer for a page which will contains the editors.\n         * @param {AnnotationEditorLayer} layer\n         */\n        addLayer(layer) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").set(layer.pageIndex, layer);\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_isEnabled, \"f\")) {\n                layer.enable();\n            }\n            else {\n                layer.disable();\n            }\n        }\n        /**\n         * Remove a layer.\n         * @param {AnnotationEditorLayer} layer\n         */\n        removeLayer(layer) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").delete(layer.pageIndex);\n        }\n        /**\n         * Change the editor mode (None, FreeText, Ink, ...)\n         * @param {number} mode\n         * @param {string|null} editId\n         * @param {boolean} [isFromKeyboard] - true if the mode change is due to a\n         *   keyboard action.\n         */\n        updateMode(mode, editId = null, isFromKeyboard = false) {\n            // todo: set isFromKeyboard intentionally to allow editor creation\n            // updateMode(mode, editId = null, isFromKeyboard = true) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") === mode) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_mode, mode, \"f\");\n            if (mode === kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n                this.setEditingState(false);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_disableAll).call(this);\n                return;\n            }\n            this.setEditingState(true);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_enableAll).call(this);\n            this.unselectAll();\n            for (const layer of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n                layer.updateMode(mode);\n            }\n            if (!editId && isFromKeyboard) {\n                this.addNewEditorFromKeyboard();\n                return;\n            }\n            if (!editId) {\n                return;\n            }\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n                if (editor.annotationElementId === editId) {\n                    this.setSelected(editor);\n                    editor.enterInEditMode();\n                    break;\n                }\n            }\n        }\n        addNewEditorFromKeyboard() {\n            if (this.currentLayer.canCreateNewEmptyEditor()) {\n                this.currentLayer.addNewEditor();\n            }\n        }\n        /**\n         * Update the toolbar if it's required to reflect the tool currently used.\n         * @param {number} mode\n         * @returns {undefined}\n         */\n        updateToolbar(mode) {\n            if (mode === kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\")) {\n                return;\n            }\n            this._eventBus.dispatch(\"switchannotationeditormode\", {\n                source: this,\n                mode,\n            });\n        }\n        /**\n         * Update a parameter in the current editor or globally.\n         * @param {number} type\n         * @param {*} value\n         */\n        updateParams(type, value) {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                return;\n            }\n            switch (type) {\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.CREATE:\n                    this.currentLayer.addNewEditor();\n                    return;\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:\n                    // this.#mainHighlightColorPicker?.updateColor(value);\n                    break;\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL:\n                    // this._eventBus.dispatch(\"reporttelemetry\", {\n                    //     source: this,\n                    //     details: {\n                    //         type: \"editing\",\n                    //         data: {\n                    //             type: \"highlight\",\n                    //             action: \"toggle_visibility\",\n                    //         },\n                    //     },\n                    // });\n                    (kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_showAllStates, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_showAllStates, \"f\") || new Map(), \"f\")).set(type, value);\n                    this.showAllEditors(\"highlight\", value);\n                    break;\n                default: break;\n            }\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n                editor.updateParams(type, value);\n            }\n            for (const editorType of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                editorType.updateDefaultParams(type, value);\n            }\n        }\n        // showAllEditors(type, visible, updateButton = false) {\n        showAllEditors(type, visible) {\n            var _a, _b;\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n                if (editor.editorType === type) {\n                    editor.show(visible);\n                }\n            }\n            const state = (_b = (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_showAllStates, \"f\")) === null || _a === void 0 ? void 0 : _a.get(kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL)) !== null && _b !== void 0 ? _b : true;\n            if (state !== visible) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, [\n                    [kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL, visible],\n                ]);\n            }\n        }\n        enableWaiting(mustWait = false) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_isWaiting, \"f\") === mustWait) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_isWaiting, mustWait, \"f\");\n            for (const layer of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n                if (mustWait) {\n                    layer.disableClick();\n                }\n                else {\n                    layer.enableClick();\n                }\n                layer.div.classList.toggle(\"waiting\", mustWait);\n            }\n        }\n        /**\n         * Get all the editors belonging to a given page.\n         * @param {number} pageIndex\n         * @returns {Array<AnnotationEditor>}\n         */\n        getEditors(pageIndex) {\n            const editors = [];\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n                if (editor.pageIndex === pageIndex) {\n                    editors.push(editor);\n                }\n            }\n            return editors;\n        }\n        /**\n         * Get an editor with the given id.\n         * @param {string} id\n         * @returns {AnnotationEditor}\n         */\n        getEditor(id) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").get(id);\n        }\n        /**\n         * Add a new editor.\n         * @param {AnnotationEditor} editor\n         */\n        addEditor(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").set(editor.id, editor);\n        }\n        /**\n         * Remove an editor.\n         * @param {AnnotationEditor} editor\n         */\n        removeEditor(editor) {\n            var _a;\n            if (editor.div.contains(document.activeElement)) {\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\")) {\n                    clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\"));\n                }\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, setTimeout(() => {\n                    // When the div is removed from DOM the focus can move on the\n                    // document.body, so we need to move it back to the main container.\n                    this.focusMainContainer();\n                    kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, null, \"f\");\n                }, 0), \"f\");\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").delete(editor.id);\n            this.unselect(editor);\n            if (!editor.annotationElementId ||\n                !kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").has(editor.annotationElementId)) {\n                (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_annotationStorage, \"f\")) === null || _a === void 0 ? void 0 : _a.remove(editor.id);\n            }\n        }\n        /**\n         * The annotation element with the given id has been deleted.\n         * @param {AnnotationEditor} editor\n         */\n        addDeletedAnnotationElement(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").add(editor.annotationElementId);\n            this.addChangedExistingAnnotation(editor);\n            editor.deleted = true;\n        }\n        /**\n         * Check if the annotation element with the given id has been deleted.\n         * @param {string} annotationElementId\n         * @returns {boolean}\n         */\n        isDeletedAnnotationElement(annotationElementId) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").has(annotationElementId);\n        }\n        /**\n         * The annotation element with the given id have been restored.\n         * @param {AnnotationEditor} editor\n         */\n        removeDeletedAnnotationElement(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").delete(editor.annotationElementId);\n            this.removeChangedExistingAnnotation(editor);\n            editor.deleted = false;\n        }\n        /**\n         * Set the given editor as the active one.\n         * @param {AnnotationEditor} editor\n         */\n        setActiveEditor(editor) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\") === editor) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_activeEditor, editor, \"f\");\n            if (editor) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n            }\n        }\n        /**\n         * Update the UI of the active editor.\n         * @param {AnnotationEditor} editor\n         */\n        updateUI(editor) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"a\", _AnnotationEditorUIManager_lastSelectedEditor_get) === editor) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n            }\n        }\n        /**\n         * Add or remove an editor the current selection.\n         * @param {AnnotationEditor} editor\n         */\n        toggleSelected(editor) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").has(editor)) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").delete(editor);\n                editor.unselect();\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                    hasSelectedEditor: this.hasSelection,\n                });\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").add(editor);\n            editor.select();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                hasSelectedEditor: true,\n            });\n        }\n        /**\n         * Set the last selected editor.\n         * @param {AnnotationEditor} editor\n         */\n        setSelected(editor) {\n            for (const selectedEditor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n                if (selectedEditor !== editor) {\n                    selectedEditor.unselect();\n                }\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").add(editor);\n            editor.select();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                hasSelectedEditor: true,\n            });\n        }\n        /**\n         * Check if the editor is selected.\n         * @param {AnnotationEditor} editor\n         */\n        isSelected(editor) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").has(editor);\n        }\n        get firstSelectedEditor() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").values().next().value;\n        }\n        /**\n         * Unselect an editor.\n         * @param {AnnotationEditor} editor\n         */\n        unselect(editor) {\n            editor.unselect();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").delete(editor);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                hasSelectedEditor: this.hasSelection,\n            });\n        }\n        get hasSelection() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").size !== 0;\n        }\n        get isEnterHandled() {\n            return (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").size === 1 &&\n                this.firstSelectedEditor.isEnterHandled);\n        }\n        /**\n         * Undo the last command.\n         */\n        undo() {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").undo();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                hasSomethingToUndo: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToUndo(),\n                hasSomethingToRedo: true,\n                isEmpty: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this),\n            });\n        }\n        /**\n         * Redo the last undoed command.\n         */\n        redo() {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").redo();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                hasSomethingToUndo: true,\n                hasSomethingToRedo: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToRedo(),\n                isEmpty: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this),\n            });\n        }\n        /**\n         * Add a command to execute (cmd) and another one to undo it.\n         * @param {Object} params\n         */\n        addCommands(params) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_commandManager, \"f\").add(params);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                hasSomethingToUndo: true,\n                hasSomethingToRedo: false,\n                isEmpty: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this),\n            });\n        }\n        /**\n         * Delete the current editor or all.\n         */\n        delete() {\n            this.commitOrRemove();\n            if (!this.hasSelection) {\n                return;\n            }\n            const editors = [...kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")];\n            const cmd = () => {\n                for (const editor of editors) {\n                    editor.remove();\n                }\n            };\n            const undo = () => {\n                for (const editor of editors) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addEditorToLayer).call(this, editor);\n                }\n            };\n            this.addCommands({ cmd, undo, mustExec: true });\n        }\n        commitOrRemove() {\n            var _a;\n            // An editor is being edited so just commit it.\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\")) === null || _a === void 0 ? void 0 : _a.commitOrRemove();\n        }\n        hasSomethingToControl() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\") || this.hasSelection;\n        }\n        /**\n         * Select all the editors.\n         */\n        selectAll() {\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n                editor.commit();\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_selectEditors).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").values());\n        }\n        /**\n         * Unselect all the selected editors.\n         */\n        unselectAll() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\")) {\n                // An editor is being edited so just commit it.\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\").commitOrRemove();\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n                    // If the mode is NONE, we want to really unselect the editor, hence we\n                    // mustn't return here.\n                    return;\n                }\n            }\n            if (!this.hasSelection) {\n                return;\n            }\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n                editor.unselect();\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                hasSelectedEditor: false,\n            });\n        }\n        translateSelectedEditors(x, y, noCommit = false) {\n            if (!noCommit) {\n                this.commitOrRemove();\n            }\n            if (!this.hasSelection) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translation, \"f\")[0] += x;\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translation, \"f\")[1] += y;\n            const [totalX, totalY] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translation, \"f\");\n            const editors = [...kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")];\n            // We don't want to have an undo/redo for each translation so we wait a bit\n            // before adding the command to the command manager.\n            const TIME_TO_WAIT = 1000;\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\")) {\n                clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\"));\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_translationTimeoutId, setTimeout(() => {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_translationTimeoutId, null, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translation, \"f\")[0] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_translation, \"f\")[1] = 0;\n                this.addCommands({\n                    cmd: () => {\n                        for (const editor of editors) {\n                            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").has(editor.id)) {\n                                editor.translateInPage(totalX, totalY);\n                            }\n                        }\n                    },\n                    undo: () => {\n                        for (const editor of editors) {\n                            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").has(editor.id)) {\n                                editor.translateInPage(-totalX, -totalY);\n                            }\n                        }\n                    },\n                    mustExec: false,\n                });\n            }, TIME_TO_WAIT), \"f\");\n            for (const editor of editors) {\n                editor.translateInPage(x, y);\n            }\n        }\n        /**\n         * Set up the drag session for moving the selected editors.\n         */\n        setUpDragSession() {\n            // // Note: don't use any references to the editor's parent which can be null\n            // // if the editor belongs to a destroyed page.\n            if (!this.hasSelection) {\n                return;\n            }\n            // Avoid to have spurious text selection in the text layer when dragging.\n            this.disableUserSelect(true);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_draggingEditors, new Map(), \"f\");\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_draggingEditors, \"f\").set(editor, {\n                    savedX: editor.x,\n                    savedY: editor.y,\n                    savedPageIndex: editor.pageIndex,\n                    newX: 0,\n                    newY: 0,\n                    newPageIndex: -1,\n                });\n            }\n        }\n        /**\n         * Ends the drag session.\n         * @returns {boolean} true if at least one editor has been moved.\n         */\n        endDragSession() {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_draggingEditors, \"f\")) {\n                return false;\n            }\n            this.disableUserSelect(false);\n            const map = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_draggingEditors, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_draggingEditors, null, \"f\");\n            let mustBeAddedInUndoStack = false;\n            for (const [{ x, y, pageIndex }, value] of map) {\n                value.newX = x;\n                value.newY = y;\n                value.newPageIndex = pageIndex;\n                mustBeAddedInUndoStack || (mustBeAddedInUndoStack = x !== value.savedX ||\n                    y !== value.savedY ||\n                    pageIndex !== value.savedPageIndex);\n            }\n            if (!mustBeAddedInUndoStack) {\n                return false;\n            }\n            const move = (editor, x, y, pageIndex) => {\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").has(editor.id)) {\n                    // The editor can be undone/redone on a page which is not visible (and\n                    // which potentially has no annotation editor layer), hence we need to\n                    // use the pageIndex instead of the parent.\n                    const parent = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").get(pageIndex);\n                    if (parent) {\n                        editor._setParentAndPosition(parent, x, y);\n                    }\n                    else {\n                        editor.pageIndex = pageIndex;\n                        editor.x = x;\n                        editor.y = y;\n                    }\n                }\n            };\n            this.addCommands({\n                cmd: () => {\n                    for (const [editor, { newX, newY, newPageIndex }] of map) {\n                        move(editor, newX, newY, newPageIndex);\n                    }\n                },\n                undo: () => {\n                    for (const [editor, { savedX, savedY, savedPageIndex }] of map) {\n                        move(editor, savedX, savedY, savedPageIndex);\n                    }\n                },\n                mustExec: true,\n            });\n            return true;\n        }\n        /**\n         * Drag the set of selected editors.\n         * @param {number} tx\n         * @param {number} ty\n         */\n        dragSelectedEditors(tx, ty) {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_draggingEditors, \"f\")) {\n                return;\n            }\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_draggingEditors, \"f\").keys()) {\n                editor.drag(tx, ty);\n            }\n        }\n        /**\n         * Rebuild the editor (usually on undo/redo actions) on a potentially\n         * non-rendered page.\n         * @param {AnnotationEditor} editor\n         */\n        rebuild(editor) {\n            if (editor.parent === null) {\n                const parent = this.getLayer(editor.pageIndex);\n                if (parent) {\n                    parent.changeParent(editor);\n                    parent.addOrRebuild(editor);\n                }\n                else {\n                    this.addEditor(editor);\n                    this.addToAnnotationStorage(editor);\n                    editor.rebuild();\n                }\n            }\n            else {\n                editor.parent.addOrRebuild(editor);\n            }\n        }\n        // get isEditorHandlingKeyboard() {\n        //     return (\n        //         this.getActive()?.shouldGetKeyboardEvents() ||\n        //         (this.#selectedEditors.size === 1 &&\n        //             this.firstSelectedEditor.shouldGetKeyboardEvents())\n        //     );\n        // }\n        /**\n         * Is the current editor the one passed as argument?\n         * @param {AnnotationEditor} editor\n         * @returns\n         */\n        isActive(editor) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\") === editor;\n        }\n        /**\n         * Get the current active editor.\n         * @returns {AnnotationEditor|null}\n         */\n        getActive() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\");\n        }\n        getActiveEditor() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_activeEditor, \"f\");\n        }\n        /**\n         * Get the current editor mode.\n         * @returns {number}\n         */\n        getMode() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\");\n        }\n        // get imageManager() {\n        //     return shadow(this, \"imageManager\", new ImageManager());\n        // }\n        getSelectionBoxes(textLayer) {\n            if (!textLayer) {\n                return null;\n            }\n            const selection = document.getSelection();\n            for (let i = 0, ii = selection.rangeCount; i < ii; i++) {\n                if (!textLayer.contains(selection.getRangeAt(i).commonAncestorContainer)) {\n                    return null;\n                }\n            }\n            const { x: layerX, y: layerY, width: parentWidth, height: parentHeight, } = textLayer.getBoundingClientRect();\n            // We must rotate the boxes because we want to have them in the non-rotated\n            // page coordinates.\n            let rotator;\n            switch (textLayer.getAttribute(\"data-main-rotation\")) {\n                case \"90\":\n                    rotator = (x, y, w, h) => ({\n                        x: (y - layerY) / parentHeight,\n                        y: 1 - (x + w - layerX) / parentWidth,\n                        width: h / parentHeight,\n                        height: w / parentWidth,\n                    });\n                    break;\n                case \"180\":\n                    rotator = (x, y, w, h) => ({\n                        x: 1 - (x + w - layerX) / parentWidth,\n                        y: 1 - (y + h - layerY) / parentHeight,\n                        width: w / parentWidth,\n                        height: h / parentHeight,\n                    });\n                    break;\n                case \"270\":\n                    rotator = (x, y, w, h) => ({\n                        x: 1 - (y + h - layerY) / parentHeight,\n                        y: (x - layerX) / parentWidth,\n                        width: h / parentHeight,\n                        height: w / parentWidth,\n                    });\n                    break;\n                default:\n                    rotator = (x, y, w, h) => ({\n                        x: (x - layerX) / parentWidth,\n                        y: (y - layerY) / parentHeight,\n                        width: w / parentWidth,\n                        height: h / parentHeight,\n                    });\n                    break;\n            }\n            const boxes = [];\n            for (let i = 0, ii = selection.rangeCount; i < ii; i++) {\n                const range = selection.getRangeAt(i);\n                if (range.collapsed) {\n                    continue;\n                }\n                for (const { x, y, width, height } of range.getClientRects()) {\n                    if (width === 0 || height === 0) {\n                        continue;\n                    }\n                    boxes.push(rotator(x, y, width, height));\n                }\n            }\n            return boxes.length === 0 ? null : boxes;\n        }\n        addChangedExistingAnnotation({ annotationElementId, id }) {\n            (kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_changedExistingAnnotations, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_changedExistingAnnotations, \"f\") || new Map(), \"f\")).set(annotationElementId, id);\n        }\n        removeChangedExistingAnnotation({ annotationElementId }) {\n            var _a;\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_changedExistingAnnotations, \"f\")) === null || _a === void 0 ? void 0 : _a.delete(annotationElementId);\n        }\n        renderAnnotationElement(annotation) {\n            var _a;\n            const editorId = (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_changedExistingAnnotations, \"f\")) === null || _a === void 0 ? void 0 : _a.get(annotation.data.id);\n            if (!editorId) {\n                return;\n            }\n            const editor = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_annotationStorage, \"f\").getRawValue(editorId);\n            if (!editor) {\n                return;\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.NONE && !editor.hasBeenModified) {\n                return;\n            }\n            editor.renderAnnotationElement(annotation);\n        }\n    }\n    _AnnotationEditorUIManager_abortController = new WeakMap(), _AnnotationEditorUIManager_activeEditor = new WeakMap(), _AnnotationEditorUIManager_allEditors = new WeakMap(), _AnnotationEditorUIManager_allLayers = new WeakMap(), _AnnotationEditorUIManager_annotationStorage = new WeakMap(), _AnnotationEditorUIManager_changedExistingAnnotations = new WeakMap(), _AnnotationEditorUIManager_commandManager = new WeakMap(), _AnnotationEditorUIManager_currentPageIndex = new WeakMap(), _AnnotationEditorUIManager_deletedAnnotationsElementIds = new WeakMap(), _AnnotationEditorUIManager_draggingEditors = new WeakMap(), _AnnotationEditorUIManager_editorTypes = new WeakMap(), _AnnotationEditorUIManager_editorsToRescale = new WeakMap(), _AnnotationEditorUIManager_enableHighlightFloatingButton = new WeakMap(), _AnnotationEditorUIManager_focusMainContainerTimeoutId = new WeakMap(), _AnnotationEditorUIManager_focusManagerAC = new WeakMap(), _AnnotationEditorUIManager_highlightColors = new WeakMap(), _AnnotationEditorUIManager_highlightWhenShiftUp = new WeakMap(), _AnnotationEditorUIManager_highlightToolbar = new WeakMap(), _AnnotationEditorUIManager_idManager = new WeakMap(), _AnnotationEditorUIManager_isEnabled = new WeakMap(), _AnnotationEditorUIManager_isWaiting = new WeakMap(), _AnnotationEditorUIManager_lastActiveElement = new WeakMap(), _AnnotationEditorUIManager_mode = new WeakMap(), _AnnotationEditorUIManager_selectedEditors = new WeakMap(), _AnnotationEditorUIManager_selectedTextNode = new WeakMap(), _AnnotationEditorUIManager_showAllStates = new WeakMap(), _AnnotationEditorUIManager_previousStates = new WeakMap(), _AnnotationEditorUIManager_translation = new WeakMap(), _AnnotationEditorUIManager_translationTimeoutId = new WeakMap(), _AnnotationEditorUIManager_container = new WeakMap(), _AnnotationEditorUIManager_viewer = new WeakMap(), _AnnotationEditorUIManager_instances = new WeakSet(), _AnnotationEditorUIManager_getAnchorElementForSelection = function _AnnotationEditorUIManager_getAnchorElementForSelection({ anchorNode }) {\n        return anchorNode.nodeType === Node.TEXT_NODE\n            ? anchorNode.parentElement\n            : anchorNode;\n    }, _AnnotationEditorUIManager_getLayerForTextLayer = function _AnnotationEditorUIManager_getLayerForTextLayer(textLayer) {\n        const { currentLayer } = this;\n        if (currentLayer.hasTextLayer(textLayer)) {\n            return currentLayer;\n        }\n        for (const layer of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n            if (layer.hasTextLayer(textLayer)) {\n                return layer;\n            }\n        }\n        return null;\n    }, _AnnotationEditorUIManager_displayHighlightToolbar = function _AnnotationEditorUIManager_displayHighlightToolbar() {\n        const selection = document.getSelection();\n        if (!selection || selection.isCollapsed) {\n            return;\n        }\n        const anchorElement = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getAnchorElementForSelection).call(this, selection);\n        const textLayer = this.getTextLayerForAnchor(anchorElement);\n        const boxes = this.getSelectionBoxes(textLayer);\n        if (!boxes) {\n            return;\n        }\n        this.showEditorToolBar(anchorElement);\n        // this._eventBus.dispatch(\"showannotationeditorui\", {\n        //     source: this,\n        //     details: Object.assign(this.#previousStates, details),\n        // });\n        // this.#highlightToolbar ||= new HighlightToolbar(this);\n        // this.#highlightToolbar.show(textLayer, boxes, this.direction === \"ltr\");\n    }, _AnnotationEditorUIManager_selectionChange = function _AnnotationEditorUIManager_selectionChange() {\n        var _a, _b;\n        const selection = document.getSelection();\n        if (!selection || selection.isCollapsed) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedTextNode, \"f\")) {\n                // this.#highlightToolbar?.hide();\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_selectedTextNode, null, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                    hasSelectedText: false,\n                });\n            }\n            return;\n        }\n        const { anchorNode } = selection;\n        if (anchorNode === kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedTextNode, \"f\")) {\n            return;\n        }\n        const anchorElement = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getAnchorElementForSelection).call(this, selection);\n        // const textLayer = anchorElement.closest(\".textLayer\");\n        const textLayer = this.getTextLayerForAnchor(anchorElement);\n        if (!textLayer) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedTextNode, \"f\")) {\n                (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_highlightToolbar, \"f\")) === null || _a === void 0 ? void 0 : _a.hide();\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_selectedTextNode, null, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                    hasSelectedText: false,\n                });\n            }\n            return;\n        }\n        (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_highlightToolbar, \"f\")) === null || _b === void 0 ? void 0 : _b.hide();\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_selectedTextNode, anchorNode, \"f\");\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n            hasSelectedText: true,\n        });\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT && kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n            return;\n        }\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n            // this.showAllEditors(\"highlight\", true, /* updateButton = */ true);\n            this.showAllEditors(\"highlight\", true);\n        }\n        // this.#highlightWhenShiftUp = this.isShiftKeyDown;\n        if (!this.isShiftKeyDown) {\n            const activeLayer = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT\n                ? kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getLayerForTextLayer).call(this, textLayer)\n                : null;\n            activeLayer === null || activeLayer === void 0 ? void 0 : activeLayer.toggleDrawing();\n            const abortController = new AbortController();\n            const signal = this.combinedSignal(abortController);\n            const pointerup = e => {\n                if (e.type === \"pointerup\" && e.button !== 0) {\n                    // Do nothing on right click.\n                    return;\n                }\n                abortController.abort();\n                activeLayer === null || activeLayer === void 0 ? void 0 : activeLayer.toggleDrawing(true);\n                if (e.type === \"pointerup\") {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_onSelectEnd).call(this, \"main_toolbar\");\n                }\n            };\n            window.removeEventListener(\"pointerup\", pointerup);\n            window.addEventListener(\"pointerup\", pointerup, { signal });\n            window.removeEventListener(\"blur\", pointerup);\n            window.addEventListener(\"blur\", pointerup, { signal });\n        }\n    }, _AnnotationEditorUIManager_onSelectEnd = function _AnnotationEditorUIManager_onSelectEnd(methodOfCreation = \"\") {\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n            this.highlightSelection(methodOfCreation);\n        }\n        else if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_enableHighlightFloatingButton, \"f\")) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_displayHighlightToolbar).call(this);\n        }\n    }, _AnnotationEditorUIManager_addSelectionListener = function _AnnotationEditorUIManager_addSelectionListener() {\n        document.addEventListener(\"selectionchange\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_selectionChange).bind(this), { signal: this._signal });\n    }, _AnnotationEditorUIManager_addFocusManager = function _AnnotationEditorUIManager_addFocusManager() {\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_focusManagerAC, \"f\")) {\n            return;\n        }\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_focusManagerAC, new AbortController(), \"f\");\n        const signal = this.combinedSignal(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_focusManagerAC, \"f\"));\n        window.addEventListener(\"focus\", this.focus.bind(this), { signal });\n        window.addEventListener(\"blur\", this.blur.bind(this), { signal });\n    }, _AnnotationEditorUIManager_removeFocusManager = function _AnnotationEditorUIManager_removeFocusManager() {\n        var _a;\n        (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_focusManagerAC, \"f\")) === null || _a === void 0 ? void 0 : _a.abort();\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_focusManagerAC, null, \"f\");\n    }, _AnnotationEditorUIManager_addKeyboardManager = function _AnnotationEditorUIManager_addKeyboardManager() {\n        //     if (this.#keyboardManagerAC) {\n        //         return;\n        //     }\n        //     this.#keyboardManagerAC = new AbortController();\n        //     const signal = this.combinedSignal(this.#keyboardManagerAC);\n        //     // The keyboard events are caught at the container level in order to be able\n        //     // to execute some callbacks even if the current page doesn't have focus.\n        //     window.addEventListener(\"keydown\", this.keydown.bind(this), { signal });\n        //     window.addEventListener(\"keyup\", this.keyup.bind(this), { signal });\n    }, _AnnotationEditorUIManager_removeKeyboardManager = function _AnnotationEditorUIManager_removeKeyboardManager() {\n        //     this.#keyboardManagerAC?.abort();\n        //     this.#keyboardManagerAC = null;\n    }, _AnnotationEditorUIManager_addCopyPasteListeners = function _AnnotationEditorUIManager_addCopyPasteListeners() {\n        //     if (this.#copyPasteAC) {\n        //         return;\n        //     }\n        //     this.#copyPasteAC = new AbortController();\n        //     const signal = this.combinedSignal(this.#copyPasteAC);\n        //     document.addEventListener(\"copy\", this.copy.bind(this), { signal });\n        //     document.addEventListener(\"cut\", this.cut.bind(this), { signal });\n        //     document.addEventListener(\"paste\", this.paste.bind(this), { signal });\n    }, _AnnotationEditorUIManager_removeCopyPasteListeners = function _AnnotationEditorUIManager_removeCopyPasteListeners() {\n        //     this.#copyPasteAC?.abort();\n        //     this.#copyPasteAC = null;\n    }, _AnnotationEditorUIManager_addDragAndDropListeners = function _AnnotationEditorUIManager_addDragAndDropListeners() {\n        const signal = this._signal;\n        document.addEventListener(\"dragover\", this.dragOver.bind(this), { signal });\n        document.addEventListener(\"drop\", this.drop.bind(this), { signal });\n    }, _AnnotationEditorUIManager_dispatchUpdateStates = function _AnnotationEditorUIManager_dispatchUpdateStates(details) {\n        if (!details) {\n            return;\n        }\n        const hasChanged = Object.entries(details).some(([key, value]) => kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_previousStates, \"f\")[key] !== value);\n        if (hasChanged) {\n            this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n                source: this,\n                details: Object.assign(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_previousStates, \"f\"), details),\n            });\n            // We could listen on our own event but it sounds like a bit weird and\n            // it's a way to simpler to handle that stuff here instead of having to\n            // add something in every place where an editor can be unselected.\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT &&\n                details.hasSelectedEditor === false) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, [\n                    [kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_FREE, true],\n                ]);\n            }\n        }\n    }, _AnnotationEditorUIManager_dispatchUpdateUI = function _AnnotationEditorUIManager_dispatchUpdateUI(details) {\n        this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n            source: this,\n            details,\n        });\n    }, _AnnotationEditorUIManager_enableAll = function _AnnotationEditorUIManager_enableAll() {\n        if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_isEnabled, \"f\")) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_isEnabled, true, \"f\");\n            for (const layer of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n                layer.enable();\n            }\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n                editor.enable();\n            }\n        }\n    }, _AnnotationEditorUIManager_disableAll = function _AnnotationEditorUIManager_disableAll() {\n        this.unselectAll();\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_isEnabled, \"f\")) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorUIManager_isEnabled, false, \"f\");\n            for (const layer of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n                layer.disable();\n            }\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n                editor.disable();\n            }\n        }\n    }, _AnnotationEditorUIManager_addEditorToLayer = function _AnnotationEditorUIManager_addEditorToLayer(editor) {\n        const layer = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allLayers, \"f\").get(editor.pageIndex);\n        if (layer) {\n            layer.addOrRebuild(editor);\n        }\n        else {\n            this.addEditor(editor);\n            this.addToAnnotationStorage(editor);\n        }\n    }, _AnnotationEditorUIManager_lastSelectedEditor_get = function _AnnotationEditorUIManager_lastSelectedEditor_get() {\n        let ed = null;\n        for (ed of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n            // Iterate to get the last element.\n        }\n        return ed;\n    }, _AnnotationEditorUIManager_isEmpty = function _AnnotationEditorUIManager_isEmpty() {\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").size === 0) {\n            return true;\n        }\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").size === 1) {\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n                return editor.isEmpty();\n            }\n        }\n        return false;\n    }, _AnnotationEditorUIManager_selectEditors = function _AnnotationEditorUIManager_selectEditors(editors) {\n        for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n            editor.unselect();\n        }\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n        for (const editor of editors) {\n            if (editor.isEmpty()) {\n                continue;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_selectedEditors, \"f\").add(editor);\n            editor.select();\n        }\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, { hasSelectedEditor: this.hasSelection });\n    };\n    AnnotationEditorUIManager.TRANSLATE_SMALL = 1; // page units.\n    AnnotationEditorUIManager.TRANSLATE_BIG = 10; // page units.\n\n    /* Copyright 2012 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // const WaitOnType = {\n    //     EVENT: \"event\",\n    //     TIMEOUT: \"timeout\",\n    // };\n    var _EventBus_listeners;\n    // /**\n    //  * @typedef {Object} WaitOnEventOrTimeoutParameters\n    //  * @property {Object} target - The event target, can for example be:\n    //  *   `window`, `document`, a DOM element, or an {EventBus} instance.\n    //  * @property {string} name - The name of the event.\n    //  * @property {number} delay - The delay, in milliseconds, after which the\n    //  *   timeout occurs (if the event wasn't already dispatched).\n    //  */\n    // /**\n    //  * Allows waiting for an event or a timeout, whichever occurs first.\n    //  * Can be used to ensure that an action always occurs, even when an event\n    //  * arrives late or not at all.\n    //  *\n    //  * @param {WaitOnEventOrTimeoutParameters}\n    //  * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n    //  */\n    // async function waitOnEventOrTimeout({ target, name, delay = 0 }) {\n    //     if (\n    //         typeof target !== \"object\" ||\n    //         !(name && typeof name === \"string\") ||\n    //         !(Number.isInteger(delay) && delay >= 0)\n    //     ) {\n    //         throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    //     }\n    //     const { promise, resolve } = Promise.withResolvers();\n    //     const ac = new AbortController();\n    //     function handler(type) {\n    //         ac.abort(); // Remove event listener.\n    //         clearTimeout(timeout);\n    //         resolve(type);\n    //     }\n    //     const evtMethod = target instanceof EventBus ? \"_on\" : \"addEventListener\";\n    //     target[evtMethod](name, handler.bind(null, WaitOnType.EVENT), {\n    //         signal: ac.signal,\n    //     });\n    //     const timeout = setTimeout(handler.bind(null, WaitOnType.TIMEOUT), delay);\n    //     return promise;\n    // }\n    /**\n     * Simple event bus for an application. Listeners are attached using the `on`\n     * and `off` methods. To raise an event, the `dispatch` method shall be used.\n     */\n    class EventBus {\n        constructor() {\n            _EventBus_listeners.set(this, Object.create(null));\n        }\n        /**\n         * @param {string} eventName\n         * @param {function} listener\n         * @param {Object} [options]\n         */\n        on(eventName, listener, options = null) {\n            this._on(eventName, listener, {\n                external: true,\n                once: options === null || options === void 0 ? void 0 : options.once,\n                signal: options === null || options === void 0 ? void 0 : options.signal,\n            });\n        }\n        /**\n         * @param {string} eventName\n         * @param {function} listener\n         * @param {Object} [options]\n         */\n        off(eventName, listener) {\n            this._off(eventName, listener);\n        }\n        /**\n         * @param {string} eventName\n         * @param {Object} data\n         */\n        dispatch(eventName, data) {\n            const eventListeners = kendo_dateinputsCommon_cmn_chunk_js.a(this, _EventBus_listeners, \"f\")[eventName];\n            if (!eventListeners || eventListeners.length === 0) {\n                return;\n            }\n            let externalListeners;\n            // Making copy of the listeners array in case if it will be modified\n            // during dispatch.\n            for (const { listener, external, once } of eventListeners.slice(0)) {\n                if (once) {\n                    this._off(eventName, listener);\n                }\n                if (external) {\n                    (externalListeners || (externalListeners = [])).push(listener);\n                    continue;\n                }\n                listener(data);\n            }\n            // Dispatch any \"external\" listeners *after* the internal ones, to give the\n            // viewer components time to handle events and update their state first.\n            if (externalListeners) {\n                for (const listener of externalListeners) {\n                    listener(data);\n                }\n                externalListeners = null;\n            }\n        }\n        /**\n         * @ignore\n         */\n        _on(eventName, listener, options = null) {\n            var _a;\n            let rmAbort = null;\n            if ((options === null || options === void 0 ? void 0 : options.signal) instanceof AbortSignal) {\n                const { signal } = options;\n                if (signal.aborted) {\n                    // console.error(\"Cannot use an `aborted` signal.\");\n                    return;\n                }\n                const onAbort = () => this._off(eventName, listener);\n                rmAbort = () => signal.removeEventListener(\"abort\", onAbort);\n                signal.addEventListener(\"abort\", onAbort);\n            }\n            const eventListeners = ((_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _EventBus_listeners, \"f\"))[eventName] || (_a[eventName] = []));\n            eventListeners.push({\n                listener,\n                external: (options === null || options === void 0 ? void 0 : options.external) === true,\n                once: (options === null || options === void 0 ? void 0 : options.once) === true,\n                rmAbort,\n            });\n        }\n        /**\n         * @ignore\n         */\n        _off(eventName, listener) {\n            var _a;\n            const eventListeners = kendo_dateinputsCommon_cmn_chunk_js.a(this, _EventBus_listeners, \"f\")[eventName];\n            if (!eventListeners) {\n                return;\n            }\n            for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n                const evt = eventListeners[i];\n                if (evt.listener === listener) {\n                    (_a = evt.rmAbort) === null || _a === void 0 ? void 0 : _a.call(evt); // Ensure that the `AbortSignal` listener is removed.\n                    eventListeners.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }\n    _EventBus_listeners = new WeakMap();\n\n    /* Copyright 2012 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // const DEFAULT_SCALE_VALUE = \"auto\";\n    const DEFAULT_SCALE = 1.0;\n    // const DEFAULT_SCALE_DELTA = 1.1;\n    // const MIN_SCALE = 0.1;\n    // const MAX_SCALE = 10.0;\n    // const UNKNOWN_SCALE = 0;\n    // const MAX_AUTO_SCALE = 1.25;\n    // const SCROLLBAR_PADDING = 40;\n    // const VERTICAL_PADDING = 5;\n    const RenderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3,\n    };\n    const PresentationModeState = {\n        UNKNOWN: 0,\n        NORMAL: 1,\n        CHANGING: 2,\n        FULLSCREEN: 3,\n    };\n    // const SidebarView = {\n    //   UNKNOWN: -1,\n    //   NONE: 0,\n    //   THUMBS: 1, // Default value.\n    //   OUTLINE: 2,\n    //   ATTACHMENTS: 3,\n    //   LAYERS: 4,\n    // };\n    const TextLayerMode = {\n        DISABLE: 0,\n        ENABLE: 1,\n        ENABLE_PERMISSIONS: 2,\n    };\n    const ScrollMode = {\n        UNKNOWN: -1,\n        VERTICAL: 0, // Default value.\n        HORIZONTAL: 1,\n        WRAPPED: 2,\n        PAGE: 3,\n    };\n    // const SpreadMode = {\n    //   UNKNOWN: -1,\n    //   NONE: 0, // Default value.\n    //   ODD: 1,\n    //   EVEN: 2,\n    // };\n    // const CursorTool = {\n    //   SELECT: 0, // The default value.\n    //   HAND: 1,\n    //   ZOOM: 2,\n    // };\n    // // Used by `PDFViewerApplication`, and by the API unit-tests.\n    // const AutoPrintRegExp = /\\bprint\\s*\\(/;\n    // /**\n    //  * Scale factors for the canvas, necessary with HiDPI displays.\n    //  */\n    // class OutputScale {\n    //   constructor() {\n    //     const pixelRatio = window.devicePixelRatio || 1;\n    //     /**\n    //      * @type {number} Horizontal scale.\n    //      */\n    //     this.sx = pixelRatio;\n    //     /**\n    //      * @type {number} Vertical scale.\n    //      */\n    //     this.sy = pixelRatio;\n    //   }\n    //   /**\n    //    * @type {boolean} Returns `true` when scaling is required, `false` otherwise.\n    //    */\n    //   get scaled() {\n    //     return this.sx !== 1 || this.sy !== 1;\n    //   }\n    // }\n    /**\n     * Scrolls specified element into view of its parent.\n     * @param {HTMLElement} element - The element to be visible.\n     * @param {Object} [spot] - An object with optional top and left properties,\n     *   specifying the offset from the top left edge.\n     * @param {number} [spot.left]\n     * @param {number} [spot.top]\n     * @param {boolean} [scrollMatches] - When scrolling search results into view,\n     *   ignore elements that either: Contains marked content identifiers,\n     *   or have the CSS-rule `overflow: hidden;` set. The default value is `false`.\n     */\n    function scrollIntoView(element, spot, scrollMatches = false) {\n        // Assuming offsetParent is available (it's not available when viewer is in\n        // hidden iframe or object). We have to scroll: if the offsetParent is not set\n        // producing the error. See also animationStarted.\n        let parent = element.offsetParent;\n        if (!parent) {\n            console.error(\"offsetParent is not set -- cannot scroll\");\n            return;\n        }\n        let offsetY = element.offsetTop + element.clientTop;\n        let offsetX = element.offsetLeft + element.clientLeft;\n        while ((parent.clientHeight === parent.scrollHeight &&\n            parent.clientWidth === parent.scrollWidth) ||\n            (scrollMatches &&\n                (parent.classList.contains(\"markedContent\") || parent.classList.contains(\"k-marked-content\") ||\n                    getComputedStyle(parent).overflow === \"hidden\"))) {\n            offsetY += parent.offsetTop;\n            offsetX += parent.offsetLeft;\n            parent = parent.offsetParent;\n            if (!parent) {\n                return; // no need to scroll\n            }\n        }\n        if (spot) {\n            if (spot.top !== undefined) {\n                offsetY += spot.top;\n            }\n            if (spot.left !== undefined) {\n                offsetX += spot.left;\n                parent.scrollLeft = offsetX;\n            }\n        }\n        parent.scrollTop = offsetY;\n    }\n    // /**\n    //  * Helper function to start monitoring the scroll event and converting them into\n    //  * PDF.js friendly one: with scroll debounce and scroll direction.\n    //  */\n    // function watchScroll(viewAreaElement, callback, abortSignal = undefined) {\n    //   const debounceScroll = function (evt) {\n    //     if (rAF) {\n    //       return;\n    //     }\n    //     // schedule an invocation of scroll for next animation frame.\n    //     rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n    //       rAF = null;\n    //       const currentX = viewAreaElement.scrollLeft;\n    //       const lastX = state.lastX;\n    //       if (currentX !== lastX) {\n    //         state.right = currentX > lastX;\n    //       }\n    //       state.lastX = currentX;\n    //       const currentY = viewAreaElement.scrollTop;\n    //       const lastY = state.lastY;\n    //       if (currentY !== lastY) {\n    //         state.down = currentY > lastY;\n    //       }\n    //       state.lastY = currentY;\n    //       callback(state);\n    //     });\n    //   };\n    //   const state = {\n    //     right: true,\n    //     down: true,\n    //     lastX: viewAreaElement.scrollLeft,\n    //     lastY: viewAreaElement.scrollTop,\n    //     _eventHandler: debounceScroll,\n    //   };\n    //   let rAF = null;\n    //   viewAreaElement.addEventListener(\"scroll\", debounceScroll, {\n    //     useCapture: true,\n    //     signal: abortSignal,\n    //   });\n    //   abortSignal?.addEventListener(\n    //     \"abort\",\n    //     () => window.cancelAnimationFrame(rAF),\n    //     { once: true }\n    //   );\n    //   return state;\n    // }\n    /**\n     * Helper function to parse query string (e.g. ?param1=value&param2=...).\n     * @param {string} query\n     * @returns {Map}\n     */\n    function parseQueryString(query) {\n        const params = new Map();\n        const urlSearchParams = new URLSearchParams(query);\n        for (const [key, value] of urlSearchParams) {\n            // for (const [key, value] of new URLSearchParams(query)) {\n            params.set(key.toLowerCase(), value);\n        }\n        return params;\n    }\n    // const InvisibleCharsRegExp = /[\\x00-\\x1F]/g;\n    // /**\n    //  * @param {string} str\n    //  * @param {boolean} [replaceInvisible]\n    //  */\n    // function removeNullCharacters(str, replaceInvisible = false) {\n    //   if (!InvisibleCharsRegExp.test(str)) {\n    //     return str;\n    //   }\n    //   if (replaceInvisible) {\n    //     return str.replaceAll(InvisibleCharsRegExp, m => (m === \"\\x00\" ? \"\" : \" \"));\n    //   }\n    //   return str.replaceAll(\"\\x00\", \"\");\n    // }\n    /**\n     * Use binary search to find the index of the first item in a given array which\n     * passes a given condition. The items are expected to be sorted in the sense\n     * that if the condition is true for one item in the array, then it is also true\n     * for all following items.\n     *\n     * @returns {number} Index of the first array element to pass the test,\n     *                   or |items.length| if no such element exists.\n     */\n    function binarySearchFirstItem(items, condition, start = 0) {\n        let minIndex = start;\n        let maxIndex = items.length - 1;\n        if (maxIndex < 0 || !condition(items[maxIndex])) {\n            return items.length;\n        }\n        if (condition(items[minIndex])) {\n            return minIndex;\n        }\n        while (minIndex < maxIndex) {\n            const currentIndex = (minIndex + maxIndex) >> 1;\n            const currentItem = items[currentIndex];\n            if (condition(currentItem)) {\n                maxIndex = currentIndex;\n            }\n            else {\n                minIndex = currentIndex + 1;\n            }\n        }\n        return minIndex; /* === maxIndex */\n    }\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _TextAccessibilityManager_instances, _a$8, _TextAccessibilityManager_enabled, _TextAccessibilityManager_textChildren, _TextAccessibilityManager_textNodes, _TextAccessibilityManager_waitingElements, _TextAccessibilityManager_compareElementPositions, _TextAccessibilityManager_addIdToAriaOwns;\n    /**\n     * This class aims to provide some methods:\n     *  - to reorder elements in the DOM with respect to the visual order;\n     *  - to create a link, using aria-owns, between spans in the textLayer and\n     *    annotations in the annotationLayer. The goal is to help to know\n     *    where the annotations are in the text flow.\n     */\n    class TextAccessibilityManager {\n        constructor() {\n            _TextAccessibilityManager_instances.add(this);\n            _TextAccessibilityManager_enabled.set(this, false);\n            _TextAccessibilityManager_textChildren.set(this, null);\n            _TextAccessibilityManager_textNodes.set(this, new Map());\n            _TextAccessibilityManager_waitingElements.set(this, new Map());\n        }\n        setTextMapping(textDivs) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _TextAccessibilityManager_textChildren, textDivs, \"f\");\n        }\n        /**\n         * Function called when the text layer has finished rendering.\n         */\n        enable() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_enabled, \"f\")) {\n                // throw new Error(\"TextAccessibilityManager is already enabled.\");\n            }\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textChildren, \"f\")) {\n                throw new Error(\"Text divs and strings have not been set.\");\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _TextAccessibilityManager_enabled, true, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _TextAccessibilityManager_textChildren, kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textChildren, \"f\").slice(), \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textChildren, \"f\").sort(kendo_dateinputsCommon_cmn_chunk_js.a(_a$8, _a$8, \"m\", _TextAccessibilityManager_compareElementPositions));\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textNodes, \"f\").size > 0) {\n                // Some links have been made before this manager has been disabled, hence\n                // we restore them.\n                const textChildren = kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textChildren, \"f\");\n                for (const [id, nodeIndex] of kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textNodes, \"f\")) {\n                    const element = document.getElementById(id);\n                    if (!element) {\n                        // If the page was *fully* reset the element no longer exists, and it\n                        // will be re-inserted later (i.e. when the annotationLayer renders).\n                        kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textNodes, \"f\").delete(id);\n                        continue;\n                    }\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_instances, \"m\", _TextAccessibilityManager_addIdToAriaOwns).call(this, id, textChildren[nodeIndex]);\n                }\n            }\n            for (const [element, isRemovable] of kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_waitingElements, \"f\")) {\n                this.addPointerInTextLayer(element, isRemovable);\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_waitingElements, \"f\").clear();\n        }\n        disable() {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_enabled, \"f\")) {\n                return;\n            }\n            // Don't clear this.#textNodes which is used to rebuild the aria-owns\n            // in case it's re-enabled at some point.\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_waitingElements, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _TextAccessibilityManager_textChildren, null, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _TextAccessibilityManager_enabled, false, \"f\");\n        }\n        /**\n         * Remove an aria-owns id from a node in the text layer.\n         * @param {HTMLElement} element\n         */\n        removePointerInTextLayer(element) {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_enabled, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_waitingElements, \"f\").delete(element);\n                return;\n            }\n            const children = kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textChildren, \"f\");\n            if (!children || children.length === 0) {\n                return;\n            }\n            const { id } = element;\n            const nodeIndex = kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textNodes, \"f\").get(id);\n            if (nodeIndex === undefined) {\n                return;\n            }\n            const node = children[nodeIndex];\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textNodes, \"f\").delete(id);\n            let owns = node.getAttribute(\"aria-owns\");\n            if (owns === null || owns === void 0 ? void 0 : owns.includes(id)) {\n                owns = owns\n                    .split(\" \")\n                    .filter(x => x !== id)\n                    .join(\" \");\n                if (owns) {\n                    node.setAttribute(\"aria-owns\", owns);\n                }\n                else {\n                    node.removeAttribute(\"aria-owns\");\n                    node.setAttribute(\"role\", \"presentation\");\n                }\n            }\n        }\n        /**\n         * Find the text node which is the nearest and add an aria-owns attribute\n         * in order to correctly position this editor in the text flow.\n         * @param {HTMLElement} element\n         * @param {boolean} isRemovable\n         * @returns {string|null} The id in the struct tree if any.\n         */\n        addPointerInTextLayer(element, isRemovable) {\n            // todo: mocked highlight editor is null here\n            if (!element) {\n                console.warn(\"no element\");\n                return;\n            }\n            const { id } = element;\n            if (!id) {\n                return null;\n            }\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_enabled, \"f\")) {\n                // The text layer needs to be there, so we postpone the association.\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_waitingElements, \"f\").set(element, isRemovable);\n                return null;\n            }\n            if (isRemovable) {\n                this.removePointerInTextLayer(element);\n            }\n            const children = kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textChildren, \"f\");\n            if (!children || children.length === 0) {\n                return null;\n            }\n            const index = binarySearchFirstItem(children, node => kendo_dateinputsCommon_cmn_chunk_js.a(_a$8, _a$8, \"m\", _TextAccessibilityManager_compareElementPositions).call(_a$8, element, node) < 0);\n            const nodeIndex = Math.max(0, index - 1);\n            const child = children[nodeIndex];\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_instances, \"m\", _TextAccessibilityManager_addIdToAriaOwns).call(this, id, child);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextAccessibilityManager_textNodes, \"f\").set(id, nodeIndex);\n            const parent = child.parentNode;\n            // return parent?.classList.contains(\"markedContent\") ? parent.id : null;\n            return (parent === null || parent === void 0 ? void 0 : parent.classList.contains(\"markedContent\")) ||\n                (parent === null || parent === void 0 ? void 0 : parent.classList.contains(\"k-marked-content\")) ? parent.id : null;\n        }\n        /**\n         * Move a div in the DOM in order to respect the visual order.\n         * @param {HTMLDivElement} element\n         * @returns {string|null} The id in the struct tree if any.\n         */\n        moveElementInDOM(container, element, contentElement, isRemovable) {\n            const id = this.addPointerInTextLayer(contentElement, isRemovable);\n            if (!container.hasChildNodes()) {\n                container.append(element);\n                return id;\n            }\n            // todo: use children to skip text nodes\n            // const children = Array.from(container.childNodes).filter(\n            const children = Array.from(container.children).filter(node => node !== element);\n            if (children.length === 0) {\n                return id;\n            }\n            const elementToCompare = contentElement || element;\n            const index = binarySearchFirstItem(children, node => kendo_dateinputsCommon_cmn_chunk_js.a(_a$8, _a$8, \"m\", _TextAccessibilityManager_compareElementPositions).call(_a$8, elementToCompare, node) < 0);\n            if (index === 0) {\n                children[0].before(element);\n            }\n            else {\n                children[index - 1].after(element);\n            }\n            return id;\n        }\n    }\n    _a$8 = TextAccessibilityManager, _TextAccessibilityManager_enabled = new WeakMap(), _TextAccessibilityManager_textChildren = new WeakMap(), _TextAccessibilityManager_textNodes = new WeakMap(), _TextAccessibilityManager_waitingElements = new WeakMap(), _TextAccessibilityManager_instances = new WeakSet(), _TextAccessibilityManager_compareElementPositions = function _TextAccessibilityManager_compareElementPositions(e1, e2) {\n        const rect1 = e1.getBoundingClientRect();\n        const rect2 = e2.getBoundingClientRect();\n        if (rect1.width === 0 && rect1.height === 0) {\n            return +1;\n        }\n        if (rect2.width === 0 && rect2.height === 0) {\n            return -1;\n        }\n        const top1 = rect1.y;\n        const bot1 = rect1.y + rect1.height;\n        const mid1 = rect1.y + rect1.height / 2;\n        const top2 = rect2.y;\n        const bot2 = rect2.y + rect2.height;\n        const mid2 = rect2.y + rect2.height / 2;\n        if (mid1 <= top2 && mid2 >= bot1) {\n            return -1;\n        }\n        if (mid2 <= top1 && mid1 >= bot2) {\n            return +1;\n        }\n        const centerX1 = rect1.x + rect1.width / 2;\n        const centerX2 = rect2.x + rect2.width / 2;\n        return centerX1 - centerX2;\n    }, _TextAccessibilityManager_addIdToAriaOwns = function _TextAccessibilityManager_addIdToAriaOwns(id, node) {\n        const owns = node.getAttribute(\"aria-owns\");\n        if (!(owns === null || owns === void 0 ? void 0 : owns.includes(id))) {\n            node.setAttribute(\"aria-owns\", owns ? `${owns} ${id}` : id);\n        }\n        node.removeAttribute(\"role\");\n    };\n\n    /* Copyright 2012 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _TextLayerBuilder_instances, _a$7, _TextLayerBuilder_onAppend, _TextLayerBuilder_textLayer, _TextLayerBuilder_textLayers, _TextLayerBuilder_selectionChangeAbortController, _TextLayerBuilder_bindMouse, _TextLayerBuilder_removeGlobalSelectionListener, _TextLayerBuilder_enableGlobalSelectionListener;\n    /**\n     * The text layer builder provides text selection functionality for the PDF.\n     * It does this by creating overlay divs over the PDF's text. These divs\n     * contain text that matches the PDF text they are overlaying.\n     */\n    class TextLayerBuilder {\n        constructor({ pdfPage, \n        // highlighter = null,\n        accessibilityManager, \n        // enablePermissions = false,\n        // todo: fix styles\n        styles, onAppend = null, }) {\n            _TextLayerBuilder_instances.add(this);\n            // todo: props\n            this.pdfPage = null;\n            // highlighter = null;\n            this.div = null;\n            this.accessibilityManager = null;\n            // todo: props\n            // #enablePermissions = false;\n            _TextLayerBuilder_onAppend.set(this, null);\n            // #renderingDone = false;\n            _TextLayerBuilder_textLayer.set(this, null);\n            this.pdfPage = pdfPage;\n            // this.highlighter = highlighter;\n            this.accessibilityManager = accessibilityManager;\n            // this.#enablePermissions = enablePermissions === true;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _TextLayerBuilder_onAppend, onAppend, \"f\");\n            this.div = document.createElement(\"div\");\n            this.div.tabIndex = 0;\n            // this.div.className = \"textLayer\";\n            // todo: fix classes\n            this.div.classList.add(\"k-text-layer\");\n            // todo: fix styles\n            Object.keys(styles).forEach((key) => (this.div.style[key] = styles[key]));\n        }\n        /**\n         * Renders the text layer.\n         * @param {PageViewport} viewport\n         * @param {Object} [textContentParams]\n         */\n        render(viewport_1) {\n            return kendo_dateinputsCommon_cmn_chunk_js.b(this, arguments, void 0, function* (viewport, textContentParams = null) {\n                var _a, _b, _c;\n                // if (this.#renderingDone && this.#textLayer) {\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextLayerBuilder_textLayer, \"f\")) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextLayerBuilder_textLayer, \"f\").update({\n                        viewport,\n                        onBefore: this.hide.bind(this),\n                    });\n                    this.show();\n                    return;\n                }\n                this.cancel();\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _TextLayerBuilder_textLayer, new kendo_pdfjs_loader_js.TextLayer({\n                    textContentSource: this.pdfPage.streamTextContent(textContentParams || {\n                        // includeMarkedContent: true,\n                        // setting this to false requires removing \"await\"\n                        // in page.ts when calling this.#renderTextLayer()\n                        includeMarkedContent: false,\n                        disableNormalization: true,\n                    }),\n                    container: this.div,\n                    viewport,\n                }), \"f\");\n                // const { textDivs, textContentItemsStr } = this.#textLayer;\n                const { textDivs } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextLayerBuilder_textLayer, \"f\");\n                // this.highlighter?.setTextMapping(textDivs, textContentItemsStr);\n                (_a = this.accessibilityManager) === null || _a === void 0 ? void 0 : _a.setTextMapping(textDivs);\n                yield kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextLayerBuilder_textLayer, \"f\").render();\n                // this.#renderingDone = true;\n                // todo: manually add \"k-marked-content\" class\n                // as pdf.js text layer cannot render it\n                const markedContentElements = Array.from(this.div.querySelectorAll(\".markedContent\") || []) || [];\n                markedContentElements.forEach(x => addClass(\"k-marked-content\", x));\n                if (markedContentElements && markedContentElements.length > 0) {\n                    const endOfContent = document.createElement(\"div\");\n                    endOfContent.className = \"endOfContent\";\n                    this.div.append(endOfContent);\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextLayerBuilder_instances, \"m\", _TextLayerBuilder_bindMouse).call(this, endOfContent);\n                }\n                // Ensure that the textLayer is appended to the DOM *before* handling\n                // e.g. a pending search operation.\n                (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextLayerBuilder_onAppend, \"f\")) === null || _b === void 0 ? void 0 : _b.call(this, this.div);\n                // this.highlighter?.enable();\n                (_c = this.accessibilityManager) === null || _c === void 0 ? void 0 : _c.enable();\n            });\n        }\n        hide() {\n            // if (!this.div.hidden && this.#renderingDone) {\n            if (!this.div.hidden) {\n                // We turn off the highlighter in order to avoid to scroll into view an\n                // element of the text layer which could be hidden.\n                // this.highlighter?.disable();\n                this.div.hidden = true;\n            }\n        }\n        show() {\n            // if (this.div.hidden && this.#renderingDone) {\n            if (this.div.hidden) {\n                this.div.hidden = false;\n                // this.highlighter?.enable();\n            }\n        }\n        /**\n         * Cancel rendering of the text layer.\n         */\n        cancel() {\n            var _b, _c;\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _TextLayerBuilder_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.cancel();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _TextLayerBuilder_textLayer, null, \"f\");\n            // this.highlighter?.disable();\n            (_c = this.accessibilityManager) === null || _c === void 0 ? void 0 : _c.disable();\n            kendo_dateinputsCommon_cmn_chunk_js.a(_a$7, _a$7, \"m\", _TextLayerBuilder_removeGlobalSelectionListener).call(_a$7, this.div);\n        }\n    }\n    _a$7 = TextLayerBuilder, _TextLayerBuilder_onAppend = new WeakMap(), _TextLayerBuilder_textLayer = new WeakMap(), _TextLayerBuilder_instances = new WeakSet(), _TextLayerBuilder_bindMouse = function _TextLayerBuilder_bindMouse(end) {\n        const { div } = this;\n        // div.addEventListener(\"mousedown\", () => {\n        //     div.classList.add(\"selecting\");\n        // });\n        // div.addEventListener(\"copy\", event => {\n        //     if (!this.#enablePermissions) {\n        //         const selection = document.getSelection();\n        //         event.clipboardData.setData(\n        //             \"text/plain\",\n        //             removeNullCharacters(normalizeUnicode(selection.toString()))\n        //         );\n        //     }\n        //     event.preventDefault();\n        //     event.stopPropagation();\n        // });\n        kendo_dateinputsCommon_cmn_chunk_js.a(_a$7, _a$7, \"f\", _TextLayerBuilder_textLayers).set(div, end);\n        kendo_dateinputsCommon_cmn_chunk_js.a(_a$7, _a$7, \"m\", _TextLayerBuilder_enableGlobalSelectionListener).call(_a$7);\n    }, _TextLayerBuilder_removeGlobalSelectionListener = function _TextLayerBuilder_removeGlobalSelectionListener(textLayerDiv) {\n        var _b;\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _a$7, \"f\", _TextLayerBuilder_textLayers).delete(textLayerDiv);\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _a$7, \"f\", _TextLayerBuilder_textLayers).size === 0) {\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _a$7, \"f\", _TextLayerBuilder_selectionChangeAbortController)) === null || _b === void 0 ? void 0 : _b.abort();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _a$7, null, \"f\", _TextLayerBuilder_selectionChangeAbortController);\n        }\n    }, _TextLayerBuilder_enableGlobalSelectionListener = function _TextLayerBuilder_enableGlobalSelectionListener() {\n        // if (this.#selectionChangeAbortController) {\n        //     // document-level event listeners already installed\n        //     return;\n        // }\n        // this.#selectionChangeAbortController = new AbortController();\n        // const { signal } = this.#selectionChangeAbortController;\n        // const reset = (end, textLayer) => {\n        //     if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        //         textLayer.append(end);\n        //         end.style.width = \"\";\n        //         end.style.height = \"\";\n        //     }\n        //     textLayer.classList.remove(\"selecting\");\n        // };\n        // let isPointerDown = false;\n        // document.addEventListener(\n        //     \"pointerdown\",\n        //     () => {\n        //         isPointerDown = true;\n        //     },\n        //     { signal }\n        // );\n        // document.addEventListener(\n        //     \"pointerup\",\n        //     () => {\n        //         isPointerDown = false;\n        //         this.#textLayers.forEach(reset);\n        //     },\n        //     { signal }\n        // );\n        // window.addEventListener(\n        //     \"blur\",\n        //     () => {\n        //         isPointerDown = false;\n        //         this.#textLayers.forEach(reset);\n        //     },\n        //     { signal }\n        // );\n        // document.addEventListener(\n        //     \"keyup\",\n        //     () => {\n        //         if (!isPointerDown) {\n        //             this.#textLayers.forEach(reset);\n        //         }\n        //     },\n        //     { signal }\n        // );\n        // if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        //     // eslint-disable-next-line no-var\n        //     var isFirefox, prevRange;\n        // }\n        // document.addEventListener(\n        //     \"selectionchange\",\n        //     () => {\n        //         const selection = document.getSelection();\n        //         if (selection.rangeCount === 0) {\n        //             this.#textLayers.forEach(reset);\n        //             return;\n        //         }\n        //         // Even though the spec says that .rangeCount should be 0 or 1, Firefox\n        //         // creates multiple ranges when selecting across multiple pages.\n        //         // Make sure to collect all the .textLayer elements where the selection\n        //         // is happening.\n        //         const activeTextLayers = new Set();\n        //         for (let i = 0; i < selection.rangeCount; i++) {\n        //             const range = selection.getRangeAt(i);\n        //             for (const textLayerDiv of this.#textLayers.keys()) {\n        //                 if (\n        //                     !activeTextLayers.has(textLayerDiv) &&\n        //                     range.intersectsNode(textLayerDiv)\n        //                 ) {\n        //                     activeTextLayers.add(textLayerDiv);\n        //                 }\n        //             }\n        //         }\n        //         for (const [textLayerDiv, endDiv] of this.#textLayers) {\n        //             if (activeTextLayers.has(textLayerDiv)) {\n        //                 textLayerDiv.classList.add(\"selecting\");\n        //             } else {\n        //                 reset(endDiv, textLayerDiv);\n        //             }\n        //         }\n        //         if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        //             return;\n        //         }\n        //         if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        //             isFirefox ??=\n        //                 getComputedStyle(\n        //                     this.#textLayers.values().next().value\n        //                 ).getPropertyValue(\"-moz-user-select\") === \"none\";\n        //             if (isFirefox) {\n        //                 return;\n        //             }\n        //         }\n        //         // In non-Firefox browsers, when hovering over an empty space (thus,\n        //         // on .endOfContent), the selection will expand to cover all the\n        //         // text between the current selection and .endOfContent. By moving\n        //         // .endOfContent to right after (or before, depending on which side\n        //         // of the selection the user is moving), we limit the selection jump\n        //         // to at most cover the enteirety of the <span> where the selection\n        //         // is being modified.\n        //         const range = selection.getRangeAt(0);\n        //         const modifyStart =\n        //             prevRange &&\n        //             (range.compareBoundaryPoints(Range.END_TO_END, prevRange) === 0 ||\n        //                 range.compareBoundaryPoints(Range.START_TO_END, prevRange) === 0);\n        //         let anchor = modifyStart ? range.startContainer : range.endContainer;\n        //         if (anchor.nodeType === Node.TEXT_NODE) {\n        //             anchor = anchor.parentNode;\n        //         }\n        //         const parentTextLayer = anchor.parentElement.closest(\".textLayer\");\n        //         const endDiv = this.#textLayers.get(parentTextLayer);\n        //         if (endDiv) {\n        //             endDiv.style.width = parentTextLayer.style.width;\n        //             endDiv.style.height = parentTextLayer.style.height;\n        //             anchor.parentElement.insertBefore(\n        //                 endDiv,\n        //                 modifyStart ? anchor : anchor.nextSibling\n        //             );\n        //         }\n        //         prevRange = range.cloneRange();\n        //     },\n        //     { signal }\n        // );\n    };\n    _TextLayerBuilder_textLayers = { value: new Map() };\n    _TextLayerBuilder_selectionChangeAbortController = { value: null };\n\n    /* Copyright 2020 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * PLEASE NOTE: This file is currently imported in both the `../display/` and\n     *              `../scripting_api/` folders, hence be EXTREMELY careful about\n     *              introducing any dependencies here since that can lead to an\n     *              unexpected/unnecessary size increase of the *built* files.\n     */\n    function makeColorComp(n) {\n        return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n            .toString(16)\n            .padStart(2, \"0\");\n    }\n    function scaleAndClamp(x) {\n        return Math.max(0, Math.min(255, 255 * x));\n    }\n    // PDF specifications section 10.3\n    class ColorConverters {\n        static CMYK_G([c, y, m, k]) {\n            return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n        }\n        static G_CMYK([g]) {\n            return [\"CMYK\", 0, 0, 0, 1 - g];\n        }\n        static G_RGB([g]) {\n            return [\"RGB\", g, g, g];\n        }\n        static G_rgb([g]) {\n            g = scaleAndClamp(g);\n            return [g, g, g];\n        }\n        static G_HTML([g]) {\n            const G = makeColorComp(g);\n            return `#${G}${G}${G}`;\n        }\n        static RGB_G([r, g, b]) {\n            return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n        }\n        static RGB_rgb(color) {\n            return color.map(scaleAndClamp);\n        }\n        static RGB_HTML(color) {\n            return `#${color.map(makeColorComp).join(\"\")}`;\n        }\n        static T_HTML() {\n            return \"#00000000\";\n        }\n        static T_rgb() {\n            return [null];\n        }\n        static CMYK_RGB([c, y, m, k]) {\n            return [\n                \"RGB\",\n                1 - Math.min(1, c + k),\n                1 - Math.min(1, m + k),\n                1 - Math.min(1, y + k),\n            ];\n        }\n        static CMYK_rgb([c, y, m, k]) {\n            return [\n                scaleAndClamp(1 - Math.min(1, c + k)),\n                scaleAndClamp(1 - Math.min(1, m + k)),\n                scaleAndClamp(1 - Math.min(1, y + k)),\n            ];\n        }\n        static CMYK_HTML(components) {\n            const rgb = this.CMYK_RGB(components).slice(1);\n            return this.RGB_HTML(rgb);\n        }\n        static RGB_CMYK([r, g, b]) {\n            const c = 1 - r;\n            const m = 1 - g;\n            const y = 1 - b;\n            const k = Math.min(c, m, y);\n            return [\"CMYK\", c, m, y, k];\n        }\n    }\n\n    /* Copyright 2014 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _AnnotationElement_instances, _AnnotationElement_updates, _AnnotationElement_hasBorder, _AnnotationElement_popupElement, _AnnotationElement_setRectEdited, _LinkAnnotationElement_instances, _LinkAnnotationElement_setInternalLink, _LinkAnnotationElement_bindAttachment, _LinkAnnotationElement_bindSetOCGState, _PopupElement_instances, _PopupElement_boundKeyDown, _PopupElement_boundHide, _PopupElement_boundShow, _PopupElement_boundToggle, _PopupElement_color, _PopupElement_container, _PopupElement_contentsObj, _PopupElement_dateObj, _PopupElement_elements, _PopupElement_parent, _PopupElement_parentRect, _PopupElement_pinned, _PopupElement_popup, _PopupElement_position, _PopupElement_rect, _PopupElement_richText, _PopupElement_titleObj, _PopupElement_updates, _PopupElement_wasVisible, _PopupElement_html_get, _PopupElement_fontSize_get, _PopupElement_fontColor_get, _PopupElement_makePopupContent, _PopupElement_keyDown, _PopupElement_setPosition, _PopupElement_toggle, _PopupElement_show, _PopupElement_hide, _AnnotationLayer_instances, _AnnotationLayer_accessibilityManager, _AnnotationLayer_annotationCanvasMap, _AnnotationLayer_editableAnnotations, _AnnotationLayer_appendElement, _AnnotationLayer_setAnnotationCanvasMap;\n    // import { AnnotationStorage } from \"pdfjs-dist/types/src/display/annotation_storage\";\n    // import { AnnotationStorage } from \"pdfjs-dist/types/src/display/annotation_storage\";\n    // const DEFAULT_TAB_INDEX = 1000;\n    // it is unclear why the value 1000 is chosen by pdf.js\n    // kendo a11y tests fail if this is not 0\n    const DEFAULT_TAB_INDEX = 0;\n    const DEFAULT_FONT_SIZE = 9;\n    const GetElementsByNameSet = new WeakSet();\n    function getRectDims(rect) {\n        return {\n            width: rect[2] - rect[0],\n            height: rect[3] - rect[1],\n        };\n    }\n    class AnnotationElementFactory {\n        /**\n         * @param {AnnotationElementParameters} parameters\n         * @returns {AnnotationElement}\n         */\n        static create(parameters) {\n            const subtype = parameters.data.annotationType;\n            switch (subtype) {\n                case AnnotationType.LINK:\n                    return new LinkAnnotationElement(parameters);\n                // case AnnotationType.TEXT:\n                //     return new TextAnnotationElement(parameters);\n                // case AnnotationType.WIDGET:\n                //     const fieldType = parameters.data.fieldType;\n                //     switch (fieldType) {\n                //         case \"Tx\":\n                //             return new TextWidgetAnnotationElement(parameters);\n                //         case \"Btn\":\n                //             if (parameters.data.radioButton) {\n                //                 return new RadioButtonWidgetAnnotationElement(parameters);\n                //             } else if (parameters.data.checkBox) {\n                //                 return new CheckboxWidgetAnnotationElement(parameters);\n                //             }\n                //             return new PushButtonWidgetAnnotationElement(parameters);\n                //         case \"Ch\":\n                //             return new ChoiceWidgetAnnotationElement(parameters);\n                //         case \"Sig\":\n                //             return new SignatureWidgetAnnotationElement(parameters);\n                //         default: break;\n                //     }\n                //     return new WidgetAnnotationElement(parameters);\n                // case AnnotationType.POPUP:\n                //     return new PopupAnnotationElement(parameters);\n                case AnnotationType.FREETEXT:\n                    return new FreeTextAnnotationElement(parameters);\n                // case AnnotationType.LINE:\n                //     return new LineAnnotationElement(parameters);\n                // case AnnotationType.SQUARE:\n                //     return new SquareAnnotationElement(parameters);\n                // case AnnotationType.CIRCLE:\n                //     return new CircleAnnotationElement(parameters);\n                // case AnnotationType.POLYLINE:\n                //     return new PolylineAnnotationElement(parameters);\n                // case AnnotationType.CARET:\n                //     return new CaretAnnotationElement(parameters);\n                // case AnnotationType.INK:\n                //     return new InkAnnotationElement(parameters);\n                // case AnnotationType.POLYGON:\n                //     return new PolygonAnnotationElement(parameters);\n                case AnnotationType.HIGHLIGHT:\n                    return new HighlightAnnotationElement(parameters);\n                // case AnnotationType.UNDERLINE:\n                //     return new UnderlineAnnotationElement(parameters);\n                // case AnnotationType.SQUIGGLY:\n                //     return new SquigglyAnnotationElement(parameters);\n                // case AnnotationType.STRIKEOUT:\n                //     return new StrikeOutAnnotationElement(parameters);\n                // case AnnotationType.STAMP:\n                //     return new StampAnnotationElement(parameters);\n                // case AnnotationType.FILEATTACHMENT:\n                //     return new FileAttachmentAnnotationElement(parameters);\n                default:\n                    return new AnnotationElement(parameters);\n            }\n        }\n    }\n    class AnnotationElement {\n        constructor(parameters, { isRenderable = false, ignoreBorder = false, createQuadrilaterals = false, } = {}) {\n            _AnnotationElement_instances.add(this);\n            // todo: props\n            this.isRenderable = null;\n            this.data = null;\n            this.layer = null;\n            this.linkService = null;\n            this.downloadManager = null;\n            this.imageResourcesPath = null;\n            this.renderForms = null;\n            this.svgFactory = null;\n            this.annotationStorage = null;\n            this.enableScripting = null;\n            this.hasJSActions = null;\n            this._fieldObjects = null;\n            this.parent = null;\n            this.container = null;\n            this.popup = null;\n            this.annotationEditorType = null;\n            // todo: props\n            _AnnotationElement_updates.set(this, null);\n            _AnnotationElement_hasBorder.set(this, false);\n            _AnnotationElement_popupElement.set(this, null);\n            this.isRenderable = isRenderable;\n            this.data = parameters.data;\n            this.layer = parameters.layer;\n            this.linkService = parameters.linkService;\n            this.downloadManager = parameters.downloadManager;\n            this.imageResourcesPath = parameters.imageResourcesPath;\n            this.renderForms = parameters.renderForms;\n            this.svgFactory = parameters.svgFactory;\n            this.annotationStorage = parameters.annotationStorage;\n            this.enableScripting = parameters.enableScripting;\n            this.hasJSActions = parameters.hasJSActions;\n            this._fieldObjects = parameters.fieldObjects;\n            this.parent = parameters.parent;\n            if (isRenderable) {\n                this.container = this._createContainer(ignoreBorder);\n            }\n            if (createQuadrilaterals) {\n                this._createQuadrilaterals();\n            }\n        }\n        static _hasPopupData({ titleObj, contentsObj, richText }) {\n            return !!((titleObj === null || titleObj === void 0 ? void 0 : titleObj.str) || (contentsObj === null || contentsObj === void 0 ? void 0 : contentsObj.str) || (richText === null || richText === void 0 ? void 0 : richText.str));\n        }\n        get _isEditable() {\n            return this.data.isEditable;\n        }\n        get hasPopupData() {\n            return AnnotationElement._hasPopupData(this.data);\n        }\n        updateEdited(params) {\n            var _a;\n            if (!this.container) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationElement_updates, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_updates, \"f\") || {\n                rect: this.data.rect.slice(0),\n            }, \"f\");\n            const { rect } = params;\n            if (rect) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_instances, \"m\", _AnnotationElement_setRectEdited).call(this, rect);\n            }\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_popupElement, \"f\")) === null || _a === void 0 ? void 0 : _a.popup.updateEdited(params);\n        }\n        resetEdited() {\n            var _a;\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_updates, \"f\")) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_instances, \"m\", _AnnotationElement_setRectEdited).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_updates, \"f\").rect);\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_popupElement, \"f\")) === null || _a === void 0 ? void 0 : _a.popup.resetEdited();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationElement_updates, null, \"f\");\n        }\n        /**\n         * Create an empty container for the annotation's HTML element.\n         *\n         * @private\n         * @param {boolean} ignoreBorder\n         * @memberof AnnotationElement\n         * @returns {HTMLElement} A section element.\n         */\n        _createContainer(ignoreBorder) {\n            const { data, parent: { page, viewport }, } = this;\n            const container = document.createElement(\"section\");\n            container.setAttribute(\"data-annotation-id\", data.id);\n            if (!(this instanceof WidgetAnnotationElement)) {\n                container.tabIndex = DEFAULT_TAB_INDEX;\n            }\n            const { style } = container;\n            // The accessibility manager will move the annotation in the DOM in\n            // order to match the visual ordering.\n            // But if an annotation is above an other one, then we must draw it\n            // after the other one whatever the order is in the DOM, hence the\n            // use of the z-index.\n            style.zIndex = (this.parent.zIndex++).toString();\n            if (data.popupRef) {\n                container.setAttribute(\"aria-haspopup\", \"dialog\");\n            }\n            if (data.alternativeText) {\n                container.title = data.alternativeText;\n            }\n            if (data.noRotate) {\n                // container.classList.add(\"norotate\");\n            }\n            if (!data.rect || this instanceof PopupAnnotationElement) {\n                const { rotation: rotationValue } = data;\n                if (!data.hasOwnCanvas && rotationValue !== 0) {\n                    this.setRotation(rotationValue, container);\n                }\n                return container;\n            }\n            const { width, height } = getRectDims(data.rect);\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n                style.borderWidth = `${data.borderStyle.width}px`;\n                const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n                const verticalRadius = data.borderStyle.verticalCornerRadius;\n                if (horizontalRadius > 0 || verticalRadius > 0) {\n                    const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n                    style.borderRadius = radius;\n                }\n                else if (this instanceof RadioButtonWidgetAnnotationElement) {\n                    const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n                    style.borderRadius = radius;\n                }\n                switch (data.borderStyle.style) {\n                    case AnnotationBorderStyleType.SOLID:\n                        style.borderStyle = \"solid\";\n                        break;\n                    case AnnotationBorderStyleType.DASHED:\n                        style.borderStyle = \"dashed\";\n                        break;\n                    case AnnotationBorderStyleType.BEVELED:\n                        // warn(\"Unimplemented border style: beveled\");\n                        break;\n                    case AnnotationBorderStyleType.INSET:\n                        // warn(\"Unimplemented border style: inset\");\n                        break;\n                    case AnnotationBorderStyleType.UNDERLINE:\n                        style.borderBottomStyle = \"solid\";\n                        break;\n                    default:\n                        break;\n                }\n                const borderColor = data.borderColor || null;\n                if (borderColor) {\n                    kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationElement_hasBorder, true, \"f\");\n                    style.borderColor = kendo_pdfjs_loader_js.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n                }\n                else {\n                    // Transparent (invisible) border, so do not draw it at all.\n                    style.borderWidth = (0).toString();\n                }\n            }\n            // Do *not* modify `data.rect`, since that will corrupt the annotation\n            // position on subsequent calls to `_createContainer` (see issue 6804).\n            const rect = kendo_pdfjs_loader_js.Util.normalizeRect([\n                data.rect[0],\n                page.view[3] - data.rect[1] + page.view[1],\n                data.rect[2],\n                page.view[3] - data.rect[3] + page.view[1],\n            ]);\n            const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n            style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n            style.top = `${(100 * (rect[1] - pageY)) / pageHeight}%`;\n            const { rotation } = data;\n            if (data.hasOwnCanvas || rotation === 0) {\n                style.width = `${(100 * width) / pageWidth}%`;\n                style.height = `${(100 * height) / pageHeight}%`;\n            }\n            else {\n                this.setRotation(rotation, container);\n            }\n            return container;\n        }\n        setRotation(angle, container = this.container) {\n            if (!this.data.rect) {\n                return;\n            }\n            const { pageWidth, pageHeight } = this.parent.viewport.rawDims;\n            const { width, height } = getRectDims(this.data.rect);\n            let elementWidth, elementHeight;\n            if (angle % 180 === 0) {\n                elementWidth = (100 * width) / pageWidth;\n                elementHeight = (100 * height) / pageHeight;\n            }\n            else {\n                elementWidth = (100 * height) / pageWidth;\n                elementHeight = (100 * width) / pageHeight;\n            }\n            container.style.width = `${elementWidth}%`;\n            container.style.height = `${elementHeight}%`;\n            container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n        }\n        get _commonActions() {\n            const setColor = (jsName, styleName, event) => {\n                const color = event.detail[jsName];\n                const colorType = color[0];\n                const colorArray = color.slice(1);\n                event.target.style[styleName] =\n                    ColorConverters[`${colorType}_HTML`](colorArray);\n                this.annotationStorage.setValue(this.data.id, {\n                    [styleName]: ColorConverters[`${colorType}_rgb`](colorArray),\n                });\n            };\n            return kendo_pdfjs_loader_js.shadow(this, \"_commonActions\", {\n                display: event => {\n                    const { display } = event.detail;\n                    // See scripting/constants.js for the values of `Display`.\n                    // 0 = visible, 1 = hidden, 2 = noPrint and 3 = noView.\n                    const hidden = display % 2 === 1;\n                    this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                    this.annotationStorage.setValue(this.data.id, {\n                        noView: hidden,\n                        noPrint: display === 1 || display === 2,\n                    });\n                },\n                print: event => {\n                    this.annotationStorage.setValue(this.data.id, {\n                        noPrint: !event.detail.print,\n                    });\n                },\n                hidden: event => {\n                    const { hidden } = event.detail;\n                    this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                    this.annotationStorage.setValue(this.data.id, {\n                        noPrint: hidden,\n                        noView: hidden,\n                    });\n                },\n                focus: event => {\n                    setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n                },\n                userName: event => {\n                    // tooltip\n                    event.target.title = event.detail.userName;\n                },\n                readonly: event => {\n                    event.target.disabled = event.detail.readonly;\n                },\n                required: event => {\n                    this._setRequired(event.target, event.detail.required);\n                },\n                bgColor: event => {\n                    setColor(\"bgColor\", \"backgroundColor\", event);\n                },\n                fillColor: event => {\n                    setColor(\"fillColor\", \"backgroundColor\", event);\n                },\n                fgColor: event => {\n                    setColor(\"fgColor\", \"color\", event);\n                },\n                textColor: event => {\n                    setColor(\"textColor\", \"color\", event);\n                },\n                borderColor: event => {\n                    setColor(\"borderColor\", \"borderColor\", event);\n                },\n                strokeColor: event => {\n                    setColor(\"strokeColor\", \"borderColor\", event);\n                },\n                rotation: event => {\n                    const angle = event.detail.rotation;\n                    this.setRotation(angle);\n                    this.annotationStorage.setValue(this.data.id, {\n                        rotation: angle,\n                    });\n                },\n            });\n        }\n        _dispatchEventFromSandbox(actions, jsEvent) {\n            const commonActions = this._commonActions;\n            for (const name of Object.keys(jsEvent.detail)) {\n                const action = actions[name] || commonActions[name];\n                action === null || action === void 0 ? void 0 : action(jsEvent);\n            }\n        }\n        _setDefaultPropertiesFromJS(element) {\n            if (!this.enableScripting) {\n                return;\n            }\n            // Some properties may have been updated thanks to JS.\n            const storedData = this.annotationStorage.getRawValue(this.data.id);\n            if (!storedData) {\n                return;\n            }\n            const commonActions = this._commonActions;\n            for (const [actionName, detail] of Object.entries(storedData)) {\n                const action = commonActions[actionName];\n                if (action) {\n                    const eventProxy = {\n                        detail: {\n                            [actionName]: detail,\n                        },\n                        target: element,\n                    };\n                    action(eventProxy);\n                    // The action has been consumed: no need to keep it.\n                    delete storedData[actionName];\n                }\n            }\n        }\n        /**\n         * Create quadrilaterals from the annotation's quadpoints.\n         *\n         * @private\n         * @memberof AnnotationElement\n         */\n        _createQuadrilaterals() {\n            if (!this.container) {\n                return;\n            }\n            const { quadPoints } = this.data;\n            if (!quadPoints) {\n                return;\n            }\n            const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect.map(x => Math.fround(x));\n            if (quadPoints.length === 8) {\n                const [trX, trY, blX, blY] = quadPoints.subarray(2, 6);\n                if (rectTrX === trX &&\n                    rectTrY === trY &&\n                    rectBlX === blX &&\n                    rectBlY === blY) {\n                    // The quadpoints cover the whole annotation rectangle, so no need to\n                    // create a quadrilateral.\n                    return;\n                }\n            }\n            const { style } = this.container;\n            let svgBuffer;\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_hasBorder, \"f\")) {\n                const { borderColor, borderWidth } = style;\n                style.borderWidth = 0;\n                svgBuffer = [\n                    \"url('data:image/svg+xml;utf8,\",\n                    `<svg xmlns=\"http://www.w3.org/2000/svg\"`,\n                    ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,\n                    `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`,\n                ];\n                // this.container.classList.add(\"hasBorder\");\n            }\n            // todo: debug\n            // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n            // this.container.classList.add(\"hasClipPath\");\n            // }\n            const width = rectTrX - rectBlX;\n            const height = rectTrY - rectBlY;\n            const { svgFactory } = this;\n            const svg = svgFactory.createElement(\"svg\");\n            // svg.classList.add(\"quadrilateralsContainer\");\n            svg.setAttribute(\"width\", 0);\n            svg.setAttribute(\"height\", 0);\n            const defs = svgFactory.createElement(\"defs\");\n            svg.append(defs);\n            const clipPath = svgFactory.createElement(\"clipPath\");\n            const id = `clippath_${this.data.id}`;\n            clipPath.setAttribute(\"id\", id);\n            clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n            defs.append(clipPath);\n            for (let i = 2, ii = quadPoints.length; i < ii; i += 8) {\n                const trX = quadPoints[i];\n                const trY = quadPoints[i + 1];\n                const blX = quadPoints[i + 2];\n                const blY = quadPoints[i + 3];\n                const rect = svgFactory.createElement(\"rect\");\n                const x = (blX - rectBlX) / width;\n                const y = (rectTrY - trY) / height;\n                const rectWidth = (trX - blX) / width;\n                const rectHeight = (trY - blY) / height;\n                rect.setAttribute(\"x\", x);\n                rect.setAttribute(\"y\", y);\n                rect.setAttribute(\"width\", rectWidth);\n                rect.setAttribute(\"height\", rectHeight);\n                clipPath.append(rect);\n                svgBuffer === null || svgBuffer === void 0 ? void 0 : svgBuffer.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationElement_hasBorder, \"f\")) {\n                svgBuffer.push(`</g></svg>')`);\n                style.backgroundImage = svgBuffer.join(\"\");\n            }\n            this.container.append(svg);\n            this.container.style.clipPath = `url(#${id})`;\n        }\n        /**\n         * Create a popup for the annotation's HTML element. This is used for\n         * annotations that do not have a Popup entry in the dictionary, but\n         * are of a type that works with popups (such as Highlight annotations).\n         *\n         * @private\n         * @memberof AnnotationElement\n         */\n        _createPopup() {\n            // const { container, data } = this;\n            // container.setAttribute(\"aria-haspopup\", \"dialog\");\n            // const popup = (this.#popupElement = new PopupAnnotationElement({\n            //     data: {\n            //         color: data.color,\n            //         titleObj: data.titleObj,\n            //         modificationDate: data.modificationDate,\n            //         contentsObj: data.contentsObj,\n            //         richText: data.richText,\n            //         parentRect: data.rect,\n            //         borderStyle: 0,\n            //         id: `popup_${data.id}`,\n            //         rotation: data.rotation,\n            //     },\n            //     parent: this.parent,\n            //     elements: [this],\n            // }));\n            // this.parent.div.append(popup.render());\n        }\n        /**\n         * Render the annotation's HTML element(s).\n         *\n         * @public\n         * @memberof AnnotationElement\n         */\n        render() {\n            // unreachable(\"Abstract method `AnnotationElement.render` called\");\n        }\n        /**\n         * @private\n         * @returns {Array}\n         */\n        _getElementsByName(name, skipId = null) {\n            const fields = [];\n            if (this._fieldObjects) {\n                const fieldObj = this._fieldObjects[name];\n                if (fieldObj) {\n                    for (const { page, id, exportValues } of fieldObj) {\n                        if (page === -1) {\n                            continue;\n                        }\n                        if (id === skipId) {\n                            continue;\n                        }\n                        const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                        if (domElement && !GetElementsByNameSet.has(domElement)) {\n                            // warn(`_getElementsByName - element not allowed: ${id}`);\n                            continue;\n                        }\n                        fields.push({ id, exportValue, domElement });\n                    }\n                }\n                return fields;\n            }\n            // Fallback to a regular DOM lookup, to ensure that the standalone\n            // viewer components won't break.\n            for (const domElement of document.getElementsByName(name)) {\n                const { exportValue } = domElement;\n                const id = domElement.getAttribute(\"data-element-id\");\n                if (id === skipId) {\n                    continue;\n                }\n                if (!GetElementsByNameSet.has(domElement)) {\n                    continue;\n                }\n                fields.push({ id, exportValue, domElement });\n            }\n            return fields;\n        }\n        show() {\n            var _a;\n            if (this.container) {\n                this.container.hidden = false;\n            }\n            (_a = this.popup) === null || _a === void 0 ? void 0 : _a.maybeShow();\n        }\n        hide() {\n            var _a;\n            if (this.container) {\n                this.container.hidden = true;\n            }\n            (_a = this.popup) === null || _a === void 0 ? void 0 : _a.forceHide();\n        }\n        /**\n         * Get the HTML element(s) which can trigger a popup when clicked or hovered.\n         *\n         * @public\n         * @memberof AnnotationElement\n         * @returns {Array<HTMLElement>|HTMLElement} An array of elements or an\n         *          element.\n         */\n        getElementsToTriggerPopup() {\n            return this.container;\n        }\n        addHighlightArea() {\n            const triggers = this.getElementsToTriggerPopup();\n            if (Array.isArray(triggers)) {\n                // for (const element of triggers) {\n                // element.classList.add(\"highlightArea\");\n                // }\n            }\n            else {\n                // triggers.classList.add(\"highlightArea\");\n            }\n        }\n        _editOnDoubleClick() {\n            if (!this._isEditable) {\n                return;\n            }\n            const { annotationEditorType: mode, data: { id: editId }, } = this;\n            this.container.addEventListener(\"dblclick\", () => {\n                var _a, _b;\n                (_b = (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.eventBus) === null || _b === void 0 ? void 0 : _b.dispatch(\"switchannotationeditormode\", {\n                    source: this,\n                    mode,\n                    editId,\n                });\n            });\n        }\n        _setRequired(element, isRequired) {\n            if (isRequired) {\n                element.setAttribute(\"required\", true);\n            }\n            else {\n                element.removeAttribute(\"required\");\n            }\n            element.setAttribute(\"aria-required\", isRequired);\n        }\n    }\n    _AnnotationElement_updates = new WeakMap(), _AnnotationElement_hasBorder = new WeakMap(), _AnnotationElement_popupElement = new WeakMap(), _AnnotationElement_instances = new WeakSet(), _AnnotationElement_setRectEdited = function _AnnotationElement_setRectEdited(rect) {\n        const { container: { style }, data: { rect: currentRect, rotation }, parent: { viewport: { rawDims: { pageWidth, pageHeight, pageX, pageY }, }, }, } = this;\n        currentRect === null || currentRect === void 0 ? void 0 : currentRect.splice(0, 4, ...rect);\n        const { width, height } = getRectDims(rect);\n        style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n        style.top = `${(100 * (pageHeight - rect[3] + pageY)) / pageHeight}%`;\n        if (rotation === 0) {\n            style.width = `${(100 * width) / pageWidth}%`;\n            style.height = `${(100 * height) / pageHeight}%`;\n        }\n        else {\n            this.setRotation(rotation);\n        }\n    };\n    class LinkAnnotationElement extends AnnotationElement {\n        constructor(parameters, options = null) {\n            super(parameters, {\n                isRenderable: true,\n                ignoreBorder: !!(options === null || options === void 0 ? void 0 : options.ignoreBorder),\n                createQuadrilaterals: true,\n            });\n            _LinkAnnotationElement_instances.add(this);\n            this.isTooltipOnly = false;\n            this.isTooltipOnly = parameters.data.isTooltipOnly;\n        }\n        render() {\n            const { data, linkService } = this;\n            const link = document.createElement(\"a\");\n            link.setAttribute(\"data-element-id\", data.id);\n            let isBound = false;\n            if (data.url) {\n                linkService.addLinkAttributes(link, data.url, data.newWindow);\n                isBound = true;\n            }\n            else if (data.action) {\n                this._bindNamedAction(link, data.action);\n                isBound = true;\n            }\n            else if (data.attachment) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_bindAttachment).call(this, link, data.attachment, data.attachmentDest);\n                isBound = true;\n            }\n            else if (data.setOCGState) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_bindSetOCGState).call(this, link, data.setOCGState);\n                isBound = true;\n            }\n            else if (data.dest) {\n                this._bindLink(link, data.dest);\n                isBound = true;\n            }\n            else {\n                if (data.actions &&\n                    (data.actions.Action ||\n                        data.actions[\"Mouse Up\"] ||\n                        data.actions[\"Mouse Down\"]) &&\n                    this.enableScripting &&\n                    this.hasJSActions) {\n                    this._bindJSAction(link, data);\n                    isBound = true;\n                }\n                if (data.resetForm) {\n                    this._bindResetFormAction(link, data.resetForm);\n                    isBound = true;\n                }\n                else if (this.isTooltipOnly && !isBound) {\n                    this._bindLink(link, \"\");\n                    isBound = true;\n                }\n            }\n            // todo: do not render the class as the rendering is yet to be determined\n            // this.container.classList.add(\"linkAnnotation\");\n            // this.container.classList.add(\"k-link-annotation\");\n            if (isBound) {\n                this.container.append(link);\n            }\n            return this.container;\n        }\n        /**\n         * Bind internal links to the link element.\n         *\n         * @private\n         * @param {Object} link\n         * @param {Object} destination\n         * @memberof LinkAnnotationElement\n         */\n        _bindLink(link, destination) {\n            link.href = this.linkService.getDestinationHash(destination);\n            link.onclick = () => {\n                if (destination) {\n                    this.linkService.goToDestination(destination);\n                }\n                return false;\n            };\n            if (destination || destination === /* isTooltipOnly = */ \"\") {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n            }\n        }\n        /**\n         * Bind named actions to the link element.\n         *\n         * @private\n         * @param {Object} link\n         * @param {Object} action\n         * @memberof LinkAnnotationElement\n         */\n        _bindNamedAction(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = () => {\n                this.linkService.executeNamedAction(action);\n                return false;\n            };\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n        }\n        /**\n         * Bind JS actions to the link element.\n         *\n         * @private\n         * @param {Object} link\n         * @param {Object} data\n         * @memberof LinkAnnotationElement\n         */\n        _bindJSAction(link, data) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            const map = new Map([\n                [\"Action\", \"onclick\"],\n                [\"Mouse Up\", \"onmouseup\"],\n                [\"Mouse Down\", \"onmousedown\"],\n            ]);\n            for (const name of Object.keys(data.actions)) {\n                const jsName = map.get(name);\n                if (!jsName) {\n                    continue;\n                }\n                link[jsName] = () => {\n                    var _a;\n                    (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                        source: this,\n                        detail: {\n                            id: data.id,\n                            name,\n                        },\n                    });\n                    return false;\n                };\n            }\n            if (!link.onclick) {\n                link.onclick = () => false;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n        }\n        _bindResetFormAction(link, resetForm) {\n            const otherClickAction = link.onclick;\n            if (!otherClickAction) {\n                link.href = this.linkService.getAnchorUrl(\"\");\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n            if (!this._fieldObjects) {\n                // warn(\n                //     `_bindResetFormAction - \"resetForm\" action not supported, ` +\n                //     \"ensure that the `fieldObjects` parameter is provided.\"\n                // );\n                if (!otherClickAction) {\n                    link.onclick = () => false;\n                }\n                return;\n            }\n            link.onclick = () => {\n                var _a;\n                otherClickAction === null || otherClickAction === void 0 ? void 0 : otherClickAction();\n                const { fields: resetFormFields, refs: resetFormRefs, include, } = resetForm;\n                const allFields = [];\n                if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                    const fieldIds = new Set(resetFormRefs);\n                    for (const fieldName of resetFormFields) {\n                        const fields = this._fieldObjects[fieldName] || [];\n                        for (const { id } of fields) {\n                            fieldIds.add(id);\n                        }\n                    }\n                    for (const fields of Object.values(this._fieldObjects)) {\n                        for (const field of fields) {\n                            if (fieldIds.has(field.id) === include) {\n                                allFields.push(field);\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (const fields of Object.values(this._fieldObjects)) {\n                        allFields.push(...fields);\n                    }\n                }\n                const storage = this.annotationStorage;\n                const allIds = [];\n                for (const field of allFields) {\n                    const { id } = field;\n                    allIds.push(id);\n                    switch (field.type) {\n                        case \"text\": {\n                            const value = field.defaultValue || \"\";\n                            storage.setValue(id, { value });\n                            break;\n                        }\n                        case \"checkbox\":\n                        case \"radiobutton\": {\n                            const value = field.defaultValue === field.exportValues;\n                            storage.setValue(id, { value });\n                            break;\n                        }\n                        case \"combobox\":\n                        case \"listbox\": {\n                            const value = field.defaultValue || \"\";\n                            storage.setValue(id, { value });\n                            break;\n                        }\n                        default:\n                            continue;\n                    }\n                    const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                    if (!domElement) {\n                        continue;\n                    }\n                    else if (!GetElementsByNameSet.has(domElement)) {\n                        // warn(`_bindResetFormAction - element not allowed: ${id}`);\n                        continue;\n                    }\n                    domElement.dispatchEvent(new Event(\"resetform\"));\n                }\n                if (this.enableScripting) {\n                    // Update the values in the sandbox.\n                    (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                        source: this,\n                        detail: {\n                            id: \"app\",\n                            ids: allIds,\n                            name: \"ResetForm\",\n                        },\n                    });\n                }\n                return false;\n            };\n        }\n    }\n    _LinkAnnotationElement_instances = new WeakSet(), _LinkAnnotationElement_setInternalLink = function _LinkAnnotationElement_setInternalLink() {\n        this.container.setAttribute(\"data-internal-link\", \"\");\n    }, _LinkAnnotationElement_bindAttachment = function _LinkAnnotationElement_bindAttachment(link, attachment, dest = null) {\n        link.href = this.linkService.getAnchorUrl(\"\");\n        if (attachment.description) {\n            link.title = attachment.description;\n        }\n        link.onclick = () => {\n            var _a;\n            (_a = this.downloadManager) === null || _a === void 0 ? void 0 : _a.openOrDownloadData(attachment.content, attachment.filename, dest);\n            return false;\n        };\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n    }, _LinkAnnotationElement_bindSetOCGState = function _LinkAnnotationElement_bindSetOCGState(link, action) {\n        link.href = this.linkService.getAnchorUrl(\"\");\n        link.onclick = () => {\n            this.linkService.executeSetOCGState(action);\n            return false;\n        };\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n    };\n    // class TextAnnotationElement extends AnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"textAnnotation\");\n    //         const image = document.createElement(\"img\");\n    //         image.src =\n    //             this.imageResourcesPath +\n    //             \"annotation-\" +\n    //             this.data.name.toLowerCase() +\n    //             \".svg\";\n    //         image.setAttribute(\"data-l10n-id\", \"pdfjs-text-annotation-type\");\n    //         image.setAttribute(\n    //             \"data-l10n-args\",\n    //             JSON.stringify({ type: this.data.name })\n    //         );\n    //         if (!this.data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         this.container.append(image);\n    //         return this.container;\n    //     }\n    // }\n    class WidgetAnnotationElement extends AnnotationElement {\n        render() {\n            // Show only the container for unsupported field types.\n            return this.container;\n        }\n        showElementAndHideCanvas(element) {\n            var _a;\n            if (this.data.hasOwnCanvas) {\n                if (((_a = element.previousSibling) === null || _a === void 0 ? void 0 : _a.nodeName) === \"CANVAS\") {\n                    element.previousSibling.hidden = true;\n                }\n                element.hidden = false;\n            }\n        }\n        _getKeyModifier(event) {\n            return kendo_pdfjs_loader_js.FeatureTest.platform.isMac ? event.metaKey : event.ctrlKey;\n        }\n        _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n            if (baseName.includes(\"mouse\")) {\n                // Mouse events\n                element.addEventListener(baseName, event => {\n                    var _a;\n                    (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                        source: this,\n                        detail: {\n                            id: this.data.id,\n                            name: eventName,\n                            value: valueGetter(event),\n                            shift: event.shiftKey,\n                            modifier: this._getKeyModifier(event),\n                        },\n                    });\n                });\n            }\n            else {\n                // Non-mouse events\n                element.addEventListener(baseName, event => {\n                    var _a;\n                    if (baseName === \"blur\") {\n                        if (!elementData.focused || !event.relatedTarget) {\n                            return;\n                        }\n                        elementData.focused = false;\n                    }\n                    else if (baseName === \"focus\") {\n                        if (elementData.focused) {\n                            return;\n                        }\n                        elementData.focused = true;\n                    }\n                    if (!valueGetter) {\n                        return;\n                    }\n                    (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                        source: this,\n                        detail: {\n                            id: this.data.id,\n                            name: eventName,\n                            value: valueGetter(event),\n                        },\n                    });\n                });\n            }\n        }\n        _setEventListeners(element, elementData, names, getter) {\n            var _a, _b, _c;\n            for (const [baseName, eventName] of names) {\n                if (eventName === \"Action\" || ((_a = this.data.actions) === null || _a === void 0 ? void 0 : _a[eventName])) {\n                    if (eventName === \"Focus\" || eventName === \"Blur\") {\n                        elementData || (elementData = { focused: false });\n                    }\n                    this._setEventListener(element, elementData, baseName, eventName, getter);\n                    if (eventName === \"Focus\" && !((_b = this.data.actions) === null || _b === void 0 ? void 0 : _b.Blur)) {\n                        // Ensure that elementData will have the correct value.\n                        this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n                    }\n                    else if (eventName === \"Blur\" && !((_c = this.data.actions) === null || _c === void 0 ? void 0 : _c.Focus)) {\n                        this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n                    }\n                }\n            }\n        }\n        _setBackgroundColor(element) {\n            const color = this.data.backgroundColor || null;\n            element.style.backgroundColor =\n                color === null\n                    ? \"transparent\"\n                    : kendo_pdfjs_loader_js.Util.makeHexColor(color[0], color[1], color[2]);\n        }\n        /**\n         * Apply text styles to the text in the element.\n         *\n         * @private\n         * @param {HTMLDivElement} element\n         * @memberof TextWidgetAnnotationElement\n         */\n        _setTextStyle(element) {\n            const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            const { fontColor } = this.data.defaultAppearanceData;\n            const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n            const style = element.style;\n            // TODO: If the font-size is zero, calculate it based on the height and\n            //       width of the element.\n            // Not setting `style.fontSize` will use the default font-size for now.\n            // We don't use the font, as specified in the PDF document, for the <input>\n            // element. Hence using the original `fontSize` could look bad, which is why\n            // it's instead based on the field height.\n            // If the height is \"big\" then it could lead to a too big font size\n            // so in this case use the one we've in the pdf (hence the min).\n            let computedFontSize;\n            const BORDER_SIZE = 2;\n            const roundToOneDecimal = x => Math.round(10 * x) / 10;\n            if (this.data.multiLine) {\n                const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n                const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;\n                const lineHeight = height / numberOfLines;\n                computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / LINE_FACTOR));\n            }\n            else {\n                const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n                computedFontSize = Math.min(fontSize, roundToOneDecimal(height / LINE_FACTOR));\n            }\n            style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n            style.color = kendo_pdfjs_loader_js.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n            if (this.data.textAlignment !== null) {\n                style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n        }\n        _setRequired(element, isRequired) {\n            if (isRequired) {\n                element.setAttribute(\"required\", true);\n            }\n            else {\n                element.removeAttribute(\"required\");\n            }\n            element.setAttribute(\"aria-required\", isRequired);\n        }\n    }\n    // class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n    //     constructor(parameters) {\n    //         const isRenderable =\n    //             parameters.renderForms ||\n    //             parameters.data.hasOwnCanvas ||\n    //             (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    //         super(parameters, { isRenderable });\n    //     }\n    //     setPropertyOnSiblings(base, key, value, keyInStorage) {\n    //         const storage = this.annotationStorage;\n    //         for (const element of this._getElementsByName(\n    //             base.name,\n    //             /* skipId = */ base.id\n    //         )) {\n    //             if (element.domElement) {\n    //                 element.domElement[key] = value;\n    //             }\n    //             storage.setValue(element.id, { [keyInStorage]: value });\n    //         }\n    //     }\n    //     render() {\n    //         const storage = this.annotationStorage;\n    //         const id = this.data.id;\n    //         this.container.classList.add(\"textWidgetAnnotation\");\n    //         let element = null;\n    //         if (this.renderForms) {\n    //             // NOTE: We cannot set the values using `element.value` below, since it\n    //             //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n    //             //       from parsing the elements correctly for the reference tests.\n    //             const storedData = storage.getValue(id, {\n    //                 value: this.data.fieldValue,\n    //             });\n    //             let textContent = storedData.value || \"\";\n    //             const maxLen = storage.getValue(id, {\n    //                 charLimit: this.data.maxLen,\n    //             }).charLimit;\n    //             if (maxLen && textContent.length > maxLen) {\n    //                 textContent = textContent.slice(0, maxLen);\n    //             }\n    //             let fieldFormattedValues =\n    //                 storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n    //             if (fieldFormattedValues && this.data.comb) {\n    //                 fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n    //             }\n    //             const elementData = {\n    //                 userValue: textContent,\n    //                 formattedValue: fieldFormattedValues,\n    //                 lastCommittedValue: null,\n    //                 commitKey: 1,\n    //                 focused: false,\n    //             };\n    //             if (this.data.multiLine) {\n    //                 element = document.createElement(\"textarea\");\n    //                 element.textContent = fieldFormattedValues ?? textContent;\n    //                 if (this.data.doNotScroll) {\n    //                     element.style.overflowY = \"hidden\";\n    //                 }\n    //             } else {\n    //                 element = document.createElement(\"input\");\n    //                 element.type = \"text\";\n    //                 element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n    //                 if (this.data.doNotScroll) {\n    //                     element.style.overflowX = \"hidden\";\n    //                 }\n    //             }\n    //             if (this.data.hasOwnCanvas) {\n    //                 element.hidden = true;\n    //             }\n    //             GetElementsByNameSet.add(element);\n    //             element.setAttribute(\"data-element-id\", id);\n    //             element.disabled = this.data.readOnly;\n    //             element.name = this.data.fieldName;\n    //             element.tabIndex = DEFAULT_TAB_INDEX;\n    //             this._setRequired(element, this.data.required);\n    //             if (maxLen) {\n    //                 element.maxLength = maxLen;\n    //             }\n    //             element.addEventListener(\"input\", event => {\n    //                 storage.setValue(id, { value: event.target.value });\n    //                 this.setPropertyOnSiblings(\n    //                     element,\n    //                     \"value\",\n    //                     event.target.value,\n    //                     \"value\"\n    //                 );\n    //                 elementData.formattedValue = null;\n    //             });\n    //             element.addEventListener(\"resetform\", () => {\n    //                 const defaultValue = this.data.defaultFieldValue ?? \"\";\n    //                 element.value = elementData.userValue = defaultValue;\n    //                 elementData.formattedValue = null;\n    //             });\n    //             let blurListener = event => {\n    //                 const { formattedValue } = elementData;\n    //                 if (formattedValue !== null && formattedValue !== undefined) {\n    //                     event.target.value = formattedValue;\n    //                 }\n    //                 // Reset the cursor position to the start of the field (issue 12359).\n    //                 event.target.scrollLeft = 0;\n    //             };\n    //             if (this.enableScripting && this.hasJSActions) {\n    //                 element.addEventListener(\"focus\", event => {\n    //                     if (elementData.focused) {\n    //                         return;\n    //                     }\n    //                     const { target } = event;\n    //                     if (elementData.userValue) {\n    //                         target.value = elementData.userValue;\n    //                     }\n    //                     elementData.lastCommittedValue = target.value;\n    //                     elementData.commitKey = 1;\n    //                     if (!this.data.actions?.Focus) {\n    //                         elementData.focused = true;\n    //                     }\n    //                 });\n    //                 element.addEventListener(\"updatefromsandbox\", jsEvent => {\n    //                     this.showElementAndHideCanvas(jsEvent.target);\n    //                     const actions = {\n    //                         value(event) {\n    //                             elementData.userValue = event.detail.value ?? \"\";\n    //                             storage.setValue(id, { value: elementData.userValue.toString() });\n    //                             event.target.value = elementData.userValue;\n    //                         },\n    //                         formattedValue(event) {\n    //                             const { formattedValue } = event.detail;\n    //                             elementData.formattedValue = formattedValue;\n    //                             if (\n    //                                 formattedValue !== null &&\n    //                                 formattedValue !== undefined &&\n    //                                 event.target !== document.activeElement\n    //                             ) {\n    //                                 // Input hasn't the focus so display formatted string\n    //                                 event.target.value = formattedValue;\n    //                             }\n    //                             storage.setValue(id, {\n    //                                 formattedValue,\n    //                             });\n    //                         },\n    //                         selRange(event) {\n    //                             event.target.setSelectionRange(...event.detail.selRange);\n    //                         },\n    //                         charLimit: event => {\n    //                             const { charLimit } = event.detail;\n    //                             const { target } = event;\n    //                             if (charLimit === 0) {\n    //                                 target.removeAttribute(\"maxLength\");\n    //                                 return;\n    //                             }\n    //                             target.setAttribute(\"maxLength\", charLimit);\n    //                             let value = elementData.userValue;\n    //                             if (!value || value.length <= charLimit) {\n    //                                 return;\n    //                             }\n    //                             value = value.slice(0, charLimit);\n    //                             target.value = elementData.userValue = value;\n    //                             storage.setValue(id, { value });\n    //                             this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n    //                                 source: this,\n    //                                 detail: {\n    //                                     id,\n    //                                     name: \"Keystroke\",\n    //                                     value,\n    //                                     willCommit: true,\n    //                                     commitKey: 1,\n    //                                     selStart: target.selectionStart,\n    //                                     selEnd: target.selectionEnd,\n    //                                 },\n    //                             });\n    //                         },\n    //                     };\n    //                     this._dispatchEventFromSandbox(actions, jsEvent);\n    //                 });\n    //                 // Even if the field hasn't any actions\n    //                 // leaving it can still trigger some actions with Calculate\n    //                 element.addEventListener(\"keydown\", event => {\n    //                     elementData.commitKey = 1;\n    //                     // If the key is one of Escape, Enter then the data are committed.\n    //                     // If we've a Tab then data will be committed on blur.\n    //                     let commitKey = -1;\n    //                     if (event.key === \"Escape\") {\n    //                         commitKey = 0;\n    //                     } else if (event.key === \"Enter\" && !this.data.multiLine) {\n    //                         // When we've a multiline field, \"Enter\" key is a key as the other\n    //                         // hence we don't commit the data (Acrobat behaves the same way)\n    //                         // (see issue #15627).\n    //                         commitKey = 2;\n    //                     } else if (event.key === \"Tab\") {\n    //                         elementData.commitKey = 3;\n    //                     }\n    //                     if (commitKey === -1) {\n    //                         return;\n    //                     }\n    //                     const { value } = event.target;\n    //                     if (elementData.lastCommittedValue === value) {\n    //                         return;\n    //                     }\n    //                     elementData.lastCommittedValue = value;\n    //                     // Save the entered value\n    //                     elementData.userValue = value;\n    //                     this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n    //                         source: this,\n    //                         detail: {\n    //                             id,\n    //                             name: \"Keystroke\",\n    //                             value,\n    //                             willCommit: true,\n    //                             commitKey,\n    //                             selStart: event.target.selectionStart,\n    //                             selEnd: event.target.selectionEnd,\n    //                         },\n    //                     });\n    //                 });\n    //                 const _blurListener = blurListener;\n    //                 blurListener = null;\n    //                 element.addEventListener(\"blur\", event => {\n    //                     if (!elementData.focused || !event.relatedTarget) {\n    //                         return;\n    //                     }\n    //                     if (!this.data.actions?.Blur) {\n    //                         elementData.focused = false;\n    //                     }\n    //                     const { value } = event.target;\n    //                     elementData.userValue = value;\n    //                     if (elementData.lastCommittedValue !== value) {\n    //                         this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n    //                             source: this,\n    //                             detail: {\n    //                                 id,\n    //                                 name: \"Keystroke\",\n    //                                 value,\n    //                                 willCommit: true,\n    //                                 commitKey: elementData.commitKey,\n    //                                 selStart: event.target.selectionStart,\n    //                                 selEnd: event.target.selectionEnd,\n    //                             },\n    //                         });\n    //                     }\n    //                     _blurListener(event);\n    //                 });\n    //                 if (this.data.actions?.Keystroke) {\n    //                     element.addEventListener(\"beforeinput\", event => {\n    //                         elementData.lastCommittedValue = null;\n    //                         const { data, target } = event;\n    //                         const { value, selectionStart, selectionEnd } = target;\n    //                         let selStart = selectionStart,\n    //                             selEnd = selectionEnd;\n    //                         switch (event.inputType) {\n    //                             // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n    //                             case \"deleteWordBackward\": {\n    //                                 const match = value\n    //                                     .substring(0, selectionStart)\n    //                                     .match(/\\w*[^\\w]*$/);\n    //                                 if (match) {\n    //                                     selStart -= match[0].length;\n    //                                 }\n    //                                 break;\n    //                             }\n    //                             case \"deleteWordForward\": {\n    //                                 const match = value\n    //                                     .substring(selectionStart)\n    //                                     .match(/^[^\\w]*\\w*/);\n    //                                 if (match) {\n    //                                     selEnd += match[0].length;\n    //                                 }\n    //                                 break;\n    //                             }\n    //                             case \"deleteContentBackward\":\n    //                                 if (selectionStart === selectionEnd) {\n    //                                     selStart -= 1;\n    //                                 }\n    //                                 break;\n    //                             case \"deleteContentForward\":\n    //                                 if (selectionStart === selectionEnd) {\n    //                                     selEnd += 1;\n    //                                 }\n    //                                 break;\n    //                             default: break;\n    //                         }\n    //                         // We handle the event ourselves.\n    //                         event.preventDefault();\n    //                         this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n    //                             source: this,\n    //                             detail: {\n    //                                 id,\n    //                                 name: \"Keystroke\",\n    //                                 value,\n    //                                 change: data || \"\",\n    //                                 willCommit: false,\n    //                                 selStart,\n    //                                 selEnd,\n    //                             },\n    //                         });\n    //                     });\n    //                 }\n    //                 this._setEventListeners(\n    //                     element,\n    //                     elementData,\n    //                     [\n    //                         [\"focus\", \"Focus\"],\n    //                         [\"blur\", \"Blur\"],\n    //                         [\"mousedown\", \"Mouse Down\"],\n    //                         [\"mouseenter\", \"Mouse Enter\"],\n    //                         [\"mouseleave\", \"Mouse Exit\"],\n    //                         [\"mouseup\", \"Mouse Up\"],\n    //                     ],\n    //                     event => event.target.value\n    //                 );\n    //             }\n    //             if (blurListener) {\n    //                 element.addEventListener(\"blur\", blurListener);\n    //             }\n    //             if (this.data.comb) {\n    //                 const fieldWidth = this.data.rect[2] - this.data.rect[0];\n    //                 const combWidth = fieldWidth / maxLen;\n    //                 element.classList.add(\"comb\");\n    //                 element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n    //             }\n    //         } else {\n    //             element = document.createElement(\"div\");\n    //             element.textContent = this.data.fieldValue;\n    //             element.style.verticalAlign = \"middle\";\n    //             element.style.display = \"table-cell\";\n    //             if (this.data.hasOwnCanvas) {\n    //                 element.hidden = true;\n    //             }\n    //         }\n    //         this._setTextStyle(element);\n    //         this._setBackgroundColor(element);\n    //         this._setDefaultPropertiesFromJS(element);\n    //         this.container.append(element);\n    //         return this.container;\n    //     }\n    // }\n    // class SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: !!parameters.data.hasOwnCanvas });\n    //     }\n    // }\n    // class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: parameters.renderForms });\n    //     }\n    //     render() {\n    //         const storage = this.annotationStorage;\n    //         const data = this.data;\n    //         const id = data.id;\n    //         let value = storage.getValue(id, {\n    //             value: data.exportValue === data.fieldValue,\n    //         }).value;\n    //         if (typeof value === \"string\") {\n    //             // The value has been changed through js and set in annotationStorage.\n    //             value = value !== \"Off\";\n    //             storage.setValue(id, { value });\n    //         }\n    //         this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n    //         const element = document.createElement(\"input\");\n    //         GetElementsByNameSet.add(element);\n    //         element.setAttribute(\"data-element-id\", id);\n    //         element.disabled = data.readOnly;\n    //         this._setRequired(element, this.data.required);\n    //         element.type = \"checkbox\";\n    //         element.name = data.fieldName;\n    //         if (value) {\n    //             element.setAttribute(\"checked\", (true).toString());\n    //         }\n    //         element.setAttribute(\"exportValue\", data.exportValue);\n    //         element.tabIndex = DEFAULT_TAB_INDEX;\n    //         element.addEventListener(\"change\", event => {\n    //             const { name, checked } = event.target as any;\n    //             for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n    //                 const curChecked = checked && checkbox.exportValue === data.exportValue;\n    //                 if (checkbox.domElement) {\n    //                     checkbox.domElement.checked = curChecked;\n    //                 }\n    //                 storage.setValue(checkbox.id, { value: curChecked });\n    //             }\n    //             storage.setValue(id, { value: checked });\n    //         });\n    //         element.addEventListener(\"resetform\", event => {\n    //             const defaultValue = data.defaultFieldValue || \"Off\";\n    //             // @ts-expect-error(TS)\n    //             event.target.checked = defaultValue === data.exportValue;\n    //         });\n    //         if (this.enableScripting && this.hasJSActions) {\n    //             element.addEventListener(\"updatefromsandbox\", jsEvent => {\n    //                 const actions = {\n    //                     value(event) {\n    //                         event.target.checked = event.detail.value !== \"Off\";\n    //                         storage.setValue(id, { value: event.target.checked });\n    //                     },\n    //                 };\n    //                 this._dispatchEventFromSandbox(actions, jsEvent);\n    //             });\n    //             this._setEventListeners(\n    //                 element,\n    //                 null,\n    //                 [\n    //                     [\"change\", \"Validate\"],\n    //                     [\"change\", \"Action\"],\n    //                     [\"focus\", \"Focus\"],\n    //                     [\"blur\", \"Blur\"],\n    //                     [\"mousedown\", \"Mouse Down\"],\n    //                     [\"mouseenter\", \"Mouse Enter\"],\n    //                     [\"mouseleave\", \"Mouse Exit\"],\n    //                     [\"mouseup\", \"Mouse Up\"],\n    //                 ],\n    //                 event => event.target.checked\n    //             );\n    //         }\n    //         this._setBackgroundColor(element);\n    //         this._setDefaultPropertiesFromJS(element);\n    //         this.container.append(element);\n    //         return this.container;\n    //     }\n    // }\n    class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n            super(parameters, { isRenderable: parameters.renderForms });\n        }\n        render() {\n            this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n                value: data.fieldValue === data.buttonValue,\n            }).value;\n            if (typeof value === \"string\") {\n                // The value has been changed through js and set in annotationStorage.\n                value = value !== data.buttonValue;\n                storage.setValue(id, { value });\n            }\n            if (value) {\n                // It's possible that multiple radio buttons are checked.\n                // So if this one is checked we just reset the other ones.\n                // (see bug 1864136). Then when the other ones will be rendered they will\n                // unchecked (because of their value in the storage).\n                // Consequently, the first checked radio button will be the only checked\n                // one.\n                for (const radio of this._getElementsByName(data.fieldName, \n                /* skipId = */ id)) {\n                    storage.setValue(radio.id, { value: false });\n                }\n            }\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n            this._setRequired(element, this.data.required);\n            element.type = \"radio\";\n            element.name = data.fieldName;\n            if (value) {\n                element.setAttribute(\"checked\", (true).toString());\n            }\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n                const { name, checked } = event.target;\n                for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n                    storage.setValue(radio.id, { value: false });\n                }\n                storage.setValue(id, { value: checked });\n            });\n            element.addEventListener(\"resetform\", event => {\n                const defaultValue = data.defaultFieldValue;\n                // @ts-expect-error(TS)\n                event.target.checked =\n                    defaultValue !== null &&\n                        defaultValue !== undefined &&\n                        defaultValue === data.buttonValue;\n            });\n            if (this.enableScripting && this.hasJSActions) {\n                const pdfButtonValue = data.buttonValue;\n                element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                    const actions = {\n                        value: event => {\n                            const checked = pdfButtonValue === event.detail.value;\n                            for (const radio of this._getElementsByName(event.target.name)) {\n                                const curChecked = checked && radio.id === id;\n                                if (radio.domElement) {\n                                    radio.domElement.checked = curChecked;\n                                }\n                                storage.setValue(radio.id, { value: curChecked });\n                            }\n                        },\n                    };\n                    this._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                this._setEventListeners(element, null, [\n                    [\"change\", \"Validate\"],\n                    [\"change\", \"Action\"],\n                    [\"focus\", \"Focus\"],\n                    [\"blur\", \"Blur\"],\n                    [\"mousedown\", \"Mouse Down\"],\n                    [\"mouseenter\", \"Mouse Enter\"],\n                    [\"mouseleave\", \"Mouse Exit\"],\n                    [\"mouseup\", \"Mouse Up\"],\n                ], event => event.target.checked);\n            }\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n        }\n    }\n    // class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n    //     }\n    //     render() {\n    //         // The rendering and functionality of a push button widget annotation is\n    //         // equal to that of a link annotation, but may have more functionality, such\n    //         // as performing actions on form fields (resetting, submitting, et cetera).\n    //         const container = super.render();\n    //         container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n    //         const linkElement = container.lastChild;\n    //         if (this.enableScripting && this.hasJSActions && linkElement) {\n    //             this._setDefaultPropertiesFromJS(linkElement);\n    //             linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n    //                 this._dispatchEventFromSandbox({}, jsEvent);\n    //             });\n    //         }\n    //         return container;\n    //     }\n    // }\n    // class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: parameters.renderForms });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"choiceWidgetAnnotation\");\n    //         const storage = this.annotationStorage;\n    //         const id = this.data.id;\n    //         const storedData = storage.getValue(id, {\n    //             value: this.data.fieldValue,\n    //         });\n    //         const selectElement = document.createElement(\"select\");\n    //         GetElementsByNameSet.add(selectElement);\n    //         selectElement.setAttribute(\"data-element-id\", id);\n    //         selectElement.disabled = this.data.readOnly;\n    //         this._setRequired(selectElement, this.data.required);\n    //         selectElement.name = this.data.fieldName;\n    //         selectElement.tabIndex = DEFAULT_TAB_INDEX;\n    //         let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n    //         if (!this.data.combo) {\n    //             // List boxes have a size and (optionally) multiple selection.\n    //             selectElement.size = this.data.options.length;\n    //             if (this.data.multiSelect) {\n    //                 selectElement.multiple = true;\n    //             }\n    //         }\n    //         selectElement.addEventListener(\"resetform\", () => {\n    //             const defaultValue = this.data.defaultFieldValue;\n    //             for (const option of (selectElement as any).options) {\n    //                 option.selected = option.value === defaultValue;\n    //             }\n    //         });\n    //         // Insert the options into the choice field.\n    //         for (const option of this.data.options) {\n    //             const optionElement = document.createElement(\"option\");\n    //             optionElement.textContent = option.displayValue;\n    //             optionElement.value = option.exportValue;\n    //             if (storedData.value.includes(option.exportValue)) {\n    //                 optionElement.setAttribute(\"selected\", (true).toString());\n    //                 addAnEmptyEntry = false;\n    //             }\n    //             selectElement.append(optionElement);\n    //         }\n    //         let removeEmptyEntry = null;\n    //         if (addAnEmptyEntry) {\n    //             const noneOptionElement = document.createElement(\"option\");\n    //             noneOptionElement.value = \" \";\n    //             noneOptionElement.setAttribute(\"hidden\", (true).toString());\n    //             noneOptionElement.setAttribute(\"selected\", (true).toString());\n    //             selectElement.prepend(noneOptionElement);\n    //             removeEmptyEntry = () => {\n    //                 noneOptionElement.remove();\n    //                 selectElement.removeEventListener(\"input\", removeEmptyEntry);\n    //                 removeEmptyEntry = null;\n    //             };\n    //             selectElement.addEventListener(\"input\", removeEmptyEntry);\n    //         }\n    //         const getValue = isExport => {\n    //             const name = isExport ? \"value\" : \"textContent\";\n    //             const { options, multiple } = selectElement;\n    //             if (!multiple) {\n    //                 return options.selectedIndex === -1\n    //                     ? null\n    //                     : options[options.selectedIndex][name];\n    //             }\n    //             return Array.prototype.filter\n    //                 .call(options, option => option.selected)\n    //                 .map(option => option[name]);\n    //         };\n    //         let selectedValues = getValue(/* isExport */ false);\n    //         const getItems = event => {\n    //             const options = event.target.options;\n    //             return Array.prototype.map.call(options, option => ({\n    //                 displayValue: option.textContent,\n    //                 exportValue: option.value,\n    //             }));\n    //         };\n    //         if (this.enableScripting && this.hasJSActions) {\n    //             selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n    //                 const actions = {\n    //                     value(event) {\n    //                         removeEmptyEntry?.();\n    //                         const value = event.detail.value;\n    //                         const values = new Set(Array.isArray(value) ? value : [value]);\n    //                         for (const option of (selectElement as any).options) {\n    //                             option.selected = values.has(option.value);\n    //                         }\n    //                         storage.setValue(id, {\n    //                             value: getValue(/* isExport */ true),\n    //                         });\n    //                         selectedValues = getValue(/* isExport */ false);\n    //                     },\n    //                     multipleSelection() {\n    //                         selectElement.multiple = true;\n    //                     },\n    //                     remove(event) {\n    //                         const options = selectElement.options;\n    //                         const index = event.detail.remove;\n    //                         options[index].selected = false;\n    //                         selectElement.remove(index);\n    //                         if (options.length > 0) {\n    //                             const i = Array.prototype.findIndex.call(\n    //                                 options,\n    //                                 option => option.selected\n    //                             );\n    //                             if (i === -1) {\n    //                                 options[0].selected = true;\n    //                             }\n    //                         }\n    //                         storage.setValue(id, {\n    //                             value: getValue(/* isExport */ true),\n    //                             items: getItems(event),\n    //                         });\n    //                         selectedValues = getValue(/* isExport */ false);\n    //                     },\n    //                     clear() {\n    //                         while (selectElement.length !== 0) {\n    //                             selectElement.remove(0);\n    //                         }\n    //                         storage.setValue(id, { value: null, items: [] });\n    //                         selectedValues = getValue(/* isExport */ false);\n    //                     },\n    //                     insert(event) {\n    //                         const { index, displayValue, exportValue } = event.detail.insert;\n    //                         const selectChild = selectElement.children[index];\n    //                         const optionElement = document.createElement(\"option\");\n    //                         optionElement.textContent = displayValue;\n    //                         optionElement.value = exportValue;\n    //                         if (selectChild) {\n    //                             selectChild.before(optionElement);\n    //                         } else {\n    //                             selectElement.append(optionElement);\n    //                         }\n    //                         storage.setValue(id, {\n    //                             value: getValue(/* isExport */ true),\n    //                             items: getItems(event),\n    //                         });\n    //                         selectedValues = getValue(/* isExport */ false);\n    //                     },\n    //                     items(event) {\n    //                         const { items } = event.detail;\n    //                         while (selectElement.length !== 0) {\n    //                             selectElement.remove(0);\n    //                         }\n    //                         for (const item of items) {\n    //                             const { displayValue, exportValue } = item;\n    //                             const optionElement = document.createElement(\"option\");\n    //                             optionElement.textContent = displayValue;\n    //                             optionElement.value = exportValue;\n    //                             selectElement.append(optionElement);\n    //                         }\n    //                         if (selectElement.options.length > 0) {\n    //                             selectElement.options[0].selected = true;\n    //                         }\n    //                         storage.setValue(id, {\n    //                             value: getValue(/* isExport */ true),\n    //                             items: getItems(event),\n    //                         });\n    //                         selectedValues = getValue(/* isExport */ false);\n    //                     },\n    //                     indices(event) {\n    //                         const indices = new Set(event.detail.indices);\n    //                         for (const option of event.target.options) {\n    //                             option.selected = indices.has(option.index);\n    //                         }\n    //                         storage.setValue(id, {\n    //                             value: getValue(/* isExport */ true),\n    //                         });\n    //                         selectedValues = getValue(/* isExport */ false);\n    //                     },\n    //                     editable(event) {\n    //                         event.target.disabled = !event.detail.editable;\n    //                     },\n    //                 };\n    //                 this._dispatchEventFromSandbox(actions, jsEvent);\n    //             });\n    //             selectElement.addEventListener(\"input\", event => {\n    //                 const exportValue = getValue(/* isExport */ true);\n    //                 const change = getValue(/* isExport */ false);\n    //                 storage.setValue(id, { value: exportValue });\n    //                 event.preventDefault();\n    //                 this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n    //                     source: this,\n    //                     detail: {\n    //                         id,\n    //                         name: \"Keystroke\",\n    //                         value: selectedValues,\n    //                         change,\n    //                         changeEx: exportValue,\n    //                         willCommit: false,\n    //                         commitKey: 1,\n    //                         keyDown: false,\n    //                     },\n    //                 });\n    //             });\n    //             this._setEventListeners(\n    //                 selectElement,\n    //                 null,\n    //                 [\n    //                     [\"focus\", \"Focus\"],\n    //                     [\"blur\", \"Blur\"],\n    //                     [\"mousedown\", \"Mouse Down\"],\n    //                     [\"mouseenter\", \"Mouse Enter\"],\n    //                     [\"mouseleave\", \"Mouse Exit\"],\n    //                     [\"mouseup\", \"Mouse Up\"],\n    //                     [\"input\", \"Action\"],\n    //                     [\"input\", \"Validate\"],\n    //                 ],\n    //                 event => event.target.value\n    //             );\n    //         } else {\n    //             selectElement.addEventListener(\"input\", function () {\n    //                 storage.setValue(id, { value: getValue(/* isExport */ true) });\n    //             });\n    //         }\n    //         if (this.data.combo) {\n    //             this._setTextStyle(selectElement);\n    //         } else {\n    //             // Just use the default font size...\n    //             // it's a bit hard to guess what is a good size.\n    //         }\n    //         this._setBackgroundColor(selectElement);\n    //         this._setDefaultPropertiesFromJS(selectElement);\n    //         this.container.append(selectElement);\n    //         return this.container;\n    //     }\n    // }\n    class PopupAnnotationElement extends AnnotationElement {\n        // todo: props\n        constructor(parameters) {\n            const { data, elements } = parameters;\n            super(parameters, { isRenderable: AnnotationElement._hasPopupData(data) });\n            // todo: props\n            this.elements = [];\n            this.elements = elements;\n            this.popup = null;\n        }\n        render() {\n            this.container.classList.add(\"popupAnnotation\");\n            const popup = (this.popup = new PopupElement({\n                container: this.container,\n                color: this.data.color,\n                titleObj: this.data.titleObj,\n                modificationDate: this.data.modificationDate,\n                contentsObj: this.data.contentsObj,\n                richText: this.data.richText,\n                rect: this.data.rect,\n                parentRect: this.data.parentRect || null,\n                parent: this.parent,\n                elements: this.elements,\n                open: this.data.open,\n            }));\n            const elementIds = [];\n            for (const element of this.elements) {\n                element.popup = popup;\n                elementIds.push(element.data.id);\n                element.addHighlightArea();\n            }\n            this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${AnnotationPrefix}${id}`).join(\",\"));\n            return this.container;\n        }\n    }\n    class PopupElement {\n        constructor({ container, color, elements, titleObj, modificationDate, contentsObj, richText, parent, rect, parentRect, open, }) {\n            var _a;\n            _PopupElement_instances.add(this);\n            // todo: props\n            this.trigger = null;\n            // todo: props\n            _PopupElement_boundKeyDown.set(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_keyDown).bind(this));\n            _PopupElement_boundHide.set(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_hide).bind(this));\n            _PopupElement_boundShow.set(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_show).bind(this));\n            _PopupElement_boundToggle.set(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_toggle).bind(this));\n            _PopupElement_color.set(this, null);\n            _PopupElement_container.set(this, null);\n            _PopupElement_contentsObj.set(this, null);\n            _PopupElement_dateObj.set(this, null);\n            _PopupElement_elements.set(this, null);\n            _PopupElement_parent.set(this, null);\n            _PopupElement_parentRect.set(this, null);\n            _PopupElement_pinned.set(this, false);\n            _PopupElement_popup.set(this, null);\n            _PopupElement_position.set(this, null);\n            _PopupElement_rect.set(this, null);\n            _PopupElement_richText.set(this, null);\n            _PopupElement_titleObj.set(this, null);\n            _PopupElement_updates.set(this, null);\n            _PopupElement_wasVisible.set(this, false);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_container, container, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_titleObj, titleObj, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_contentsObj, contentsObj, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_richText, richText, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_parent, parent, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_color, color, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_rect, rect, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_parentRect, parentRect, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_elements, elements, \"f\");\n            // The modification date is shown in the popup instead of the creation\n            // date if it is available and can be parsed correctly, which is\n            // consistent with other viewers such as Adobe Acrobat.\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_dateObj, kendo_pdfjs_loader_js.PDFDateString.toDateObject(modificationDate), \"f\");\n            this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n            // Attach the event listeners to the trigger element.\n            for (const element of this.trigger) {\n                element.addEventListener(\"click\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundToggle, \"f\"));\n                element.addEventListener(\"mouseenter\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundShow, \"f\"));\n                element.addEventListener(\"mouseleave\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundHide, \"f\"));\n                element.classList.add(\"popupTriggerArea\");\n            }\n            // Attach the event listener to toggle the popup with the keyboard.\n            for (const element of elements) {\n                (_a = element.container) === null || _a === void 0 ? void 0 : _a.addEventListener(\"keydown\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundKeyDown, \"f\"));\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").hidden = true;\n            if (open) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_toggle).call(this);\n            }\n            // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n            // Since the popup is lazily created, we need to ensure that it'll be\n            // created and displayed during reference tests.\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_parent, \"f\").popupShow.push(() => kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").hidden) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_show).call(this);\n                }\n            }));\n            // }\n        }\n        render() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_popup, \"f\")) {\n                return;\n            }\n            const popup = (kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_popup, document.createElement(\"div\"), \"f\"));\n            popup.className = \"popup\";\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_color, \"f\")) {\n                const baseColor = (popup.style.outlineColor = kendo_pdfjs_loader_js.Util.makeHexColor(\n                // @ts-expect-error TS(2556):\n                ...kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_color, \"f\")));\n                if (\n                // (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n                CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) {\n                    popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n                }\n                else {\n                    // color-mix isn't supported in some browsers hence this version.\n                    // See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix#browser_compatibility\n                    // TODO: Use color-mix when it's supported everywhere.\n                    // Enlighten the color.\n                    const BACKGROUND_ENLIGHT = 0.7;\n                    popup.style.backgroundColor = kendo_pdfjs_loader_js.Util.makeHexColor(\n                    // @ts-expect-error TS(2556):\n                    ...kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_color, \"f\").map(c => Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n                }\n            }\n            const header = document.createElement(\"span\");\n            header.className = \"header\";\n            const title = document.createElement(\"h1\");\n            header.append(title);\n            ({ dir: title.dir, str: title.textContent } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_titleObj, \"f\"));\n            popup.append(header);\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_dateObj, \"f\")) {\n                const modificationDate = document.createElement(\"span\");\n                modificationDate.classList.add(\"popupDate\");\n                modificationDate.setAttribute(\"data-l10n-id\", \"pdfjs-annotation-date-string\");\n                modificationDate.setAttribute(\"data-l10n-args\", JSON.stringify({\n                    date: kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_dateObj, \"f\").toLocaleDateString(),\n                    time: kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_dateObj, \"f\").toLocaleTimeString(),\n                }));\n                header.append(modificationDate);\n            }\n            const html = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"a\", _PopupElement_html_get);\n            if (html) {\n                // @ts-expect-error TS(2556):\n                kendo_pdfjs_loader_js.XfaLayer.render({\n                    xfaHtml: html,\n                    intent: \"richText\",\n                    div: popup,\n                });\n                // @ts-expect-error TS(2556):\n                popup.lastChild.classList.add(\"richText\", \"popupContent\");\n            }\n            else {\n                const contents = this._formatContents(kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_contentsObj, \"f\"));\n                popup.append(contents);\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").append(popup);\n        }\n        /**\n         * Format the contents of the popup by adding newlines where necessary.\n         *\n         * @private\n         * @param {Object<string, string>} contentsObj\n         * @memberof PopupElement\n         * @returns {HTMLParagraphElement}\n         */\n        _formatContents({ str, dir }) {\n            const p = document.createElement(\"p\");\n            p.classList.add(\"popupContent\");\n            p.dir = dir;\n            const lines = str.split(/(?:\\r\\n?|\\n)/);\n            for (let i = 0, ii = lines.length; i < ii; ++i) {\n                const line = lines[i];\n                p.append(document.createTextNode(line));\n                if (i < ii - 1) {\n                    p.append(document.createElement(\"br\"));\n                }\n            }\n            return p;\n        }\n        updateEdited({ rect, popupContent }) {\n            var _a;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_updates, kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_updates, \"f\") || {\n                contentsObj: kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_contentsObj, \"f\"),\n                richText: kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_richText, \"f\"),\n            }, \"f\");\n            if (rect) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_position, null, \"f\");\n            }\n            if (popupContent) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_richText, kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_makePopupContent).call(this, popupContent), \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_contentsObj, null, \"f\");\n            }\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_popup, \"f\")) === null || _a === void 0 ? void 0 : _a.remove();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_popup, null, \"f\");\n        }\n        resetEdited() {\n            var _a;\n            var _b, _c;\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_updates, \"f\")) {\n                return;\n            }\n            (_b = this, _c = this, { contentsObj: ({ set value(_a) { kendo_dateinputsCommon_cmn_chunk_js._(_b, _PopupElement_contentsObj, _a, \"f\"); } }).value, richText: ({ set value(_a) { kendo_dateinputsCommon_cmn_chunk_js._(_c, _PopupElement_richText, _a, \"f\"); } }).value } =\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_updates, \"f\"));\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_updates, null, \"f\");\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_popup, \"f\")) === null || _a === void 0 ? void 0 : _a.remove();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_popup, null, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_position, null, \"f\");\n        }\n        forceHide() {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_wasVisible, this.isVisible, \"f\");\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_wasVisible, \"f\")) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").hidden = true;\n        }\n        maybeShow() {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_wasVisible, \"f\")) {\n                return;\n            }\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_popup, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_show).call(this);\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_wasVisible, false, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").hidden = false;\n        }\n        get isVisible() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").hidden === false;\n        }\n    }\n    _PopupElement_boundKeyDown = new WeakMap(), _PopupElement_boundHide = new WeakMap(), _PopupElement_boundShow = new WeakMap(), _PopupElement_boundToggle = new WeakMap(), _PopupElement_color = new WeakMap(), _PopupElement_container = new WeakMap(), _PopupElement_contentsObj = new WeakMap(), _PopupElement_dateObj = new WeakMap(), _PopupElement_elements = new WeakMap(), _PopupElement_parent = new WeakMap(), _PopupElement_parentRect = new WeakMap(), _PopupElement_pinned = new WeakMap(), _PopupElement_popup = new WeakMap(), _PopupElement_position = new WeakMap(), _PopupElement_rect = new WeakMap(), _PopupElement_richText = new WeakMap(), _PopupElement_titleObj = new WeakMap(), _PopupElement_updates = new WeakMap(), _PopupElement_wasVisible = new WeakMap(), _PopupElement_instances = new WeakSet(), _PopupElement_html_get = function _PopupElement_html_get() {\n        const richText = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_richText, \"f\");\n        const contentsObj = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_contentsObj, \"f\");\n        if ((richText === null || richText === void 0 ? void 0 : richText.str) &&\n            (!(contentsObj === null || contentsObj === void 0 ? void 0 : contentsObj.str) || contentsObj.str === richText.str)) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_richText, \"f\").html || null;\n        }\n        return null;\n    }, _PopupElement_fontSize_get = function _PopupElement_fontSize_get() {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"a\", _PopupElement_html_get)) === null || _a === void 0 ? void 0 : _a.attributes) === null || _b === void 0 ? void 0 : _b.style) === null || _c === void 0 ? void 0 : _c.fontSize) || 0;\n    }, _PopupElement_fontColor_get = function _PopupElement_fontColor_get() {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"a\", _PopupElement_html_get)) === null || _a === void 0 ? void 0 : _a.attributes) === null || _b === void 0 ? void 0 : _b.style) === null || _c === void 0 ? void 0 : _c.color) || null;\n    }, _PopupElement_makePopupContent = function _PopupElement_makePopupContent(text) {\n        const popupLines = [];\n        const popupContent = {\n            str: text,\n            html: {\n                name: \"div\",\n                attributes: {\n                    dir: \"auto\",\n                },\n                children: [\n                    {\n                        name: \"p\",\n                        children: popupLines,\n                    },\n                ],\n            },\n        };\n        const lineAttributes = {\n            style: {\n                color: kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"a\", _PopupElement_fontColor_get),\n                fontSize: kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"a\", _PopupElement_fontSize_get)\n                    ? `calc(${kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"a\", _PopupElement_fontSize_get)}px * var(--scale-factor))`\n                    : \"\",\n            },\n        };\n        for (const line of text.split(\"\\n\")) {\n            popupLines.push({\n                name: \"span\",\n                value: line,\n                attributes: lineAttributes,\n            });\n        }\n        return popupContent;\n    }, _PopupElement_keyDown = function _PopupElement_keyDown(event) {\n        if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n        if (event.key === \"Enter\" || (event.key === \"Escape\" && kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_pinned, \"f\"))) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_toggle).call(this);\n        }\n    }, _PopupElement_setPosition = function _PopupElement_setPosition() {\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_position, \"f\") !== null) {\n            return;\n        }\n        const { page: { view }, viewport: { rawDims: { pageWidth, pageHeight, pageX, pageY }, }, } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_parent, \"f\");\n        let useParentRect = !!kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_parentRect, \"f\");\n        let rect = useParentRect ? kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_parentRect, \"f\") : kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_rect, \"f\");\n        for (const element of kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_elements, \"f\")) {\n            if (!rect || kendo_pdfjs_loader_js.Util.intersect(element.data.rect, rect) !== null) {\n                rect = element.data.rect;\n                useParentRect = true;\n                break;\n            }\n        }\n        const normalizedRect = kendo_pdfjs_loader_js.Util.normalizeRect([\n            rect[0],\n            view[3] - rect[1] + view[1],\n            rect[2],\n            view[3] - rect[3] + view[1],\n        ]);\n        const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n        const parentWidth = useParentRect\n            ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION\n            : 0;\n        const popupLeft = normalizedRect[0] + parentWidth;\n        const popupTop = normalizedRect[1];\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_position, [\n            (100 * (popupLeft - pageX)) / pageWidth,\n            (100 * (popupTop - pageY)) / pageHeight,\n        ], \"f\");\n        const { style } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\");\n        style.left = `${kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_position, \"f\")[0]}%`;\n        style.top = `${kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_position, \"f\")[1]}%`;\n    }, _PopupElement_toggle = function _PopupElement_toggle() {\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _PopupElement_pinned, !kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_pinned, \"f\"), \"f\");\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_pinned, \"f\")) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_show).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").addEventListener(\"click\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundToggle, \"f\"));\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").addEventListener(\"keydown\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundKeyDown, \"f\"));\n        }\n        else {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_hide).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").removeEventListener(\"click\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundToggle, \"f\"));\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").removeEventListener(\"keydown\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_boundKeyDown, \"f\"));\n        }\n    }, _PopupElement_show = function _PopupElement_show() {\n        if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_popup, \"f\")) {\n            this.render();\n        }\n        if (!this.isVisible) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_instances, \"m\", _PopupElement_setPosition).call(this);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").hidden = false;\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").style.zIndex = (parseInt(kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").style.zIndex, 10) + 1000).toString();\n        }\n        else if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_pinned, \"f\")) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").classList.add(\"focused\");\n        }\n    }, _PopupElement_hide = function _PopupElement_hide() {\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").classList.remove(\"focused\");\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_pinned, \"f\") || !this.isVisible) {\n            return;\n        }\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").hidden = true;\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").style.zIndex = (parseInt(kendo_dateinputsCommon_cmn_chunk_js.a(this, _PopupElement_container, \"f\").style.zIndex, 10) - 1000).toString();\n    };\n    class FreeTextAnnotationElement extends AnnotationElement {\n        // todo: props\n        constructor(parameters) {\n            super(parameters, { isRenderable: true, ignoreBorder: true });\n            // todo: props\n            this.textContent = null;\n            this.textPosition = null;\n            this.textContent = parameters.data.textContent;\n            this.textPosition = parameters.data.textPosition;\n            this.annotationEditorType = kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT;\n        }\n        render() {\n            // this.container.classList.add(\"freeTextAnnotation\");\n            // this.container.classList.add(\"freeTextAnnotation\");\n            this.container.classList.add(\"k-free-text-annotation\");\n            if (this.textContent) {\n                const content = document.createElement(\"div\");\n                // content.classList.add(\"annotationTextContent\");\n                content.classList.add(\"k-annotation-text-content\");\n                content.setAttribute(\"role\", \"comment\");\n                for (const line of this.textContent) {\n                    const lineSpan = document.createElement(\"span\");\n                    lineSpan.textContent = line;\n                    content.append(lineSpan);\n                }\n                this.container.append(content);\n            }\n            // if (!this.data.popupRef && this.hasPopupData) {\n            //     this._createPopup();\n            // }\n            this._editOnDoubleClick();\n            return this.container;\n        }\n    }\n    // class LineAnnotationElement extends AnnotationElement {\n    //     #line = null;\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true, ignoreBorder: true });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"lineAnnotation\");\n    //         // Create an invisible line with the same starting and ending coordinates\n    //         // that acts as the trigger for the popup. Only the line itself should\n    //         // trigger the popup, not the entire container.\n    //         const data = this.data;\n    //         const { width, height } = getRectDims(data.rect);\n    //         const svg = this.svgFactory.create(\n    //             width,\n    //             height,\n    //             /* skipDimensions = */ true\n    //         );\n    //         // PDF coordinates are calculated from a bottom left origin, so transform\n    //         // the line coordinates to a top left origin for the SVG element.\n    //         const line = (this.#line = this.svgFactory.createElement(\"svg:line\"));\n    //         line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    //         line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    //         line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    //         line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    //         // won't be possible to open/close the popup (note e.g. issue 11122).\n    //         line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    //         line.setAttribute(\"stroke\", \"transparent\");\n    //         line.setAttribute(\"fill\", \"transparent\");\n    //         svg.append(line);\n    //         this.container.append(svg);\n    //         // Create the popup ourselves so that we can bind it to the line instead\n    //         // of to the entire container (which is the default).\n    //         if (!data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         return this.container;\n    //     }\n    //     getElementsToTriggerPopup() {\n    //         return this.#line;\n    //     }\n    //     addHighlightArea() {\n    //         this.container.classList.add(\"highlightArea\");\n    //     }\n    // }\n    // class SquareAnnotationElement extends AnnotationElement {\n    //     #square = null;\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true, ignoreBorder: true });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"squareAnnotation\");\n    //         // Create an invisible square with the same rectangle that acts as the\n    //         // trigger for the popup. Only the square itself should trigger the\n    //         // popup, not the entire container.\n    //         const data = this.data;\n    //         const { width, height } = getRectDims(data.rect);\n    //         const svg = this.svgFactory.create(\n    //             width,\n    //             height,\n    //             /* skipDimensions = */ true\n    //         );\n    //         // The browser draws half of the borders inside the square and half of\n    //         // the borders outside the square by default. This behavior cannot be\n    //         // changed programmatically, so correct for that here.\n    //         const borderWidth = data.borderStyle.width;\n    //         const square = (this.#square = this.svgFactory.createElement(\"svg:rect\"));\n    //         square.setAttribute(\"x\", borderWidth / 2);\n    //         square.setAttribute(\"y\", borderWidth / 2);\n    //         square.setAttribute(\"width\", width - borderWidth);\n    //         square.setAttribute(\"height\", height - borderWidth);\n    //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    //         // won't be possible to open/close the popup (note e.g. issue 11122).\n    //         square.setAttribute(\"stroke-width\", borderWidth || 1);\n    //         square.setAttribute(\"stroke\", \"transparent\");\n    //         square.setAttribute(\"fill\", \"transparent\");\n    //         svg.append(square);\n    //         this.container.append(svg);\n    //         // Create the popup ourselves so that we can bind it to the square instead\n    //         // of to the entire container (which is the default).\n    //         if (!data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         return this.container;\n    //     }\n    //     getElementsToTriggerPopup() {\n    //         return this.#square;\n    //     }\n    //     addHighlightArea() {\n    //         this.container.classList.add(\"highlightArea\");\n    //     }\n    // }\n    // class CircleAnnotationElement extends AnnotationElement {\n    //     #circle = null;\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true, ignoreBorder: true });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"circleAnnotation\");\n    //         // Create an invisible circle with the same ellipse that acts as the\n    //         // trigger for the popup. Only the circle itself should trigger the\n    //         // popup, not the entire container.\n    //         const data = this.data;\n    //         const { width, height } = getRectDims(data.rect);\n    //         const svg = this.svgFactory.create(\n    //             width,\n    //             height,\n    //             /* skipDimensions = */ true\n    //         );\n    //         // The browser draws half of the borders inside the circle and half of\n    //         // the borders outside the circle by default. This behavior cannot be\n    //         // changed programmatically, so correct for that here.\n    //         const borderWidth = data.borderStyle.width;\n    //         const circle = (this.#circle =\n    //             this.svgFactory.createElement(\"svg:ellipse\"));\n    //         circle.setAttribute(\"cx\", width / 2);\n    //         circle.setAttribute(\"cy\", height / 2);\n    //         circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    //         circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    //         // won't be possible to open/close the popup (note e.g. issue 11122).\n    //         circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    //         circle.setAttribute(\"stroke\", \"transparent\");\n    //         circle.setAttribute(\"fill\", \"transparent\");\n    //         svg.append(circle);\n    //         this.container.append(svg);\n    //         // Create the popup ourselves so that we can bind it to the circle instead\n    //         // of to the entire container (which is the default).\n    //         if (!data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         return this.container;\n    //     }\n    //     getElementsToTriggerPopup() {\n    //         return this.#circle;\n    //     }\n    //     addHighlightArea() {\n    //         this.container.classList.add(\"highlightArea\");\n    //     }\n    // }\n    // class PolylineAnnotationElement extends AnnotationElement {\n    //     // todo: props\n    //     containerClassName: any = null;\n    //     svgElementName: any = null;\n    //     // todo: props\n    //     #polyline = null;\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true, ignoreBorder: true });\n    //         this.containerClassName = \"polylineAnnotation\";\n    //         this.svgElementName = \"svg:polyline\";\n    //     }\n    //     render() {\n    //         this.container.classList.add(this.containerClassName);\n    //         // Create an invisible polyline with the same points that acts as the\n    //         // trigger for the popup. Only the polyline itself should trigger the\n    //         // popup, not the entire container.\n    //         const {\n    //             data: { rect, vertices, borderStyle, popupRef },\n    //         } = this;\n    //         if (!vertices) {\n    //             return this.container;\n    //         }\n    //         const { width, height } = getRectDims(rect);\n    //         const svg = this.svgFactory.create(\n    //             width,\n    //             height,\n    //             /* skipDimensions = */ true\n    //         );\n    //         // Convert the vertices array to a single points string that the SVG\n    //         // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    //         // calculated from a bottom left origin, so transform the polyline\n    //         // coordinates to a top left origin for the SVG element.\n    //         const pointsArray = [];\n    //         for (let i = 0, ii = vertices.length; i < ii; i += 2) {\n    //             const x = vertices[i] - rect[0];\n    //             const y = rect[3] - vertices[i + 1];\n    //             pointsArray.push(`${x},${y}`);\n    //         }\n    //         const points = pointsArray.join(\" \");\n    //         const polyline = (this.#polyline = this.svgFactory.createElement(\n    //             this.svgElementName\n    //         ));\n    //         polyline.setAttribute(\"points\", points);\n    //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    //         // won't be possible to open/close the popup (note e.g. issue 11122).\n    //         polyline.setAttribute(\"stroke-width\", borderStyle.width || 1);\n    //         polyline.setAttribute(\"stroke\", \"transparent\");\n    //         polyline.setAttribute(\"fill\", \"transparent\");\n    //         svg.append(polyline);\n    //         this.container.append(svg);\n    //         // Create the popup ourselves so that we can bind it to the polyline\n    //         // instead of to the entire container (which is the default).\n    //         if (!popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         return this.container;\n    //     }\n    //     getElementsToTriggerPopup() {\n    //         return this.#polyline;\n    //     }\n    //     addHighlightArea() {\n    //         this.container.classList.add(\"highlightArea\");\n    //     }\n    // }\n    // class PolygonAnnotationElement extends PolylineAnnotationElement {\n    //     constructor(parameters) {\n    //         // Polygons are specific forms of polylines, so reuse their logic.\n    //         super(parameters);\n    //         this.containerClassName = \"polygonAnnotation\";\n    //         this.svgElementName = \"svg:polygon\";\n    //     }\n    // }\n    // class CaretAnnotationElement extends AnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true, ignoreBorder: true });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"caretAnnotation\");\n    //         if (!this.data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         return this.container;\n    //     }\n    // }\n    // class InkAnnotationElement extends AnnotationElement {\n    //     // todo: props\n    //     containerClassName: any = null;\n    //     svgElementName: any = null;\n    //     // todo: props\n    //     #polylines = [];\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true, ignoreBorder: true });\n    //         this.containerClassName = \"inkAnnotation\";\n    //         // Use the polyline SVG element since it allows us to use coordinates\n    //         // directly and to draw both straight lines and curves.\n    //         this.svgElementName = \"svg:polyline\";\n    //         this.annotationEditorType = AnnotationEditorType.INK;\n    //     }\n    //     render() {\n    //         this.container.classList.add(this.containerClassName);\n    //         // Create an invisible polyline with the same points that acts as the\n    //         // trigger for the popup.\n    //         const {\n    //             data: { rect, inkLists, borderStyle, popupRef },\n    //         } = this;\n    //         const { width, height } = getRectDims(rect);\n    //         const svg = this.svgFactory.create(\n    //             width,\n    //             height,\n    //             /* skipDimensions = */ true\n    //         );\n    //         for (const inkList of inkLists) {\n    //             // Convert the ink list to a single points string that the SVG\n    //             // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    //             // calculated from a bottom left origin, so transform the polyline\n    //             // coordinates to a top left origin for the SVG element.\n    //             const pointsArray = [];\n    //             for (let i = 0, ii = inkList.length; i < ii; i += 2) {\n    //                 const x = inkList[i] - rect[0];\n    //                 const y = rect[3] - inkList[i + 1];\n    //                 pointsArray.push(`${x},${y}`);\n    //             }\n    //             const points = pointsArray.join(\" \");\n    //             const polyline = this.svgFactory.createElement(this.svgElementName);\n    //             this.#polylines.push(polyline);\n    //             polyline.setAttribute(\"points\", points);\n    //             // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    //             // won't be possible to open/close the popup (note e.g. issue 11122).\n    //             polyline.setAttribute(\"stroke-width\", borderStyle.width || 1);\n    //             polyline.setAttribute(\"stroke\", \"transparent\");\n    //             polyline.setAttribute(\"fill\", \"transparent\");\n    //             // Create the popup ourselves so that we can bind it to the polyline\n    //             // instead of to the entire container (which is the default).\n    //             if (!popupRef && this.hasPopupData) {\n    //                 this._createPopup();\n    //             }\n    //             svg.append(polyline);\n    //         }\n    //         this.container.append(svg);\n    //         return this.container;\n    //     }\n    //     getElementsToTriggerPopup() {\n    //         return this.#polylines;\n    //     }\n    //     addHighlightArea() {\n    //         this.container.classList.add(\"highlightArea\");\n    //     }\n    // }\n    class HighlightAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n            super(parameters, {\n                isRenderable: true,\n                ignoreBorder: true,\n                createQuadrilaterals: true,\n            });\n        }\n        render() {\n            // if (!this.data.popupRef && this.hasPopupData) {\n            //     this._createPopup();\n            // }\n            // this.container.classList.add(\"highlightAnnotation\");\n            this.container.classList.add(\"k-highlight-annotation\");\n            return this.container;\n        }\n    }\n    // class UnderlineAnnotationElement extends AnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, {\n    //             isRenderable: true,\n    //             ignoreBorder: true,\n    //             createQuadrilaterals: true,\n    //         });\n    //     }\n    //     render() {\n    //         if (!this.data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         this.container.classList.add(\"underlineAnnotation\");\n    //         return this.container;\n    //     }\n    // }\n    // class SquigglyAnnotationElement extends AnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, {\n    //             isRenderable: true,\n    //             ignoreBorder: true,\n    //             createQuadrilaterals: true,\n    //         });\n    //     }\n    //     render() {\n    //         if (!this.data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         this.container.classList.add(\"squigglyAnnotation\");\n    //         return this.container;\n    //     }\n    // }\n    // class StrikeOutAnnotationElement extends AnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, {\n    //             isRenderable: true,\n    //             ignoreBorder: true,\n    //             createQuadrilaterals: true,\n    //         });\n    //     }\n    //     render() {\n    //         if (!this.data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         this.container.classList.add(\"strikeoutAnnotation\");\n    //         return this.container;\n    //     }\n    // }\n    // class StampAnnotationElement extends AnnotationElement {\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true, ignoreBorder: true });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"stampAnnotation\");\n    //         if (!this.data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         }\n    //         return this.container;\n    //     }\n    // }\n    // class FileAttachmentAnnotationElement extends AnnotationElement {\n    //     // todo: props\n    //     filename: any = null;\n    //     content: any = null;\n    //     // todo: props\n    //     #trigger = null;\n    //     constructor(parameters) {\n    //         super(parameters, { isRenderable: true });\n    //         const { file } = this.data;\n    //         this.filename = file.filename;\n    //         this.content = file.content;\n    //         this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n    //             source: this,\n    //             ...file,\n    //         });\n    //     }\n    //     render() {\n    //         this.container.classList.add(\"fileAttachmentAnnotation\");\n    //         const { container, data } = this;\n    //         let trigger;\n    //         if (data.hasAppearance || data.fillAlpha === 0) {\n    //             trigger = document.createElement(\"div\");\n    //         } else {\n    //             // Unfortunately it seems that it's not clearly specified exactly what\n    //             // names are actually valid, since Table 184 contains:\n    //             //   Conforming readers shall provide predefined icon appearances for at\n    //             //   least the following standard names: GraphPushPin, PaperclipTag.\n    //             //   Additional names may be supported as well. Default value: PushPin.\n    //             trigger = document.createElement(\"img\");\n    //             trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ?\n    //                 \"paperclip\" : \"pushpin\"}.svg`;\n    //             if (data.fillAlpha && data.fillAlpha < 1) {\n    //                 trigger.style = `filter: opacity(${Math.round(\n    //                     data.fillAlpha * 100\n    //                 )}%);`;\n    //                 // todo: debug\n    //                 // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n    //                 //     this.container.classList.add(\"hasFillAlpha\");\n    //                 // }\n    //             }\n    //         }\n    //         trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    //         this.#trigger = trigger;\n    //         const { isMac } = FeatureTest.platform;\n    //         container.addEventListener(\"keydown\", evt => {\n    //             if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n    //                 this.#download();\n    //             }\n    //         });\n    //         if (!data.popupRef && this.hasPopupData) {\n    //             this._createPopup();\n    //         } else {\n    //             trigger.classList.add(\"popupTriggerArea\");\n    //         }\n    //         container.append(trigger);\n    //         return container;\n    //     }\n    //     getElementsToTriggerPopup() {\n    //         return this.#trigger;\n    //     }\n    //     addHighlightArea() {\n    //         this.container.classList.add(\"highlightArea\");\n    //     }\n    //     /**\n    //      * Download the file attachment associated with this annotation.\n    //      */\n    //     #download() {\n    //         this.downloadManager?.openOrDownloadData(this.content, this.filename);\n    //     }\n    // }\n    /**\n     * Manage the layer containing all the annotations.\n     */\n    class AnnotationLayer {\n        constructor({ div, accessibilityManager, annotationCanvasMap, annotationEditorUIManager, page, viewport }) {\n            _AnnotationLayer_instances.add(this);\n            this.div = null;\n            this.page = null;\n            this.viewport = null;\n            this.zIndex = null;\n            this._annotationEditorUIManager = null;\n            _AnnotationLayer_accessibilityManager.set(this, null);\n            _AnnotationLayer_annotationCanvasMap.set(this, null);\n            _AnnotationLayer_editableAnnotations.set(this, new Map());\n            this.div = div;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationLayer_accessibilityManager, accessibilityManager, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationLayer_annotationCanvasMap, annotationCanvasMap, \"f\");\n            this.page = page;\n            this.viewport = viewport;\n            this.zIndex = 0;\n            this._annotationEditorUIManager = annotationEditorUIManager;\n            // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n            //     // For testing purposes.\n            //     Object.defineProperty(this, \"showPopups\", {\n            //         value: async () => {\n            //             for (const show of this.popupShow) {\n            //                 await show();\n            //             }\n            //         },\n            //     });\n            //     this.popupShow = [];\n            // }\n        }\n        // todo: ported from AnnotationLayerBuilder\n        hide() {\n            if (!this.div) {\n                return;\n            }\n            this.div.hidden = true;\n        }\n        // todo: ported from AnnotationLayerBuilder\n        hasEditableAnnotations() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_editableAnnotations, \"f\").size > 0;\n        }\n        /**\n         * Render a new annotation layer with all annotation elements.\n         *\n         * @param {AnnotationLayerParameters} params\n         * @memberof AnnotationLayer\n         */\n        // async render(params) {\n        render(params) {\n            var _a;\n            const { annotations } = params;\n            const layer = this.div;\n            kendo_pdfjs_loader_js.setLayerDimensions(layer, this.viewport);\n            const popupToElements = new Map();\n            const elementParams = {\n                data: null,\n                layer,\n                linkService: params.linkService,\n                downloadManager: params.downloadManager,\n                imageResourcesPath: params.imageResourcesPath || \"\",\n                renderForms: params.renderForms !== false,\n                svgFactory: new kendo_pdfjs_loader_js.DOMSVGFactory(),\n                annotationStorage: params.annotationStorage,\n                enableScripting: params.enableScripting === true,\n                hasJSActions: params.hasJSActions,\n                fieldObjects: params.fieldObjects,\n                parent: this,\n                elements: null,\n            };\n            for (const data of annotations) {\n                if (data.noHTML) {\n                    continue;\n                }\n                const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;\n                if (!isPopupAnnotation) {\n                    const { width, height } = getRectDims(data.rect);\n                    if (width <= 0 || height <= 0) {\n                        continue; // Ignore empty annotations.\n                    }\n                }\n                else {\n                    const elements = popupToElements.get(data.id);\n                    if (!elements) {\n                        // Ignore popup annotations without a corresponding annotation.\n                        continue;\n                    }\n                    elementParams.elements = elements;\n                }\n                elementParams.data = data;\n                const element = AnnotationElementFactory.create(elementParams);\n                if (!element.isRenderable) {\n                    continue;\n                }\n                if (!isPopupAnnotation && data.popupRef) {\n                    const elements = popupToElements.get(data.popupRef);\n                    if (!elements) {\n                        popupToElements.set(data.popupRef, [element]);\n                    }\n                    else {\n                        elements.push(element);\n                    }\n                }\n                const rendered = element.render();\n                if (data.hidden) {\n                    rendered.style.visibility = \"hidden\";\n                }\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_instances, \"m\", _AnnotationLayer_appendElement).call(this, rendered, data.id);\n                if (element._isEditable) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_editableAnnotations, \"f\").set(element.data.id, element);\n                    (_a = this._annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.renderAnnotationElement(element);\n                }\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_instances, \"m\", _AnnotationLayer_setAnnotationCanvasMap).call(this);\n        }\n        /**\n         * Update the annotation elements on existing annotation layer.\n         *\n         * @param {AnnotationLayerParameters} viewport\n         * @memberof AnnotationLayer\n         */\n        update({ viewport }) {\n            const layer = this.div;\n            this.viewport = viewport;\n            // setLayerDimensions(layer, { rotation: viewport.rotation });\n            kendo_pdfjs_loader_js.setLayerDimensions(layer, viewport);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_instances, \"m\", _AnnotationLayer_setAnnotationCanvasMap).call(this);\n            layer.hidden = false;\n        }\n        getEditableAnnotations() {\n            return Array.from(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_editableAnnotations, \"f\").values());\n        }\n        getEditableAnnotation(id) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_editableAnnotations, \"f\").get(id);\n        }\n    }\n    _AnnotationLayer_accessibilityManager = new WeakMap(), _AnnotationLayer_annotationCanvasMap = new WeakMap(), _AnnotationLayer_editableAnnotations = new WeakMap(), _AnnotationLayer_instances = new WeakSet(), _AnnotationLayer_appendElement = function _AnnotationLayer_appendElement(element, id) {\n        var _a;\n        const contentElement = element.firstChild || element;\n        contentElement.id = `${AnnotationPrefix}${id}`;\n        this.div.append(element);\n        (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_accessibilityManager, \"f\")) === null || _a === void 0 ? void 0 : _a.moveElementInDOM(this.div, element, contentElement, \n        /* isRemovable = */ false);\n    }, _AnnotationLayer_setAnnotationCanvasMap = function _AnnotationLayer_setAnnotationCanvasMap() {\n        if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_annotationCanvasMap, \"f\")) {\n            return;\n        }\n        const layer = this.div;\n        for (const [id, canvas] of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_annotationCanvasMap, \"f\")) {\n            const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n            if (!element) {\n                continue;\n            }\n            canvas.className = \"annotationContent k-annotation-content\";\n            const { firstChild } = element;\n            if (!firstChild) {\n                element.append(canvas);\n            }\n            else if (firstChild.nodeName === \"CANVAS\") {\n                firstChild.replaceWith(canvas);\n            }\n            else if (!firstChild.classList.contains(\"annotationContent\") ||\n                !firstChild.classList.contains(\"k-annotation-content \")) {\n                firstChild.before(canvas);\n            }\n            else {\n                firstChild.after(canvas);\n            }\n        }\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayer_annotationCanvasMap, \"f\").clear();\n    };\n\n    /* Copyright 2014 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _AnnotationLayerBuilder_instances, _AnnotationLayerBuilder_onAppend, _AnnotationLayerBuilder_eventAbortController, _AnnotationLayerBuilder_updatePresentationModeState;\n    // import { PresentationModeState } from \"./shared/ui_utils\";\n    /**\n     * @typedef {Object} AnnotationLayerBuilderOptions\n     * @property {PDFPageProxy} pdfPage\n     * @property {AnnotationStorage} [annotationStorage]\n     * @property {string} [imageResourcesPath] - Path for image resources, mainly\n     *   for annotation icons. Include trailing slash.\n     * @property {boolean} renderForms\n     * @property {IPDFLinkService} linkService\n     * @property {IDownloadManager} [downloadManager]\n     * @property {boolean} [enableScripting]\n     * @property {Promise<boolean>} [hasJSActionsPromise]\n     * @property {Promise<Object<string, Array<Object>> | null>}\n     *   [fieldObjectsPromise]\n     * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n     * @property {TextAccessibilityManager} [accessibilityManager]\n     * @property {AnnotationEditorUIManager} [annotationEditorUIManager]\n     * @property {function} [onAppend]\n     */\n    class AnnotationLayerBuilder {\n        /**\n         * @param {AnnotationLayerBuilderOptions} options\n         */\n        constructor({ pdfPage, eventBus, linkService = null, \n        // downloadManager,\n        annotationStorage = null, \n        // imageResourcesPath = \"\",\n        // renderForms = true,\n        // enableScripting = false,\n        // hasJSActionsPromise = null,\n        // fieldObjectsPromise = null,\n        annotationCanvasMap = null, accessibilityManager = null, annotationEditorUIManager = null, onAppend = null, }) {\n            _AnnotationLayerBuilder_instances.add(this);\n            // todo: props ported from pdf.js\n            this.annotationLayer = null;\n            this.pdfPage = null;\n            this.linkService = null;\n            this.annotationStorage = null;\n            this._annotationCanvasMap = null;\n            this._annotationEditorUIManager = null;\n            this.div = null;\n            this._cancelled = null;\n            this._eventBus = null;\n            this._accessibilityManager = null;\n            // todo: props ported from pdf.js\n            _AnnotationLayerBuilder_onAppend.set(this, null);\n            _AnnotationLayerBuilder_eventAbortController.set(this, null);\n            this.pdfPage = pdfPage;\n            this.linkService = linkService;\n            // this.downloadManager = downloadManager;\n            // this.imageResourcesPath = imageResourcesPath;\n            // this.renderForms = renderForms;\n            this.annotationStorage = annotationStorage;\n            // this.enableScripting = enableScripting;\n            // this._hasJSActionsPromise = hasJSActionsPromise || Promise.resolve(false);\n            // this._fieldObjectsPromise = fieldObjectsPromise || Promise.resolve(null);\n            this._annotationCanvasMap = annotationCanvasMap;\n            this._accessibilityManager = accessibilityManager;\n            this._annotationEditorUIManager = annotationEditorUIManager;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationLayerBuilder_onAppend, onAppend, \"f\");\n            this.annotationLayer = null;\n            this.div = null;\n            this._cancelled = false;\n            this._eventBus = (linkService === null || linkService === void 0 ? void 0 : linkService.eventBus) || eventBus;\n        }\n        /**\n         * @param {PageViewport} viewport\n         * @param {string} intent (default value is 'display')\n         * @returns {Promise<void>} A promise that is resolved when rendering of the\n         *   annotations is complete.\n         */\n        render(viewport_1) {\n            return kendo_dateinputsCommon_cmn_chunk_js.b(this, arguments, void 0, function* (viewport, intent = \"display\") {\n                var _a, _b, _c;\n                if (this.div) {\n                    if (this._cancelled || !this.annotationLayer) {\n                        return;\n                    }\n                    // If an annotationLayer already exists, refresh its children's\n                    // transformation matrices.\n                    this.annotationLayer.update({\n                        viewport: viewport.clone({ dontFlip: true }),\n                    });\n                    return;\n                }\n                // const [annotations, hasJSActions, fieldObjects] = await Promise.all([\n                const [annotations] = yield Promise.all([\n                    this.pdfPage.getAnnotations({ intent }),\n                    // this._hasJSActionsPromise,\n                    // this._fieldObjectsPromise,\n                ]);\n                if (this._cancelled) {\n                    return;\n                }\n                // Create an annotation layer div and render the annotations\n                // if there is at least one annotation.\n                // const div = (this.div = document.createElement(\"div\"));\n                // div.className = \"annotationLayer\";\n                // this.#onAppend?.(div);\n                if (annotations.length === 0) {\n                    this.hide();\n                    return;\n                }\n                const page = this.pdfPage;\n                const pageView = (_a = page._pageInfo) === null || _a === void 0 ? void 0 : _a.view;\n                const pageWidthAnnotationLayer = (pageView[2] || 0) + \"px\";\n                const pageHeightAnnotationLayer = (pageView[3] || 0) + \"px\";\n                const div = convertToHtml(`\n            <div class=\"k-annotation-layer annotationLayer\" data-main-rotation=\"0\"\n                 style=\"width: round(var(--scale-factor) * ${pageWidthAnnotationLayer}, 1px);\n                        height: round(var(--scale-factor) * ${pageHeightAnnotationLayer}, 1px);\">\n            </div>\n        `);\n                this.div = div;\n                (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayerBuilder_onAppend, \"f\")) === null || _b === void 0 ? void 0 : _b.call(this, div);\n                this.annotationLayer = new AnnotationLayer({\n                    div,\n                    // accessibilityManager: this._accessibilityManager,\n                    accessibilityManager: null,\n                    annotationCanvasMap: this._annotationCanvasMap,\n                    annotationEditorUIManager: this._annotationEditorUIManager,\n                    page: this.pdfPage,\n                    viewport: viewport.clone({ dontFlip: true }),\n                });\n                yield this.annotationLayer.render({\n                    annotations,\n                    // imageResourcesPath: this.imageResourcesPath,\n                    // renderForms: this.renderForms,\n                    linkService: this.linkService,\n                    // downloadManager: this.downloadManager,\n                    // annotationStorage: this.annotationStorage,\n                    // enableScripting: this.enableScripting,\n                    // hasJSActions,\n                    // fieldObjects,\n                });\n                // Ensure that interactive form elements in the annotationLayer are\n                // disabled while PresentationMode is active (see issue 12232).\n                if (this.linkService.isInPresentationMode) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayerBuilder_instances, \"m\", _AnnotationLayerBuilder_updatePresentationModeState).call(this, PresentationModeState.FULLSCREEN);\n                }\n                if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayerBuilder_eventAbortController, \"f\")) {\n                    kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationLayerBuilder_eventAbortController, new AbortController(), \"f\");\n                    (_c = this._eventBus) === null || _c === void 0 ? void 0 : _c._on(\"presentationmodechanged\", evt => {\n                        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayerBuilder_instances, \"m\", _AnnotationLayerBuilder_updatePresentationModeState).call(this, evt.state);\n                    }, { signal: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayerBuilder_eventAbortController, \"f\").signal });\n                }\n            });\n        }\n        cancel() {\n            var _a;\n            this._cancelled = true;\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationLayerBuilder_eventAbortController, \"f\")) === null || _a === void 0 ? void 0 : _a.abort();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationLayerBuilder_eventAbortController, null, \"f\");\n        }\n        hide() {\n            if (!this.div) {\n                return;\n            }\n            this.div.hidden = true;\n        }\n        hasEditableAnnotations() {\n            var _a;\n            return !!((_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.hasEditableAnnotations());\n        }\n    }\n    _AnnotationLayerBuilder_onAppend = new WeakMap(), _AnnotationLayerBuilder_eventAbortController = new WeakMap(), _AnnotationLayerBuilder_instances = new WeakSet(), _AnnotationLayerBuilder_updatePresentationModeState = function _AnnotationLayerBuilder_updatePresentationModeState(state) {\n        if (!this.div) {\n            return;\n        }\n        let disableFormElements = false;\n        switch (state) {\n            case PresentationModeState.FULLSCREEN:\n                disableFormElements = true;\n                break;\n            case PresentationModeState.NORMAL:\n                break;\n            default:\n                return;\n        }\n        for (const section of this.div.childNodes) {\n            if (section.hasAttribute(\"data-internal-link\")) {\n                continue;\n            }\n            section.inert = disableFormElements;\n        }\n    };\n\n    /* Copyright 2023 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _DrawLayer_instances, _a$6, _DrawLayer_parent, _DrawLayer_id, _DrawLayer_mapping, _DrawLayer_toUpdate, _DrawLayer_setBox, _DrawLayer_createSVG, _DrawLayer_createClipPath;\n    /**\n     * Manage the SVGs drawn on top of the page canvas.\n     * It's important to have them directly on top of the canvas because we want to\n     * be able to use mix-blend-mode for some of them.\n     */\n    class DrawLayer {\n        constructor({ pageIndex }) {\n            _DrawLayer_instances.add(this);\n            // todo: props\n            this.pageIndex = 0;\n            // todo: props\n            _DrawLayer_parent.set(this, null);\n            _DrawLayer_id.set(this, 0);\n            _DrawLayer_mapping.set(this, new Map());\n            _DrawLayer_toUpdate.set(this, new Map());\n            this.pageIndex = pageIndex;\n        }\n        setParent(parent) {\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_parent, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _DrawLayer_parent, parent, \"f\");\n                return;\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_parent, \"f\") !== parent) {\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").size > 0) {\n                    for (const root of kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").values()) {\n                        root.remove();\n                        parent.append(root);\n                    }\n                }\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _DrawLayer_parent, parent, \"f\");\n            }\n        }\n        static get _svgFactory() {\n            return kendo_pdfjs_loader_js.shadow(this, \"_svgFactory\", new kendo_pdfjs_loader_js.DOMSVGFactory());\n        }\n        highlight(outlines, color, opacity, isPathUpdatable = false) {\n            var _b, _c;\n            const id = (kendo_dateinputsCommon_cmn_chunk_js._(this, _DrawLayer_id, (_c = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_id, \"f\"), _b = _c++, _c), \"f\"), _b);\n            const root = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_instances, \"m\", _DrawLayer_createSVG).call(this, outlines.box);\n            // root.classList.add(\"highlight\");\n            root.classList.add(\"k-highlight\");\n            if (outlines.free) {\n                // root.classList.add(\"free\");\n            }\n            const defs = _a$6._svgFactory.createElement(\"defs\");\n            root.append(defs);\n            const path = _a$6._svgFactory.createElement(\"path\");\n            defs.append(path);\n            const pathId = `path_p${this.pageIndex}_${id}`;\n            path.setAttribute(\"id\", pathId);\n            path.setAttribute(\"d\", outlines.toSVGPath());\n            if (isPathUpdatable) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_toUpdate, \"f\").set(id, path);\n            }\n            // Create the clipping path for the editor div.\n            const clipPathId = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_instances, \"m\", _DrawLayer_createClipPath).call(this, defs, pathId);\n            const use = _a$6._svgFactory.createElement(\"use\");\n            root.append(use);\n            root.setAttribute(\"fill\", color);\n            root.setAttribute(\"fill-opacity\", opacity);\n            use.setAttribute(\"href\", `#${pathId}`);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").set(id, root);\n            return { id, clipPathId: `url(#${clipPathId})` };\n        }\n        highlightOutline(outlines) {\n            var _b, _c;\n            // We cannot draw the outline directly in the SVG for highlights because\n            // it composes with its parent with mix-blend-mode: multiply.\n            // But the outline has a different mix-blend-mode, so we need to draw it in\n            // its own SVG.\n            const id = (kendo_dateinputsCommon_cmn_chunk_js._(this, _DrawLayer_id, (_c = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_id, \"f\"), _b = _c++, _c), \"f\"), _b);\n            const root = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_instances, \"m\", _DrawLayer_createSVG).call(this, outlines.box);\n            // root.classList.add(\"highlightOutline\");\n            root.classList.add(\"k-highlight-outline\");\n            const defs = _a$6._svgFactory.createElement(\"defs\");\n            root.append(defs);\n            const path = _a$6._svgFactory.createElement(\"path\");\n            defs.append(path);\n            const pathId = `path_p${this.pageIndex}_${id}`;\n            path.setAttribute(\"id\", pathId);\n            path.setAttribute(\"d\", outlines.toSVGPath());\n            path.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n            let maskId;\n            if (outlines.free) {\n                // root.classList.add(\"free\");\n                const mask = _a$6._svgFactory.createElement(\"mask\");\n                defs.append(mask);\n                maskId = `mask_p${this.pageIndex}_${id}`;\n                mask.setAttribute(\"id\", maskId);\n                mask.setAttribute(\"maskUnits\", \"objectBoundingBox\");\n                const rect = _a$6._svgFactory.createElement(\"rect\");\n                mask.append(rect);\n                rect.setAttribute(\"width\", \"1\");\n                rect.setAttribute(\"height\", \"1\");\n                rect.setAttribute(\"fill\", \"white\");\n                const use = _a$6._svgFactory.createElement(\"use\");\n                mask.append(use);\n                use.setAttribute(\"href\", `#${pathId}`);\n                use.setAttribute(\"stroke\", \"none\");\n                use.setAttribute(\"fill\", \"black\");\n                use.setAttribute(\"fill-rule\", \"nonzero\");\n                // use.classList.add(\"mask\");\n            }\n            const use1 = _a$6._svgFactory.createElement(\"use\");\n            root.append(use1);\n            use1.setAttribute(\"href\", `#${pathId}`);\n            if (maskId) {\n                use1.setAttribute(\"mask\", `url(#${maskId})`);\n            }\n            const use2 = use1.cloneNode();\n            root.append(use2);\n            // use1.classList.add(\"mainOutline\");\n            // use2.classList.add(\"secondaryOutline\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").set(id, root);\n            return id;\n        }\n        finalizeLine(id, line) {\n            const path = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_toUpdate, \"f\").get(id);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_toUpdate, \"f\").delete(id);\n            this.updateBox(id, line.box);\n            path.setAttribute(\"d\", line.toSVGPath());\n        }\n        updateLine(id, line) {\n            const root = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id);\n            const defs = root.firstChild;\n            const path = defs.firstChild;\n            path.setAttribute(\"d\", line.toSVGPath());\n        }\n        removeFreeHighlight(id) {\n            this.remove(id);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_toUpdate, \"f\").delete(id);\n        }\n        updatePath(id, line) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_toUpdate, \"f\").get(id).setAttribute(\"d\", line.toSVGPath());\n        }\n        updateBox(id, box) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(_a$6, _a$6, \"m\", _DrawLayer_setBox).call(_a$6, kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id), box);\n        }\n        show(id, visible) {\n            // this.#mapping.get(id).classList.toggle(\"hidden\", !visible);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id).classList.toggle(\"k-hidden\", !visible);\n        }\n        rotate(id, angle) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id).setAttribute(\"data-main-rotation\", angle);\n        }\n        changeColor(id, color) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id).setAttribute(\"fill\", color);\n        }\n        changeOpacity(id, opacity) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id).setAttribute(\"fill-opacity\", opacity);\n        }\n        addClass(id, className) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id).classList.add(className);\n        }\n        removeClass(id, className) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id).classList.remove(className);\n        }\n        remove(id) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_parent, \"f\") === null) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").get(id).remove();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").delete(id);\n        }\n        destroy() {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _DrawLayer_parent, null, \"f\");\n            for (const root of kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").values()) {\n                root.remove();\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_mapping, \"f\").clear();\n        }\n    }\n    _a$6 = DrawLayer, _DrawLayer_parent = new WeakMap(), _DrawLayer_id = new WeakMap(), _DrawLayer_mapping = new WeakMap(), _DrawLayer_toUpdate = new WeakMap(), _DrawLayer_instances = new WeakSet(), _DrawLayer_setBox = function _DrawLayer_setBox(element, { x = 0, y = 0, width = 1, height = 1 } = {}) {\n        const { style } = element;\n        style.top = `${100 * y}%`;\n        style.left = `${100 * x}%`;\n        // style.width = `${100 * width}%`;\n        // style.height = `${100 * height}%`;\n        // todo: reduce the dimensions, so that the annotation editor toolbar\n        // does not overlap the outline\n        style.width = `${100 * width - 0.2}%`;\n        style.height = `${100 * height - 0.2}%`;\n    }, _DrawLayer_createSVG = function _DrawLayer_createSVG(box) {\n        const svg = _a$6._svgFactory.create(1, 1, /* skipDimensions = */ true);\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayer_parent, \"f\").append(svg);\n        svg.setAttribute(\"aria-hidden\", true);\n        kendo_dateinputsCommon_cmn_chunk_js.a(_a$6, _a$6, \"m\", _DrawLayer_setBox).call(_a$6, svg, box);\n        return svg;\n    }, _DrawLayer_createClipPath = function _DrawLayer_createClipPath(defs, pathId) {\n        const clipPath = _a$6._svgFactory.createElement(\"clipPath\");\n        defs.append(clipPath);\n        const clipPathId = `clip_${pathId}`;\n        clipPath.setAttribute(\"id\", clipPathId);\n        clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n        const clipPathUse = _a$6._svgFactory.createElement(\"use\");\n        clipPath.append(clipPathUse);\n        clipPathUse.setAttribute(\"href\", `#${pathId}`);\n        // clipPathUse.classList.add(\"clip\");\n        return clipPathId;\n    };\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _DrawLayerBuilder_drawLayer;\n    /**\n     * @typedef {Object} DrawLayerBuilderOptions\n     * @property {number} pageIndex\n     */\n    class DrawLayerBuilder {\n        /**\n         * @param {DrawLayerBuilderOptions} options\n         */\n        constructor(options) {\n            // todo: props\n            this.pageIndex = null;\n            this._cancelled = null;\n            // todo: props\n            _DrawLayerBuilder_drawLayer.set(this, null);\n            this.pageIndex = options.pageIndex;\n        }\n        /**\n         * @param {string} intent (default value is 'display')\n         */\n        render() {\n            return kendo_dateinputsCommon_cmn_chunk_js.b(this, arguments, void 0, function* (intent = \"display\") {\n                // if (intent !== \"display\" || this.#drawLayer || this._cancelled) {\n                if (intent !== \"display\" || kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayerBuilder_drawLayer, \"f\")) {\n                    return;\n                }\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _DrawLayerBuilder_drawLayer, new DrawLayer({\n                    pageIndex: this.pageIndex,\n                }), \"f\");\n            });\n        }\n        cancel() {\n            // this._cancelled = true;\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayerBuilder_drawLayer, \"f\")) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayerBuilder_drawLayer, \"f\").destroy();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _DrawLayerBuilder_drawLayer, null, \"f\");\n        }\n        setParent(parent) {\n            var _a;\n            (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayerBuilder_drawLayer, \"f\")) === null || _a === void 0 ? void 0 : _a.setParent(parent);\n        }\n        getDrawLayer() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _DrawLayerBuilder_drawLayer, \"f\");\n        }\n    }\n    _DrawLayerBuilder_drawLayer = new WeakMap();\n\n    /* Copyright 2015 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import {\n    //     BaseCanvasFactory,\n    //     BaseCMapReaderFactory,\n    //     BaseFilterFactory,\n    //     BaseStandardFontDataFactory,\n    //     BaseSVGFactory,\n    // } from \"./base_factory.js\";\n    // import {\n    //     BaseException,\n    //     FeatureTest,\n    //     shadow,\n    //     stringToBytes,\n    //     Util,\n    //     warn,\n    // } from \"../shared/util.js\";\n    // const SVG_NS = \"http://www.w3.org/2000/svg\";\n    // class PixelsPerInch {\n    //     static CSS = 96.0;\n    //     static PDF = 72.0;\n    //     static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n    // }\n    // /**\n    //  * FilterFactory aims to create some SVG filters we can use when drawing an\n    //  * image (or whatever) on a canvas.\n    //  * Filters aren't applied with ctx.putImageData because it just overwrites the\n    //  * underlying pixels.\n    //  * With these filters, it's possible for example to apply some transfer maps on\n    //  * an image without the need to apply them on the pixel arrays: the renderer\n    //  * does the magic for us.\n    //  */\n    // class DOMFilterFactory extends BaseFilterFactory {\n    //     #baseUrl;\n    //     #_cache;\n    //     #_defs;\n    //     #docId;\n    //     #document;\n    //     #_hcmCache;\n    //     #id = 0;\n    //     constructor({ docId, ownerDocument = globalThis.document } = {}) {\n    //         super();\n    //         this.#docId = docId;\n    //         this.#document = ownerDocument;\n    //     }\n    //     get #cache() {\n    //         return (this.#_cache ||= new Map());\n    //     }\n    //     get #hcmCache() {\n    //         return (this.#_hcmCache ||= new Map());\n    //     }\n    //     get #defs() {\n    //         if (!this.#_defs) {\n    //             const div = this.#document.createElement(\"div\");\n    //             const { style } = div;\n    //             style.visibility = \"hidden\";\n    //             style.contain = \"strict\";\n    //             style.width = style.height = 0;\n    //             style.position = \"absolute\";\n    //             style.top = style.left = 0;\n    //             style.zIndex = -1;\n    //             const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n    //             svg.setAttribute(\"width\", 0);\n    //             svg.setAttribute(\"height\", 0);\n    //             this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n    //             div.append(svg);\n    //             svg.append(this.#_defs);\n    //             this.#document.body.append(div);\n    //         }\n    //         return this.#_defs;\n    //     }\n    //     #createTables(maps) {\n    //         if (maps.length === 1) {\n    //             const mapR = maps[0];\n    //             const buffer = new Array(256);\n    //             for (let i = 0; i < 256; i++) {\n    //                 buffer[i] = mapR[i] / 255;\n    //             }\n    //             const table = buffer.join(\",\");\n    //             return [table, table, table];\n    //         }\n    //         const [mapR, mapG, mapB] = maps;\n    //         const bufferR = new Array(256);\n    //         const bufferG = new Array(256);\n    //         const bufferB = new Array(256);\n    //         for (let i = 0; i < 256; i++) {\n    //             bufferR[i] = mapR[i] / 255;\n    //             bufferG[i] = mapG[i] / 255;\n    //             bufferB[i] = mapB[i] / 255;\n    //         }\n    //         return [bufferR.join(\",\"), bufferG.join(\",\"), bufferB.join(\",\")];\n    //     }\n    //     #createUrl(id) {\n    //         if (this.#baseUrl === undefined) {\n    //             // Unless a `<base>`-element is present a relative URL should work.\n    //             this.#baseUrl = \"\";\n    //             const url = this.#document.URL;\n    //             if (url !== this.#document.baseURI) {\n    //                 if (isDataScheme(url)) {\n    //                     warn('#createUrl: ignore \"data:\"-URL for performance reasons.');\n    //                 } else {\n    //                     this.#baseUrl = url.split(\"#\", 1)[0];\n    //                 }\n    //             }\n    //         }\n    //         return `url(${this.#baseUrl}#${id})`;\n    //     }\n    //     addFilter(maps) {\n    //         if (!maps) {\n    //             return \"none\";\n    //         }\n    //         // When a page is zoomed the page is re-drawn but the maps are likely\n    //         // the same.\n    //         let value = this.#cache.get(maps);\n    //         if (value) {\n    //             return value;\n    //         }\n    //         const [tableR, tableG, tableB] = this.#createTables(maps);\n    //         const key = maps.length === 1 ? tableR : `${tableR}${tableG}${tableB}`;\n    //         value = this.#cache.get(key);\n    //         if (value) {\n    //             this.#cache.set(maps, value);\n    //             return value;\n    //         }\n    //         // We create a SVG filter: feComponentTransferElement\n    //         //  https://www.w3.org/TR/SVG11/filters.html#feComponentTransferElement\n    //         const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    //         const url = this.#createUrl(id);\n    //         this.#cache.set(maps, url);\n    //         this.#cache.set(key, url);\n    //         const filter = this.#createFilter(id);\n    //         this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n    //         return url;\n    //     }\n    //     addHCMFilter(fgColor, bgColor) {\n    //         const key = `${fgColor}-${bgColor}`;\n    //         const filterName = \"base\";\n    //         let info = this.#hcmCache.get(filterName);\n    //         if (info?.key === key) {\n    //             return info.url;\n    //         }\n    //         if (info) {\n    //             info.filter?.remove();\n    //             info.key = key;\n    //             info.url = \"none\";\n    //             info.filter = null;\n    //         } else {\n    //             info = {\n    //                 key,\n    //                 url: \"none\",\n    //                 filter: null,\n    //             };\n    //             this.#hcmCache.set(filterName, info);\n    //         }\n    //         if (!fgColor || !bgColor) {\n    //             return info.url;\n    //         }\n    //         const fgRGB = this.#getRGB(fgColor);\n    //         fgColor = Util.makeHexColor(...fgRGB);\n    //         const bgRGB = this.#getRGB(bgColor);\n    //         bgColor = Util.makeHexColor(...bgRGB);\n    //         this.#defs.style.color = \"\";\n    //         if (\n    //             (fgColor === \"#000000\" && bgColor === \"#ffffff\") ||\n    //             fgColor === bgColor\n    //         ) {\n    //             return info.url;\n    //         }\n    //         // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n    //         //\n    //         // Relative luminance:\n    //         // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n    //         //\n    //         // We compute the rounded luminance of the default background color.\n    //         // Then for every color in the pdf, if its rounded luminance is the\n    //         // same as the background one then it's replaced by the new\n    //         // background color else by the foreground one.\n    //         const map = new Array(256);\n    //         for (let i = 0; i <= 255; i++) {\n    //             const x = i / 255;\n    //             map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    //         }\n    //         const table = map.join(\",\");\n    //         const id = `g_${this.#docId}_hcm_filter`;\n    //         const filter = (info.filter = this.#createFilter(id));\n    //         this.#addTransferMapConversion(table, table, table, filter);\n    //         this.#addGrayConversion(filter);\n    //         const getSteps = (c, n) => {\n    //             const start = fgRGB[c] / 255;\n    //             const end = bgRGB[c] / 255;\n    //             const arr = new Array(n + 1);\n    //             for (let i = 0; i <= n; i++) {\n    //                 arr[i] = start + (i / n) * (end - start);\n    //             }\n    //             return arr.join(\",\");\n    //         };\n    //         this.#addTransferMapConversion(\n    //             getSteps(0, 5),\n    //             getSteps(1, 5),\n    //             getSteps(2, 5),\n    //             filter\n    //         );\n    //         info.url = this.#createUrl(id);\n    //         return info.url;\n    //     }\n    //     addAlphaFilter(map) {\n    //         // When a page is zoomed the page is re-drawn but the maps are likely\n    //         // the same.\n    //         let value = this.#cache.get(map);\n    //         if (value) {\n    //             return value;\n    //         }\n    //         const [tableA] = this.#createTables([map]);\n    //         const key = `alpha_${tableA}`;\n    //         value = this.#cache.get(key);\n    //         if (value) {\n    //             this.#cache.set(map, value);\n    //             return value;\n    //         }\n    //         const id = `g_${this.#docId}_alpha_map_${this.#id++}`;\n    //         const url = this.#createUrl(id);\n    //         this.#cache.set(map, url);\n    //         this.#cache.set(key, url);\n    //         const filter = this.#createFilter(id);\n    //         this.#addTransferMapAlphaConversion(tableA, filter);\n    //         return url;\n    //     }\n    //     addLuminosityFilter(map) {\n    //         // When a page is zoomed the page is re-drawn but the maps are likely\n    //         // the same.\n    //         let value = this.#cache.get(map || \"luminosity\");\n    //         if (value) {\n    //             return value;\n    //         }\n    //         let tableA, key;\n    //         if (map) {\n    //             [tableA] = this.#createTables([map]);\n    //             key = `luminosity_${tableA}`;\n    //         } else {\n    //             key = \"luminosity\";\n    //         }\n    //         value = this.#cache.get(key);\n    //         if (value) {\n    //             this.#cache.set(map, value);\n    //             return value;\n    //         }\n    //         const id = `g_${this.#docId}_luminosity_map_${this.#id++}`;\n    //         const url = this.#createUrl(id);\n    //         this.#cache.set(map, url);\n    //         this.#cache.set(key, url);\n    //         const filter = this.#createFilter(id);\n    //         this.#addLuminosityConversion(filter);\n    //         if (map) {\n    //             this.#addTransferMapAlphaConversion(tableA, filter);\n    //         }\n    //         return url;\n    //     }\n    //     addHighlightHCMFilter(filterName, fgColor, bgColor, newFgColor, newBgColor) {\n    //         const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    //         let info = this.#hcmCache.get(filterName);\n    //         if (info?.key === key) {\n    //             return info.url;\n    //         }\n    //         if (info) {\n    //             info.filter?.remove();\n    //             info.key = key;\n    //             info.url = \"none\";\n    //             info.filter = null;\n    //         } else {\n    //             info = {\n    //                 key,\n    //                 url: \"none\",\n    //                 filter: null,\n    //             };\n    //             this.#hcmCache.set(filterName, info);\n    //         }\n    //         if (!fgColor || !bgColor) {\n    //             return info.url;\n    //         }\n    //         const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    //         let fgGray = Math.round(\n    //             0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]\n    //         );\n    //         let bgGray = Math.round(\n    //             0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]\n    //         );\n    //         let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(\n    //             this.#getRGB.bind(this)\n    //         );\n    //         if (bgGray < fgGray) {\n    //             [fgGray, bgGray, newFgRGB, newBgRGB] = [\n    //                 bgGray,\n    //                 fgGray,\n    //                 newBgRGB,\n    //                 newFgRGB,\n    //             ];\n    //         }\n    //         this.#defs.style.color = \"\";\n    //         // Now we can create the filters to highlight some canvas parts.\n    //         // The colors in the pdf will almost be Canvas and CanvasText, hence we\n    //         // want to filter them to finally get Highlight and HighlightText.\n    //         // Since we're in HCM the background color and the foreground color should\n    //         // be really different when converted to grayscale (if they're not then it\n    //         // means that we've a poor contrast). Once the canvas colors are converted\n    //         // to grayscale we can easily map them on their new colors.\n    //         // The grayscale step is important because if we've something like:\n    //         //   fgColor = #FF....\n    //         //   bgColor = #FF....\n    //         //   then we are enable to map the red component on the new red components\n    //         //   which can be different.\n    //         const getSteps = (fg, bg, n) => {\n    //             const arr = new Array(256);\n    //             const step = (bgGray - fgGray) / n;\n    //             const newStart = fg / 255;\n    //             const newStep = (bg - fg) / (255 * n);\n    //             let prev = 0;\n    //             for (let i = 0; i <= n; i++) {\n    //                 const k = Math.round(fgGray + i * step);\n    //                 const value = newStart + i * newStep;\n    //                 for (let j = prev; j <= k; j++) {\n    //                     arr[j] = value;\n    //                 }\n    //                 prev = k + 1;\n    //             }\n    //             for (let i = prev; i < 256; i++) {\n    //                 arr[i] = arr[prev - 1];\n    //             }\n    //             return arr.join(\",\");\n    //         };\n    //         const id = `g_${this.#docId}_hcm_${filterName}_filter`;\n    //         const filter = (info.filter = this.#createFilter(id));\n    //         this.#addGrayConversion(filter);\n    //         this.#addTransferMapConversion(\n    //             getSteps(newFgRGB[0], newBgRGB[0], 5),\n    //             getSteps(newFgRGB[1], newBgRGB[1], 5),\n    //             getSteps(newFgRGB[2], newBgRGB[2], 5),\n    //             filter\n    //         );\n    //         info.url = this.#createUrl(id);\n    //         return info.url;\n    //     }\n    //     destroy(keepHCM = false) {\n    //         if (keepHCM && this.#hcmCache.size !== 0) {\n    //             return;\n    //         }\n    //         if (this.#_defs) {\n    //             this.#_defs.parentNode.parentNode.remove();\n    //             this.#_defs = null;\n    //         }\n    //         if (this.#_cache) {\n    //             this.#_cache.clear();\n    //             this.#_cache = null;\n    //         }\n    //         this.#id = 0;\n    //     }\n    //     #addLuminosityConversion(filter) {\n    //         const feColorMatrix = this.#document.createElementNS(\n    //             SVG_NS,\n    //             \"feColorMatrix\"\n    //         );\n    //         feColorMatrix.setAttribute(\"type\", \"matrix\");\n    //         feColorMatrix.setAttribute(\n    //             \"values\",\n    //             \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0\"\n    //         );\n    //         filter.append(feColorMatrix);\n    //     }\n    //     #addGrayConversion(filter) {\n    //         const feColorMatrix = this.#document.createElementNS(\n    //             SVG_NS,\n    //             \"feColorMatrix\"\n    //         );\n    //         feColorMatrix.setAttribute(\"type\", \"matrix\");\n    //         feColorMatrix.setAttribute(\n    //             \"values\",\n    //             \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\"\n    //         );\n    //         filter.append(feColorMatrix);\n    //     }\n    //     #createFilter(id) {\n    //         const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    //         filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    //         filter.setAttribute(\"id\", id);\n    //         this.#defs.append(filter);\n    //         return filter;\n    //     }\n    //     #appendFeFunc(feComponentTransfer, func, table) {\n    //         const feFunc = this.#document.createElementNS(SVG_NS, func);\n    //         feFunc.setAttribute(\"type\", \"discrete\");\n    //         feFunc.setAttribute(\"tableValues\", table);\n    //         feComponentTransfer.append(feFunc);\n    //     }\n    //     #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    //         const feComponentTransfer = this.#document.createElementNS(\n    //             SVG_NS,\n    //             \"feComponentTransfer\"\n    //         );\n    //         filter.append(feComponentTransfer);\n    //         this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    //         this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    //         this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n    //     }\n    //     #addTransferMapAlphaConversion(aTable, filter) {\n    //         const feComponentTransfer = this.#document.createElementNS(\n    //             SVG_NS,\n    //             \"feComponentTransfer\"\n    //         );\n    //         filter.append(feComponentTransfer);\n    //         this.#appendFeFunc(feComponentTransfer, \"feFuncA\", aTable);\n    //     }\n    //     #getRGB(color) {\n    //         this.#defs.style.color = color;\n    //         return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n    //     }\n    // }\n    // class DOMCanvasFactory extends BaseCanvasFactory {\n    //     constructor({ ownerDocument = globalThis.document, enableHWA = false } = {}) {\n    //         super({ enableHWA });\n    //         this._document = ownerDocument;\n    //     }\n    //     /**\n    //      * @ignore\n    //      */\n    //     _createCanvas(width, height) {\n    //         const canvas = this._document.createElement(\"canvas\");\n    //         canvas.width = width;\n    //         canvas.height = height;\n    //         return canvas;\n    //     }\n    // }\n    // async function fetchData(url, type = \"text\") {\n    //     if (\n    //         (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    //         isValidFetchUrl(url, document.baseURI)\n    //     ) {\n    //         const response = await fetch(url);\n    //         if (!response.ok) {\n    //             throw new Error(response.statusText);\n    //         }\n    //         switch (type) {\n    //             case \"arraybuffer\":\n    //                 return response.arrayBuffer();\n    //             case \"blob\":\n    //                 return response.blob();\n    //             case \"json\":\n    //                 return response.json();\n    //         }\n    //         return response.text();\n    //     }\n    //     // The Fetch API is not supported.\n    //     return new Promise((resolve, reject) => {\n    //         const request = new XMLHttpRequest();\n    //         request.open(\"GET\", url, /* async = */ true);\n    //         request.responseType = type;\n    //         request.onreadystatechange = () => {\n    //             if (request.readyState !== XMLHttpRequest.DONE) {\n    //                 return;\n    //             }\n    //             if (request.status === 200 || request.status === 0) {\n    //                 switch (type) {\n    //                     case \"arraybuffer\":\n    //                     case \"blob\":\n    //                     case \"json\":\n    //                         resolve(request.response);\n    //                         return;\n    //                 }\n    //                 resolve(request.responseText);\n    //                 return;\n    //             }\n    //             reject(new Error(request.statusText));\n    //         };\n    //         request.send(null);\n    //     });\n    // }\n    // class DOMCMapReaderFactory extends BaseCMapReaderFactory {\n    //     /**\n    //      * @ignore\n    //      */\n    //     _fetchData(url, compressionType) {\n    //         return fetchData(\n    //             url,\n    //         /* type = */ this.isCompressed ? \"arraybuffer\" : \"text\"\n    //         ).then(data => ({\n    //             cMapData:\n    //                 data instanceof ArrayBuffer\n    //                     ? new Uint8Array(data)\n    //                     : stringToBytes(data),\n    //             compressionType,\n    //         }));\n    //     }\n    // }\n    // class DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n    //     /**\n    //      * @ignore\n    //      */\n    //     _fetchData(url) {\n    //         return fetchData(url, /* type = */ \"arraybuffer\").then(\n    //             data => new Uint8Array(data)\n    //         );\n    //     }\n    // }\n    // class DOMSVGFactory extends BaseSVGFactory {\n    //     /**\n    //      * @ignore\n    //      */\n    //     _createSVG(type) {\n    //         return document.createElementNS(SVG_NS, type);\n    //     }\n    // }\n    // /**\n    //  * @typedef {Object} PageViewportParameters\n    //  * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n    //  *   yMax coordinates.\n    //  * @property {number} scale - The scale of the viewport.\n    //  * @property {number} rotation - The rotation, in degrees, of the viewport.\n    //  * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n    //  *   default value is `0`.\n    //  * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n    //  *   default value is `0`.\n    //  * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n    //  *   The default value is `false`.\n    //  */\n    // /**\n    //  * @typedef {Object} PageViewportCloneParameters\n    //  * @property {number} [scale] - The scale, overriding the one in the cloned\n    //  *   viewport. The default value is `this.scale`.\n    //  * @property {number} [rotation] - The rotation, in degrees, overriding the one\n    //  *   in the cloned viewport. The default value is `this.rotation`.\n    //  * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n    //  *   The default value is `this.offsetX`.\n    //  * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n    //  *   The default value is `this.offsetY`.\n    //  * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n    //  *   The default value is `false`.\n    //  */\n    // /**\n    //  * PDF page viewport created based on scale, rotation and offset.\n    //  */\n    // class PageViewport {\n    //     /**\n    //      * @param {PageViewportParameters}\n    //      */\n    //     constructor({\n    //         viewBox,\n    //         scale,\n    //         rotation,\n    //         offsetX = 0,\n    //         offsetY = 0,\n    //         dontFlip = false,\n    //     }) {\n    //         this.viewBox = viewBox;\n    //         this.scale = scale;\n    //         this.rotation = rotation;\n    //         this.offsetX = offsetX;\n    //         this.offsetY = offsetY;\n    //         // creating transform to convert pdf coordinate system to the normal\n    //         // canvas like coordinates taking in account scale and rotation\n    //         const centerX = (viewBox[2] + viewBox[0]) / 2;\n    //         const centerY = (viewBox[3] + viewBox[1]) / 2;\n    //         let rotateA, rotateB, rotateC, rotateD;\n    //         // Normalize the rotation, by clamping it to the [0, 360) range.\n    //         rotation %= 360;\n    //         if (rotation < 0) {\n    //             rotation += 360;\n    //         }\n    //         switch (rotation) {\n    //             case 180:\n    //                 rotateA = -1;\n    //                 rotateB = 0;\n    //                 rotateC = 0;\n    //                 rotateD = 1;\n    //                 break;\n    //             case 90:\n    //                 rotateA = 0;\n    //                 rotateB = 1;\n    //                 rotateC = 1;\n    //                 rotateD = 0;\n    //                 break;\n    //             case 270:\n    //                 rotateA = 0;\n    //                 rotateB = -1;\n    //                 rotateC = -1;\n    //                 rotateD = 0;\n    //                 break;\n    //             case 0:\n    //                 rotateA = 1;\n    //                 rotateB = 0;\n    //                 rotateC = 0;\n    //                 rotateD = -1;\n    //                 break;\n    //             default:\n    //                 throw new Error(\n    //                     \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n    //                 );\n    //         }\n    //         if (dontFlip) {\n    //             rotateC = -rotateC;\n    //             rotateD = -rotateD;\n    //         }\n    //         let offsetCanvasX, offsetCanvasY;\n    //         let width, height;\n    //         if (rotateA === 0) {\n    //             offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n    //             offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n    //             width = (viewBox[3] - viewBox[1]) * scale;\n    //             height = (viewBox[2] - viewBox[0]) * scale;\n    //         } else {\n    //             offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n    //             offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n    //             width = (viewBox[2] - viewBox[0]) * scale;\n    //             height = (viewBox[3] - viewBox[1]) * scale;\n    //         }\n    //         // creating transform for the following operations:\n    //         // translate(-centerX, -centerY), rotate and flip vertically,\n    //         // scale, and translate(offsetCanvasX, offsetCanvasY)\n    //         this.transform = [\n    //             rotateA * scale,\n    //             rotateB * scale,\n    //             rotateC * scale,\n    //             rotateD * scale,\n    //             offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n    //             offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    //         ];\n    //         this.width = width;\n    //         this.height = height;\n    //     }\n    //     /**\n    //      * The original, un-scaled, viewport dimensions.\n    //      * @type {Object}\n    //      */\n    //     get rawDims() {\n    //         const { viewBox } = this;\n    //         return shadow(this, \"rawDims\", {\n    //             pageWidth: viewBox[2] - viewBox[0],\n    //             pageHeight: viewBox[3] - viewBox[1],\n    //             pageX: viewBox[0],\n    //             pageY: viewBox[1],\n    //         });\n    //     }\n    //     /**\n    //      * Clones viewport, with optional additional properties.\n    //      * @param {PageViewportCloneParameters} [params]\n    //      * @returns {PageViewport} Cloned viewport.\n    //      */\n    //     clone({\n    //         scale = this.scale,\n    //         rotation = this.rotation,\n    //         offsetX = this.offsetX,\n    //         offsetY = this.offsetY,\n    //         dontFlip = false,\n    //     } = {}) {\n    //         return new PageViewport({\n    //             viewBox: this.viewBox.slice(),\n    //             scale,\n    //             rotation,\n    //             offsetX,\n    //             offsetY,\n    //             dontFlip,\n    //         });\n    //     }\n    //     /**\n    //      * Converts PDF point to the viewport coordinates. For examples, useful for\n    //      * converting PDF location into canvas pixel coordinates.\n    //      * @param {number} x - The x-coordinate.\n    //      * @param {number} y - The y-coordinate.\n    //      * @returns {Array} Array containing `x`- and `y`-coordinates of the\n    //      *   point in the viewport coordinate space.\n    //      * @see {@link convertToPdfPoint}\n    //      * @see {@link convertToViewportRectangle}\n    //      */\n    //     convertToViewportPoint(x, y) {\n    //         return Util.applyTransform([x, y], this.transform);\n    //     }\n    //     /**\n    //      * Converts PDF rectangle to the viewport coordinates.\n    //      * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n    //      * @returns {Array} Array containing corresponding coordinates of the\n    //      *   rectangle in the viewport coordinate space.\n    //      * @see {@link convertToViewportPoint}\n    //      */\n    //     convertToViewportRectangle(rect) {\n    //         const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    //         const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    //         return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n    //     }\n    //     /**\n    //      * Converts viewport coordinates to the PDF location. For examples, useful\n    //      * for converting canvas pixel location into PDF one.\n    //      * @param {number} x - The x-coordinate.\n    //      * @param {number} y - The y-coordinate.\n    //      * @returns {Array} Array containing `x`- and `y`-coordinates of the\n    //      *   point in the PDF coordinate space.\n    //      * @see {@link convertToViewportPoint}\n    //      */\n    //     convertToPdfPoint(x, y) {\n    //         return Util.applyInverseTransform([x, y], this.transform);\n    //     }\n    // }\n    // class RenderingCancelledException extends BaseException {\n    //     constructor(msg, extraDelay = 0) {\n    //         super(msg, \"RenderingCancelledException\");\n    //         this.extraDelay = extraDelay;\n    //     }\n    // }\n    // function isDataScheme(url) {\n    //     const ii = url.length;\n    //     let i = 0;\n    //     while (i < ii && url[i].trim() === \"\") {\n    //         i++;\n    //     }\n    //     return url.substring(i, i + 5).toLowerCase() === \"data:\";\n    // }\n    // function isPdfFile(filename) {\n    //     return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n    // }\n    // /**\n    //  * Gets the filename from a given URL.\n    //  * @param {string} url\n    //  * @returns {string}\n    //  */\n    // function getFilenameFromUrl(url) {\n    //     [url] = url.split(/[#?]/, 1);\n    //     return url.substring(url.lastIndexOf(\"/\") + 1);\n    // }\n    // /**\n    //  * Returns the filename or guessed filename from the url (see issue 3455).\n    //  * @param {string} url - The original PDF location.\n    //  * @param {string} defaultFilename - The value returned if the filename is\n    //  *   unknown, or the protocol is unsupported.\n    //  * @returns {string} Guessed PDF filename.\n    //  */\n    // function getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n    //     if (typeof url !== \"string\") {\n    //         return defaultFilename;\n    //     }\n    //     if (isDataScheme(url)) {\n    //         warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    //         return defaultFilename;\n    //     }\n    //     const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n    //     //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n    //     // Pattern to get last matching NAME.pdf\n    //     const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n    //     const splitURI = reURI.exec(url);\n    //     let suggestedFilename =\n    //         reFilename.exec(splitURI[1]) ||\n    //         reFilename.exec(splitURI[2]) ||\n    //         reFilename.exec(splitURI[3]);\n    //     if (suggestedFilename) {\n    //         suggestedFilename = suggestedFilename[0];\n    //         if (suggestedFilename.includes(\"%\")) {\n    //             // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n    //             try {\n    //                 suggestedFilename = reFilename.exec(\n    //                     decodeURIComponent(suggestedFilename)\n    //                 )[0];\n    //             } catch {\n    //                 // Possible (extremely rare) errors:\n    //                 // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n    //                 // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n    //             }\n    //         }\n    //     }\n    //     return suggestedFilename || defaultFilename;\n    // }\n    // class StatTimer {\n    //     started = Object.create(null);\n    //     times = [];\n    //     time(name) {\n    //         if (name in this.started) {\n    //             warn(`Timer is already running for ${name}`);\n    //         }\n    //         this.started[name] = Date.now();\n    //     }\n    //     timeEnd(name) {\n    //         if (!(name in this.started)) {\n    //             warn(`Timer has not been started for ${name}`);\n    //         }\n    //         this.times.push({\n    //             name,\n    //             start: this.started[name],\n    //             end: Date.now(),\n    //         });\n    //         // Remove timer from started so it can be called again.\n    //         delete this.started[name];\n    //     }\n    //     toString() {\n    //         // Find the longest name for padding purposes.\n    //         const outBuf = [];\n    //         let longest = 0;\n    //         for (const { name } of this.times) {\n    //             longest = Math.max(name.length, longest);\n    //         }\n    //         for (const { name, start, end } of this.times) {\n    //             outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    //         }\n    //         return outBuf.join(\"\");\n    //     }\n    // }\n    // function isValidFetchUrl(url, baseUrl) {\n    //     if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    //         throw new Error(\"Not implemented: isValidFetchUrl\");\n    //     }\n    //     try {\n    //         const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    //         // The Fetch API only supports the http/https protocols, and not file/ftp.\n    //         return protocol === \"http:\" || protocol === \"https:\";\n    //     } catch {\n    //         return false; // `new URL()` will throw on incorrect data.\n    //     }\n    // }\n    /**\n     * Event handler to suppress context menu.\n     */\n    function noContextMenu(e) {\n        e.preventDefault();\n    }\n    // // Deprecated API function -- display regardless of the `verbosity` setting.\n    // function deprecated(details) {\n    //     console.log(\"Deprecated API usage: \" + details);\n    // }\n    // let pdfDateStringRegex;\n    // class PDFDateString {\n    //     /**\n    //      * Convert a PDF date string to a JavaScript `Date` object.\n    //      *\n    //      * The PDF date string format is described in section 7.9.4 of the official\n    //      * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n    //      * edition) Adobe describes the same format including a trailing apostrophe.\n    //      * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n    //      * them. We ignore all apostrophes as they are not necessary for date parsing.\n    //      *\n    //      * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n    //      * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n    //      * parts of the date string).\n    //      *\n    //      * @param {string} input\n    //      * @returns {Date|null}\n    //      */\n    //     static toDateObject(input) {\n    //         if (!input || typeof input !== \"string\") {\n    //             return null;\n    //         }\n    //         // Lazily initialize the regular expression.\n    //         pdfDateStringRegex ||= new RegExp(\n    //             \"^D:\" + // Prefix (required)\n    //             \"(\\\\d{4})\" + // Year (required)\n    //             \"(\\\\d{2})?\" + // Month (optional)\n    //             \"(\\\\d{2})?\" + // Day (optional)\n    //             \"(\\\\d{2})?\" + // Hour (optional)\n    //             \"(\\\\d{2})?\" + // Minute (optional)\n    //             \"(\\\\d{2})?\" + // Second (optional)\n    //             \"([Z|+|-])?\" + // Universal time relation (optional)\n    //             \"(\\\\d{2})?\" + // Offset hour (optional)\n    //             \"'?\" + // Splitting apostrophe (optional)\n    //             \"(\\\\d{2})?\" + // Offset minute (optional)\n    //             \"'?\" // Trailing apostrophe (optional)\n    //         );\n    //         // Optional fields that don't satisfy the requirements from the regular\n    //         // expression (such as incorrect digit counts or numbers that are out of\n    //         // range) will fall back the defaults from the specification.\n    //         const matches = pdfDateStringRegex.exec(input);\n    //         if (!matches) {\n    //             return null;\n    //         }\n    //         // JavaScript's `Date` object expects the month to be between 0 and 11\n    //         // instead of 1 and 12, so we have to correct for that.\n    //         const year = parseInt(matches[1], 10);\n    //         let month = parseInt(matches[2], 10);\n    //         month = month >= 1 && month <= 12 ? month - 1 : 0;\n    //         let day = parseInt(matches[3], 10);\n    //         day = day >= 1 && day <= 31 ? day : 1;\n    //         let hour = parseInt(matches[4], 10);\n    //         hour = hour >= 0 && hour <= 23 ? hour : 0;\n    //         let minute = parseInt(matches[5], 10);\n    //         minute = minute >= 0 && minute <= 59 ? minute : 0;\n    //         let second = parseInt(matches[6], 10);\n    //         second = second >= 0 && second <= 59 ? second : 0;\n    //         const universalTimeRelation = matches[7] || \"Z\";\n    //         let offsetHour = parseInt(matches[8], 10);\n    //         offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    //         let offsetMinute = parseInt(matches[9], 10) || 0;\n    //         offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n    //         // Universal time relation 'Z' means that the local time is equal to the\n    //         // universal time, whereas the relations '+'/'-' indicate that the local\n    //         // time is later respectively earlier than the universal time. Every date\n    //         // is normalized to universal time.\n    //         if (universalTimeRelation === \"-\") {\n    //             hour += offsetHour;\n    //             minute += offsetMinute;\n    //         } else if (universalTimeRelation === \"+\") {\n    //             hour -= offsetHour;\n    //             minute -= offsetMinute;\n    //         }\n    //         return new Date(Date.UTC(year, month, day, hour, minute, second));\n    //     }\n    // }\n    // /**\n    //  * NOTE: This is (mostly) intended to support printing of XFA forms.\n    //  */\n    // function getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n    //     const { width, height } = xfaPage.attributes.style;\n    //     const viewBox = [0, 0, parseInt(width), parseInt(height)];\n    //     return new PageViewport({\n    //         viewBox,\n    //         scale,\n    //         rotation,\n    //     });\n    // }\n    function getRGB(color) {\n        if (color.startsWith(\"#\")) {\n            const colorRGB = parseInt(color.slice(1), 16);\n            return [\n                (colorRGB & 0xff0000) >> 16,\n                (colorRGB & 0x00ff00) >> 8,\n                colorRGB & 0x0000ff\n            ];\n        }\n        if (color.startsWith(\"rgb(\")) {\n            // getComputedStyle(...).color returns a `rgb(R, G, B)` color.\n            return color\n                .slice(/* \"rgb(\".length */ 4, -1) // Strip out \"rgb(\" and \")\".\n                .split(\",\")\n                .map(x => parseInt(x, 10));\n        }\n        if (color.startsWith(\"rgba(\")) {\n            return color\n                .slice(/* \"rgba(\".length */ 5, -1) // Strip out \"rgba(\" and \")\".\n                .split(\",\")\n                .map(x => parseInt(x, 10))\n                .slice(0, 3);\n        }\n        // warn(`Not a valid color format: \"${color}\"`);\n        return [0, 0, 0];\n    }\n    function getColorValues(colors) {\n        const span = document.createElement(\"span\");\n        span.style.visibility = \"hidden\";\n        document.body.append(span);\n        for (const name of colors.keys()) {\n            span.style.color = name;\n            const computedColor = window.getComputedStyle(span).color;\n            colors.set(name, getRGB(computedColor));\n        }\n        span.remove();\n    }\n    // function getCurrentTransform(ctx) {\n    //     const { a, b, c, d, e, f } = ctx.getTransform();\n    //     return [a, b, c, d, e, f];\n    // }\n    // function getCurrentTransformInverse(ctx) {\n    //     const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();\n    //     return [a, b, c, d, e, f];\n    // }\n    // /**\n    //  * @param {HTMLDivElement} div\n    //  * @param {PageViewport} viewport\n    //  * @param {boolean} mustFlip\n    //  * @param {boolean} mustRotate\n    //  */\n    // function setLayerDimensions(\n    //     div,\n    //     viewport,\n    //     mustFlip = false,\n    //     mustRotate = true\n    // ) {\n    //     if (viewport instanceof PageViewport) {\n    //         const { pageWidth, pageHeight } = viewport.rawDims;\n    //         const { style } = div;\n    //         const useRound = FeatureTest.isCSSRoundSupported;\n    //         const w = `var(--scale-factor) * ${pageWidth}px`,\n    //             h = `var(--scale-factor) * ${pageHeight}px`;\n    //         const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n    //             heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n    //         if (!mustFlip || viewport.rotation % 180 === 0) {\n    //             style.width = widthStr;\n    //             style.height = heightStr;\n    //         } else {\n    //             style.width = heightStr;\n    //             style.height = widthStr;\n    //         }\n    //     }\n    //     if (mustRotate) {\n    //         div.setAttribute(\"data-main-rotation\", viewport.rotation);\n    //     }\n    // }\n    // export {\n    //     // deprecated,\n    //     // DOMCanvasFactory,\n    //     // DOMCMapReaderFactory,\n    //     // DOMFilterFactory,\n    //     // DOMStandardFontDataFactory,\n    //     // DOMSVGFactory,\n    //     // fetchData,\n    //     // getColorValues,\n    //     // getCurrentTransform,\n    //     // getCurrentTransformInverse,\n    //     // getFilenameFromUrl,\n    //     // getPdfFilenameFromUrl,\n    //     // getRGB,\n    //     // getXfaPageViewport,\n    //     // isDataScheme,\n    //     // isPdfFile,\n    //     // isValidFetchUrl,\n    //     // noContextMenu,\n    //     // PageViewport,\n    //     // PDFDateString,\n    //     // PixelsPerInch,\n    //     // RenderingCancelledException,\n    //     setLayerDimensions,\n    //     // StatTimer,\n    // };\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    class ColorManager {\n        get _colors() {\n            if (\n            // typeof PDFJSDev !== \"undefined\" &&\n            // PDFJSDev.test(\"LIB\") &&\n            typeof document === \"undefined\") {\n                return shadow(this, \"_colors\", ColorManager._colorsMapping);\n            }\n            const colors = new Map([\n                [\"CanvasText\", null],\n                [\"Canvas\", null]\n            ]);\n            getColorValues(colors);\n            return shadow(this, \"_colors\", colors);\n        }\n        /*\n         * In High Contrast Mode, the color on the screen is not always the\n         * real color used in the pdf.\n         * For example in some cases white can appear to be black but when saving\n         * we want to have white.\n         * @param {string} color\n         * @returns {Array<number>}\n         */\n        convert(color) {\n            const rgb = getRGB(color);\n            if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n                return rgb;\n            }\n            for (const [name, RGB] of this._colors) {\n                if (RGB.every((x, i) => x === rgb[i])) {\n                    return ColorManager._colorsMapping.get(name);\n                }\n            }\n            return rgb;\n        }\n        /*\n         * An input element must have its color value as a hex string\n         * and not as color name.\n         * So this function converts a name into an hex string.\n         * @param {string} name\n         * @returns {string}\n         */\n        getHexCode(name) {\n            const rgb = this._colors.get(name);\n            if (!rgb) {\n                return name;\n            }\n            // @ts-expect-error TS(2556):\n            return Util.makeHexColor(...rgb);\n        }\n    }\n    ColorManager._colorsMapping = new Map([\n        [\"CanvasText\", [0, 0, 0]],\n        [\"Canvas\", [255, 255, 255]]\n    ]);\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    function bindEvents(obj, element, names) {\n        for (const name of names) {\n            element.addEventListener(name, obj[name].bind(obj));\n        }\n    }\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _AnnotationEditor_instances, _a$5, _AnnotationEditor_x, _AnnotationEditor_y, _AnnotationEditor_disabled, _AnnotationEditor_keepAspectRatio, _AnnotationEditor_focusAC, _AnnotationEditor_hasBeenClicked, _AnnotationEditor_initialPosition, _AnnotationEditor_isEditing, _AnnotationEditor_isInEditMode, _AnnotationEditor_moveInDOMTimeout, _AnnotationEditor_prevDragX, _AnnotationEditor_prevDragY, _AnnotationEditor_isDraggable, _AnnotationEditor_zIndex, _AnnotationEditor_translate, _AnnotationEditor_rotatePoint, _AnnotationEditor_selectOnPointerEvent, _AnnotationEditor_setUpDragSession, _AnnotationEditor_addFocusListeners, _AnnotationEditor_stopResizing;\n    class AnnotationEditor {\n        constructor(parameters) {\n            // if (this.constructor === AnnotationEditor) {\n            //     unreachable(\"Cannot initialize AnnotationEditor.\");\n            // }\n            _AnnotationEditor_instances.add(this);\n            // todo: properties\n            this.parent = null;\n            this.id = null;\n            this.width = null;\n            this.height = null;\n            this.pageIndex = 0;\n            this.name = \"\";\n            this.div = null;\n            this.annotationElementId = null;\n            this._willKeepAspectRatio = false;\n            // _initialOptions = {};\n            this._structTreeParentId = null;\n            this.rotation = 0;\n            this.pageRotation = 0;\n            this.pageDimensions = [];\n            this.pageTranslation = [];\n            // x = 0;\n            // y = 0;\n            _AnnotationEditor_x.set(this, 0);\n            _AnnotationEditor_y.set(this, 0);\n            this.isAttachedToDOM = false;\n            this.deleted = false;\n            // todo: end\n            // #accessibilityData = null;\n            // #allResizerDivs = null;\n            // #altText = null;\n            _AnnotationEditor_disabled.set(this, false);\n            _AnnotationEditor_keepAspectRatio.set(this, false);\n            // #resizersDiv = null;\n            // #savedDimensions = null;\n            _AnnotationEditor_focusAC.set(this, null);\n            // #focusedResizerName = \"\";\n            _AnnotationEditor_hasBeenClicked.set(this, false);\n            _AnnotationEditor_initialPosition.set(this, null);\n            _AnnotationEditor_isEditing.set(this, false);\n            _AnnotationEditor_isInEditMode.set(this, false);\n            // #isResizerEnabledForKeyboard = false;\n            _AnnotationEditor_moveInDOMTimeout.set(this, null);\n            _AnnotationEditor_prevDragX.set(this, 0);\n            _AnnotationEditor_prevDragY.set(this, 0);\n            // #telemetryTimeouts = null;\n            this._editToolbar = null;\n            this._initialOptions = Object.create(null);\n            this._isVisible = true;\n            this._uiManager = null;\n            this._focusEventsAllowed = true;\n            this._l10nPromise = null;\n            _AnnotationEditor_isDraggable.set(this, false);\n            _AnnotationEditor_zIndex.set(this, _a$5._zIndex++);\n            this.parent = parameters.parent;\n            this.id = parameters.id || _a$5.idManager.id;\n            this.width = this.height = null;\n            this.pageIndex = parameters.parent.pageIndex;\n            this.name = parameters.name;\n            this.div = null;\n            this._uiManager = parameters.uiManager;\n            this.annotationElementId = null;\n            this._willKeepAspectRatio = false;\n            this._initialOptions.isCentered = parameters.isCentered;\n            this._structTreeParentId = null;\n            const { rotation, rawDims: { pageWidth, pageHeight, pageX, pageY } } = this.parent.viewport;\n            this.rotation = rotation;\n            this.pageRotation =\n                (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n            this.pageDimensions = [pageWidth, pageHeight];\n            this.pageTranslation = [pageX, pageY];\n            const [width, height] = this.parentDimensions;\n            this.x = parameters.x / width;\n            this.y = parameters.y / height;\n            this.isAttachedToDOM = false;\n            this.deleted = false;\n        }\n        get x() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_x, \"f\");\n        }\n        set x(value) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_x, value, \"f\");\n        }\n        get y() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_y, \"f\");\n        }\n        set y(value) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_y, value, \"f\");\n        }\n        get editorType() {\n            return Object.getPrototypeOf(this).constructor._type;\n        }\n        static get _defaultLineColor() {\n            return kendo_pdfjs_loader_js.shadow(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n        }\n        static deleteAnnotationElement(editor) {\n            const fakeEditor = new FakeEditor({\n                id: editor.parent.getNextId(),\n                parent: editor.parent,\n                uiManager: editor._uiManager,\n            });\n            fakeEditor.annotationElementId = editor.annotationElementId;\n            fakeEditor.deleted = true;\n            fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n        }\n        static initialize(l10n, _uiManager, options) {\n            if (!l10n || !_uiManager || !options) {\n                return;\n            }\n            // static initialize() {\n            // AnnotationEditor._l10nPromise ||= new Map(\n            //     [\n            //         \"pdfjs-editor-alt-text-button-label\",\n            //         \"pdfjs-editor-alt-text-edit-button-label\",\n            //         \"pdfjs-editor-alt-text-decorative-tooltip\",\n            //         \"pdfjs-editor-new-alt-text-added-button-label\",\n            //         \"pdfjs-editor-new-alt-text-missing-button-label\",\n            //         \"pdfjs-editor-new-alt-text-to-review-button-label\",\n            //         \"pdfjs-editor-resizer-label-topLeft\",\n            //         \"pdfjs-editor-resizer-label-topMiddle\",\n            //         \"pdfjs-editor-resizer-label-topRight\",\n            //         \"pdfjs-editor-resizer-label-middleRight\",\n            //         \"pdfjs-editor-resizer-label-bottomRight\",\n            //         \"pdfjs-editor-resizer-label-bottomMiddle\",\n            //         \"pdfjs-editor-resizer-label-bottomLeft\",\n            //         \"pdfjs-editor-resizer-label-middleLeft\",\n            //     ].map(str => [\n            //         str,\n            //         l10n.get(str.replaceAll(/([A-Z])/g, c => `-${c.toLowerCase()}`)),\n            //     ])\n            // );\n            // // The string isn't in the above list because the string has a parameter\n            // // (i.e. the guessed text) and we must pass it to the l10n function to get\n            // // the correct translation.\n            // AnnotationEditor._l10nPromise.set(\n            //     \"pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer\",\n            //     l10n.get.bind(\n            //         l10n,\n            //         \"pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer\"\n            //     )\n            // );\n            // if (options?.strings) {\n            //     for (const str of options.strings) {\n            //         AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n            //     }\n            // }\n            // if (AnnotationEditor._borderLineWidth !== -1) {\n            //     return;\n            // }\n            // const style = getComputedStyle(document.documentElement);\n            // AnnotationEditor._borderLineWidth =\n            //     parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n        }\n        /**\n         * Update the default parameters for this type of editor.\n         * @param {number} _type\n         * @param {*} _value\n         */\n        static updateDefaultParams(_type, _value) {\n            if (!_type || !_value) {\n                return;\n            }\n        }\n        /**\n         * Get the default properties to set in the UI for this type of editor.\n         * @returns {Array}\n         */\n        static get defaultPropertiesToUpdate() {\n            return [];\n        }\n        /**\n         * Check if this kind of editor is able to handle the given mime type for\n         * pasting.\n         * @param {string} mime\n         * @returns {boolean}\n         */\n        static isHandlingMimeForPasting(mime) {\n            if (!mime) {\n                return;\n            }\n            return false;\n        }\n        /**\n         * Extract the data from the clipboard item and delegate the creation of the\n         * editor to the parent.\n         * @param {DataTransferItem} item\n         * @param {AnnotationEditorLayer} parent\n         */\n        static paste(item, parent) {\n            if (!item || !parent) {\n                return;\n            }\n            // unreachable(\"Not implemented\");\n        }\n        /**\n         * Get the properties to update in the UI for this editor.\n         * @returns {Array}\n         */\n        get propertiesToUpdate() {\n            return [];\n        }\n        get _isDraggable() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_isDraggable, \"f\");\n        }\n        set _isDraggable(value) {\n            var _b;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_isDraggable, value, \"f\");\n            // this.div?.classList.toggle(\"draggable\", value);\n            (_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.toggle(\"k-draggable\", value);\n        }\n        /**\n         * @returns {boolean} true if the editor handles the Enter key itself.\n         */\n        get isEnterHandled() {\n            return true;\n        }\n        center() {\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            switch (this.parentRotation) {\n                case 90:\n                    this.x -= (this.height * pageHeight) / (pageWidth * 2);\n                    this.y += (this.width * pageWidth) / (pageHeight * 2);\n                    break;\n                case 180:\n                    this.x += this.width / 2;\n                    this.y += this.height / 2;\n                    break;\n                case 270:\n                    this.x += (this.height * pageHeight) / (pageWidth * 2);\n                    this.y -= (this.width * pageWidth) / (pageHeight * 2);\n                    break;\n                default:\n                    this.x -= this.width / 2;\n                    this.y -= this.height / 2;\n                    break;\n            }\n            this.fixAndSetPosition();\n        }\n        /**\n         * Add some commands into the CommandManager (undo/redo stuff).\n         * @param {Object} params\n         */\n        addCommands(params) {\n            this._uiManager.addCommands(params);\n        }\n        get currentLayer() {\n            return this._uiManager.currentLayer;\n        }\n        /**\n         * This editor will be behind the others.\n         */\n        setInBackground() {\n            this.div.style.zIndex = 0;\n        }\n        /**\n         * This editor will be in the foreground.\n         */\n        setInForeground() {\n            this.div.style.zIndex = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_zIndex, \"f\");\n        }\n        setParent(parent) {\n            if (parent !== null) {\n                this.pageIndex = parent.pageIndex;\n                this.pageDimensions = parent.pageDimensions;\n            }\n            else {\n                // The editor is being removed from the DOM, so we need to stop resizing.\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_stopResizing).call(this);\n            }\n            this.parent = parent;\n        }\n        /**\n         * onfocus callback.\n         */\n        focusin(event) {\n            if (!event) {\n                return;\n            }\n            if (!this._focusEventsAllowed) {\n                return;\n            }\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_hasBeenClicked, \"f\")) {\n                this.parent.setSelected(this);\n            }\n            else {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_hasBeenClicked, false, \"f\");\n            }\n        }\n        /**\n         * onblur callback.\n         * @param {FocusEvent} event\n         */\n        focusout(event) {\n            var _b;\n            if (!this._focusEventsAllowed) {\n                return;\n            }\n            if (!this.isAttachedToDOM) {\n                return;\n            }\n            // In case of focusout, the relatedTarget is the element which\n            // is grabbing the focus.\n            // So if the related target is an element under the div for this\n            // editor, then the editor isn't unactive.\n            const target = event.relatedTarget;\n            if (target === null || target === void 0 ? void 0 : target.closest(`#${this.id}`)) {\n                return;\n            }\n            event.preventDefault();\n            if (!((_b = this.parent) === null || _b === void 0 ? void 0 : _b.isMultipleSelection)) {\n                this.commitOrRemove();\n            }\n        }\n        commitOrRemove() {\n            if (this.isEmpty()) {\n                this.remove();\n            }\n            else {\n                this.commit();\n            }\n        }\n        /**\n         * Commit the data contained in this editor.\n         */\n        commit() {\n            this.addToAnnotationStorage();\n        }\n        addToAnnotationStorage() {\n            this._uiManager.addToAnnotationStorage(this);\n        }\n        /**\n         * Set the editor position within its parent.\n         * @param {number} x\n         * @param {number} y\n         * @param {number} tx - x-translation in screen coordinates.\n         * @param {number} ty - y-translation in screen coordinates.\n         */\n        setAt(x, y, tx, ty) {\n            const [width, height] = this.parentDimensions;\n            [tx, ty] = this.screenToPageTranslation(tx, ty);\n            this.x = (x + tx) / width;\n            this.y = (y + ty) / height;\n            this.fixAndSetPosition();\n        }\n        /**\n         * Translate the editor position within its parent.\n         * @param {number} x - x-translation in screen coordinates.\n         * @param {number} y - y-translation in screen coordinates.\n         */\n        translate(x, y) {\n            // We don't change the initial position because the move here hasn't been\n            // done by the user.\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_translate).call(this, this.parentDimensions, x, y);\n        }\n        /**\n         * Translate the editor position within its page and adjust the scroll\n         * in order to have the editor in the view.\n         * @param {number} x - x-translation in page coordinates.\n         * @param {number} y - y-translation in page coordinates.\n         */\n        translateInPage(x, y) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_initialPosition, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_initialPosition, \"f\") || [this.x, this.y], \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_translate).call(this, this.pageDimensions, x, y);\n            this.div.scrollIntoView({ block: \"nearest\" });\n        }\n        drag(tx, ty) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_initialPosition, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_initialPosition, \"f\") || [this.x, this.y], \"f\");\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.x += tx / parentWidth;\n            this.y += ty / parentHeight;\n            if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n                // It's possible to not have a parent: for example, when the user is\n                // dragging all the selected editors but this one on a page which has been\n                // destroyed.\n                // It's why we need to check for it. In such a situation, it isn't really\n                // a problem to not find a new parent: it's something which is related to\n                // what the user is seeing, hence it depends on how pages are layed out.\n                // The element will be outside of its parent so change the parent.\n                const { x: xValue, y: yValue } = this.div.getBoundingClientRect();\n                if (this.parent.findNewParent(this, xValue, yValue)) {\n                    this.x -= Math.floor(this.x);\n                    this.y -= Math.floor(this.y);\n                }\n            }\n            // The editor can be moved wherever the user wants, so we don't need to fix\n            // the position: it'll be done when the user will release the mouse button.\n            let { x, y } = this;\n            const [bx, by] = this.getBaseTranslation();\n            x += bx;\n            y += by;\n            this.div.style.left = `${(100 * x).toFixed(2)}%`;\n            this.div.style.top = `${(100 * y).toFixed(2)}%`;\n            this.div.scrollIntoView({ block: \"nearest\" });\n        }\n        get _hasBeenMoved() {\n            return (!!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_initialPosition, \"f\") &&\n                (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_initialPosition, \"f\")[0] !== this.x ||\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_initialPosition, \"f\")[1] !== this.y));\n        }\n        /**\n         * Get the translation to take into account the editor border.\n         * The CSS engine positions the element by taking the border into account so\n         * we must apply the opposite translation to have the editor in the right\n         * position.\n         * @returns {Array<number>}\n         */\n        getBaseTranslation() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const { _borderLineWidth } = _a$5;\n            const x = _borderLineWidth / parentWidth;\n            const y = _borderLineWidth / parentHeight;\n            switch (this.rotation) {\n                case 90:\n                    return [-x, y];\n                case 180:\n                    return [x, y];\n                case 270:\n                    return [x, -y];\n                default:\n                    return [-x, -y];\n            }\n        }\n        /**\n         * @returns {boolean} true if position must be fixed (i.e. make the x and y\n         * living in the page).\n         */\n        get _mustFixPosition() {\n            return true;\n        }\n        /**\n         * Fix the position of the editor in order to keep it inside its parent page.\n         * @param {number} [rotation] - the rotation of the page.\n         */\n        fixAndSetPosition(rotation = this.rotation) {\n            if (rotation === undefined) {\n                return;\n            }\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            let { x, y, width, height } = this;\n            width *= pageWidth;\n            height *= pageHeight;\n            x *= pageWidth;\n            y *= pageHeight;\n            if (this._mustFixPosition) {\n                switch (rotation) {\n                    case 0:\n                        x = Math.max(0, Math.min(pageWidth - width, x));\n                        y = Math.max(0, Math.min(pageHeight - height, y));\n                        break;\n                    case 90:\n                        x = Math.max(0, Math.min(pageWidth - height, x));\n                        y = Math.min(pageHeight, Math.max(width, y));\n                        break;\n                    case 180:\n                        x = Math.min(pageWidth, Math.max(width, x));\n                        y = Math.min(pageHeight, Math.max(height, y));\n                        break;\n                    case 270:\n                        x = Math.min(pageWidth, Math.max(height, x));\n                        y = Math.max(0, Math.min(pageHeight - width, y));\n                        break;\n                    default: break;\n                }\n            }\n            this.x = x /= pageWidth;\n            this.y = y /= pageHeight;\n            const [bx, by] = this.getBaseTranslation();\n            x += bx;\n            y += by;\n            const { style } = this.div;\n            style.left = `${(100 * x).toFixed(2)}%`;\n            style.top = `${(100 * y).toFixed(2)}%`;\n            this.moveInDOM();\n        }\n        /**\n         * Convert a screen translation into a page one.\n         * @param {number} x\n         * @param {number} y\n         */\n        screenToPageTranslation(x, y) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(_a$5, _a$5, \"m\", _AnnotationEditor_rotatePoint).call(_a$5, x, y, this.parentRotation);\n        }\n        /**\n         * Convert a page translation into a screen one.\n         * @param {number} x\n         * @param {number} y\n         */\n        pageTranslationToScreen(x, y) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(_a$5, _a$5, \"m\", _AnnotationEditor_rotatePoint).call(_a$5, x, y, 360 - this.parentRotation);\n        }\n        // #getRotationMatrix(rotation) {\n        //     switch (rotation) {\n        //         case 90: {\n        //             const [pageWidth, pageHeight] = this.pageDimensions;\n        //             return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n        //         }\n        //         case 180:\n        //             return [-1, 0, 0, -1];\n        //         case 270: {\n        //             const [pageWidth, pageHeight] = this.pageDimensions;\n        //             return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n        //         }\n        //         default:\n        //             return [1, 0, 0, 1];\n        //     }\n        // }\n        get parentScale() {\n            return this._uiManager.viewParameters.realScale;\n        }\n        get parentRotation() {\n            return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n        }\n        get parentDimensions() {\n            const { parentScale, pageDimensions: [pageWidth, pageHeight] } = this;\n            const scaledWidth = pageWidth * parentScale;\n            const scaledHeight = pageHeight * parentScale;\n            return kendo_pdfjs_loader_js.FeatureTest.isCSSRoundSupported\n                ? [Math.round(scaledWidth), Math.round(scaledHeight)]\n                : [scaledWidth, scaledHeight];\n        }\n        /**\n         * Set the dimensions of this editor.\n         * @param {number} width\n         * @param {number} height\n         */\n        setDims(width, height) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.div.style.width = `${((100 * width) / parentWidth).toFixed(2)}%`;\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_keepAspectRatio, \"f\")) {\n                this.div.style.height = `${((100 * height) / parentHeight).toFixed(2)}%`;\n            }\n        }\n        fixDims() {\n            //     const { style } = this.div;\n            //     const { height, width } = style;\n            //     const widthPercent = width.endsWith(\"%\");\n            //     const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n            //     if (widthPercent && heightPercent) {\n            //         return;\n            //     }\n            //     const [parentWidth, parentHeight] = this.parentDimensions;\n            //     if (!widthPercent) {\n            //         style.width = `${((100 * parseFloat(width)) / parentWidth).toFixed(2)}%`;\n            //     }\n            //     if (!this.#keepAspectRatio && !heightPercent) {\n            //         style.height = `${((100 * parseFloat(height)) / parentHeight).toFixed(\n            //             2\n            //         )}%`;\n            //     }\n        }\n        /**\n         * Get the translation used to position this editor when it's created.\n         * @returns {Array<number>}\n         */\n        getInitialTranslation() {\n            return [0, 0];\n        }\n        // #createResizers() {\n        //     if (this.#resizersDiv) {\n        //         return;\n        //     }\n        //     this.#resizersDiv = document.createElement(\"div\");\n        //     this.#resizersDiv.classList.add(\"resizers\");\n        //     // When the resizers are used with the keyboard, they're focusable, hence\n        //     // we want to have them in this order (top left, top middle, top right, ...)\n        //     // in the DOM to have the focus order correct.\n        //     const classes = this._willKeepAspectRatio\n        //         ? [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"]\n        //         : [\n        //             \"topLeft\",\n        //             \"topMiddle\",\n        //             \"topRight\",\n        //             \"middleRight\",\n        //             \"bottomRight\",\n        //             \"bottomMiddle\",\n        //             \"bottomLeft\",\n        //             \"middleLeft\",\n        //         ];\n        //     const signal = this._uiManager._signal;\n        //     for (const name of classes) {\n        //         const div = document.createElement(\"div\");\n        //         this.#resizersDiv.append(div);\n        //         div.classList.add(\"resizer\", name);\n        //         div.setAttribute(\"data-resizer-name\", name);\n        //         div.addEventListener(\n        //             \"pointerdown\",\n        //             this.#resizerPointerdown.bind(this, name),\n        //             { signal }\n        //         );\n        //         div.addEventListener(\"contextmenu\", noContextMenu, { signal });\n        //         div.tabIndex = -1;\n        //     }\n        //     this.div.prepend(this.#resizersDiv);\n        // }\n        // #resizerPointerdown(name, event) {\n        //     event.preventDefault();\n        //     const { isMac } = FeatureTest.platform;\n        //     if (event.button !== 0 || (event.ctrlKey && isMac)) {\n        //         return;\n        //     }\n        //     this.#altText?.toggle(false);\n        //     const savedDraggable = this._isDraggable;\n        //     this._isDraggable = false;\n        //     const ac = new AbortController();\n        //     const signal = this._uiManager.combinedSignal(ac);\n        //     this.parent.togglePointerEvents(false);\n        //     window.addEventListener(\n        //         \"pointermove\",\n        //         this.#resizerPointermove.bind(this, name),\n        //         { passive: true, capture: true, signal }\n        //     );\n        //     window.addEventListener(\"contextmenu\", noContextMenu, { signal });\n        //     const savedX = this.x;\n        //     const savedY = this.y;\n        //     const savedWidth = this.width;\n        //     const savedHeight = this.height;\n        //     const savedParentCursor = this.parent.div.style.cursor;\n        //     const savedCursor = this.div.style.cursor;\n        //     this.div.style.cursor = this.parent.div.style.cursor =\n        //         window.getComputedStyle(event.target).cursor;\n        //     const pointerUpCallback = () => {\n        //         ac.abort();\n        //         this.parent.togglePointerEvents(true);\n        //         this.#altText?.toggle(true);\n        //         this._isDraggable = savedDraggable;\n        //         this.parent.div.style.cursor = savedParentCursor;\n        //         this.div.style.cursor = savedCursor;\n        //         this.#addResizeToUndoStack(savedX, savedY, savedWidth, savedHeight);\n        //     };\n        //     window.addEventListener(\"pointerup\", pointerUpCallback, { signal });\n        //     // If the user switches to another window (with alt+tab), then we end the\n        //     // resize session.\n        //     window.addEventListener(\"blur\", pointerUpCallback, { signal });\n        // }\n        // #addResizeToUndoStack(savedX, savedY, savedWidth, savedHeight) {\n        //     const newX = this.x;\n        //     const newY = this.y;\n        //     const newWidth = this.width;\n        //     const newHeight = this.height;\n        //     if (\n        //         newX === savedX &&\n        //         newY === savedY &&\n        //         newWidth === savedWidth &&\n        //         newHeight === savedHeight\n        //     ) {\n        //         return;\n        //     }\n        //     this.addCommands({\n        //         cmd: () => {\n        //             this.width = newWidth;\n        //             this.height = newHeight;\n        //             this.x = newX;\n        //             this.y = newY;\n        //             const [parentWidth, parentHeight] = this.parentDimensions;\n        //             this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n        //             this.fixAndSetPosition();\n        //         },\n        //         undo: () => {\n        //             this.width = savedWidth;\n        //             this.height = savedHeight;\n        //             this.x = savedX;\n        //             this.y = savedY;\n        //             const [parentWidth, parentHeight] = this.parentDimensions;\n        //             this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n        //             this.fixAndSetPosition();\n        //         },\n        //         mustExec: true,\n        //     });\n        // }\n        // #resizerPointermove(name, event) {\n        //     const [parentWidth, parentHeight] = this.parentDimensions;\n        //     const savedX = this.x;\n        //     const savedY = this.y;\n        //     const savedWidth = this.width;\n        //     const savedHeight = this.height;\n        //     const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n        //     const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n        //     // 10000 because we multiply by 100 and use toFixed(2) in fixAndSetPosition.\n        //     // Without rounding, the positions of the corners other than the top left\n        //     // one can be slightly wrong.\n        //     const round = x => Math.round(x * 10000) / 10000;\n        //     const rotationMatrix = this.#getRotationMatrix(this.rotation);\n        //     const transf = (x, y) => [\n        //         rotationMatrix[0] * x + rotationMatrix[2] * y,\n        //         rotationMatrix[1] * x + rotationMatrix[3] * y,\n        //     ];\n        //     const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n        //     const invTransf = (x, y) => [\n        //         invRotationMatrix[0] * x + invRotationMatrix[2] * y,\n        //         invRotationMatrix[1] * x + invRotationMatrix[3] * y,\n        //     ];\n        //     let getPoint;\n        //     let getOpposite;\n        //     let isDiagonal = false;\n        //     let isHorizontal = false;\n        //     switch (name) {\n        //         case \"topLeft\":\n        //             isDiagonal = true;\n        //             getPoint = (w, h) => [0, 0];\n        //             getOpposite = (w, h) => [w, h];\n        //             break;\n        //         case \"topMiddle\":\n        //             getPoint = (w, h) => [w / 2, 0];\n        //             getOpposite = (w, h) => [w / 2, h];\n        //             break;\n        //         case \"topRight\":\n        //             isDiagonal = true;\n        //             getPoint = (w, h) => [w, 0];\n        //             getOpposite = (w, h) => [0, h];\n        //             break;\n        //         case \"middleRight\":\n        //             isHorizontal = true;\n        //             getPoint = (w, h) => [w, h / 2];\n        //             getOpposite = (w, h) => [0, h / 2];\n        //             break;\n        //         case \"bottomRight\":\n        //             isDiagonal = true;\n        //             getPoint = (w, h) => [w, h];\n        //             getOpposite = (w, h) => [0, 0];\n        //             break;\n        //         case \"bottomMiddle\":\n        //             getPoint = (w, h) => [w / 2, h];\n        //             getOpposite = (w, h) => [w / 2, 0];\n        //             break;\n        //         case \"bottomLeft\":\n        //             isDiagonal = true;\n        //             getPoint = (w, h) => [0, h];\n        //             getOpposite = (w, h) => [w, 0];\n        //             break;\n        //         case \"middleLeft\":\n        //             isHorizontal = true;\n        //             getPoint = (w, h) => [0, h / 2];\n        //             getOpposite = (w, h) => [w, h / 2];\n        //             break;\n        //     }\n        //     const point = getPoint(savedWidth, savedHeight);\n        //     const oppositePoint = getOpposite(savedWidth, savedHeight);\n        //     let transfOppositePoint = transf(...oppositePoint);\n        //     const oppositeX = round(savedX + transfOppositePoint[0]);\n        //     const oppositeY = round(savedY + transfOppositePoint[1]);\n        //     let ratioX = 1;\n        //     let ratioY = 1;\n        //     let [deltaX, deltaY] = this.screenToPageTranslation(\n        //         event.movementX,\n        //         event.movementY\n        //     );\n        //     [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n        //     if (isDiagonal) {\n        //         const oldDiag = Math.hypot(savedWidth, savedHeight);\n        //         ratioX = ratioY = Math.max(\n        //             Math.min(\n        //                 Math.hypot(\n        //                     oppositePoint[0] - point[0] - deltaX,\n        //                     oppositePoint[1] - point[1] - deltaY\n        //                 ) / oldDiag,\n        //                 // Avoid the editor to be larger than the page.\n        //                 1 / savedWidth,\n        //                 1 / savedHeight\n        //             ),\n        //             // Avoid the editor to be smaller than the minimum size.\n        //             minWidth / savedWidth,\n        //             minHeight / savedHeight\n        //         );\n        //     } else if (isHorizontal) {\n        //         ratioX =\n        //             Math.max(\n        //                 minWidth,\n        //                 Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))\n        //             ) / savedWidth;\n        //     } else {\n        //         ratioY =\n        //             Math.max(\n        //                 minHeight,\n        //                 Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))\n        //             ) / savedHeight;\n        //     }\n        //     const newWidth = round(savedWidth * ratioX);\n        //     const newHeight = round(savedHeight * ratioY);\n        //     transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n        //     const newX = oppositeX - transfOppositePoint[0];\n        //     const newY = oppositeY - transfOppositePoint[1];\n        //     this.width = newWidth;\n        //     this.height = newHeight;\n        //     this.x = newX;\n        //     this.y = newY;\n        //     this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n        //     this.fixAndSetPosition();\n        // }\n        // /**\n        //  * Called when the alt text dialog is closed.\n        //  */\n        // altTextFinish() {\n        //     this.#altText?.finish();\n        // }\n        // /**\n        //  * Add a toolbar for this editor.\n        //  * @returns {Promise<EditorToolbar|null>}\n        //  */\n        // async addEditToolbar() {\n        addEditToolbar() {\n            var _b;\n            (_b = this._uiManager) === null || _b === void 0 ? void 0 : _b.showEditorToolBar(this.div);\n            // if (this._editToolbar || this.#isInEditMode) {\n            //     return this._editToolbar;\n            // }\n            // this._editToolbar = new EditorToolbar(this);\n            // this.div.append(this._editToolbar.render());\n            // if (this.#altText) {\n            //     this._editToolbar.addAltTextButton(await this.#altText.render());\n            // }\n            // return this._editToolbar;\n        }\n        removeEditToolbar() {\n            this._uiManager.hideEditorToolBar();\n            // if (!this._editToolbar) {\n            //     return;\n            // }\n            // this._editToolbar.remove();\n            // this._editToolbar = null;\n            // // We destroy the alt text but we don't null it because we want to be able\n            // // to restore it in case the user undoes the deletion.\n            // this.#altText?.destroy();\n        }\n        getClientDimensions() {\n            return this.div.getBoundingClientRect();\n        }\n        // async addAltTextButton() {\n        //     if (this.#altText) {\n        //         return;\n        //     }\n        //     AltText.initialize(AnnotationEditor._l10nPromise);\n        //     this.#altText = new AltText(this);\n        //     if (this.#accessibilityData) {\n        //         this.#altText.data = this.#accessibilityData;\n        //         this.#accessibilityData = null;\n        //     }\n        //     await this.addEditToolbar();\n        // }\n        // get altTextData() {\n        //     return this.#altText?.data;\n        // }\n        // /**\n        //  * Set the alt text data.\n        //  */\n        // set altTextData(data) {\n        //     if (!this.#altText) {\n        //         return;\n        //     }\n        //     this.#altText.data = data;\n        // }\n        // get guessedAltText() {\n        //     return this.#altText?.guessedText;\n        // }\n        // async setGuessedAltText(text) {\n        //     await this.#altText?.setGuessedText(text);\n        // }\n        // serializeAltText(isForCopying) {\n        //     return this.#altText?.serialize(isForCopying);\n        // }\n        // hasAltText() {\n        //     return !!this.#altText && !this.#altText.isEmpty();\n        // }\n        // hasAltTextData() {\n        //     return this.#altText?.hasData() ?? false;\n        // }\n        /**\n         * Render this editor in a div.\n         * @returns {HTMLDivElement | null}\n         */\n        render() {\n            this.div = document.createElement(\"div\");\n            this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n            this.div.className = this.name;\n            this.div.setAttribute(\"id\", this.id);\n            this.div.tabIndex = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_disabled, \"f\") ? -1 : 0;\n            if (!this._isVisible) {\n                // this.div.classList.add(\"hidden\");\n                this.div.classList.add(\"k-hidden\");\n            }\n            this.setInForeground();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_addFocusListeners).call(this);\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            if (this.parentRotation % 180 !== 0) {\n                this.div.style.maxWidth = `${((100 * parentHeight) / parentWidth).toFixed(2)}%`;\n                this.div.style.maxHeight = `${((100 * parentWidth) /\n                parentHeight).toFixed(2)}%`;\n            }\n            const [tx, ty] = this.getInitialTranslation();\n            this.translate(tx, ty);\n            bindEvents(this, this.div, [\"pointerdown\"]);\n            return this.div;\n        }\n        /**\n         * Onpointerdown callback.\n         * @param {PointerEvent} event\n         */\n        pointerdown(event) {\n            var _b;\n            const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n            if (event.button !== 0 || (event.ctrlKey && isMac)) {\n                // Avoid to focus this editor because of a non-left click.\n                event.preventDefault();\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_hasBeenClicked, true, \"f\");\n            if (this._isDraggable) {\n                (_b = this._uiManager) === null || _b === void 0 ? void 0 : _b.hideEditorToolBar();\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_setUpDragSession).call(this, event);\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_selectOnPointerEvent).call(this, event);\n        }\n        moveInDOM() {\n            // Moving the editor in the DOM can be expensive, so we wait a bit before.\n            // It's important to not block the UI (for example when changing the font\n            // size in a FreeText).\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_moveInDOMTimeout, \"f\")) {\n                clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_moveInDOMTimeout, \"f\"));\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_moveInDOMTimeout, setTimeout(() => {\n                var _b;\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_moveInDOMTimeout, null, \"f\");\n                (_b = this.parent) === null || _b === void 0 ? void 0 : _b.moveEditorInDOM(this);\n            }, 0), \"f\");\n        }\n        _setParentAndPosition(parent, x, y) {\n            parent.changeParent(this);\n            this.x = x;\n            this.y = y;\n            this.fixAndSetPosition();\n        }\n        /*\n         * Convert the current rect into a page one.\n         * @param {number} tx - x-translation in screen coordinates.\n         * @param {number} ty - y-translation in screen coordinates.\n         * @param {number} [rotation] - the rotation of the page.\n         */\n        getRect(tx, ty, rotation = this.rotation) {\n            const scale = this.parentScale;\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            const [pageX, pageY] = this.pageTranslation;\n            const shiftX = tx / scale;\n            const shiftY = ty / scale;\n            const x = this.x * pageWidth;\n            const y = this.y * pageHeight;\n            const width = this.width * pageWidth;\n            const height = this.height * pageHeight;\n            switch (rotation) {\n                case 0:\n                    return [\n                        x + shiftX + pageX,\n                        pageHeight - y - shiftY - height + pageY,\n                        x + shiftX + width + pageX,\n                        pageHeight - y - shiftY + pageY\n                    ];\n                case 90:\n                    return [\n                        x + shiftY + pageX,\n                        pageHeight - y + shiftX + pageY,\n                        x + shiftY + height + pageX,\n                        pageHeight - y + shiftX + width + pageY\n                    ];\n                case 180:\n                    return [\n                        x - shiftX - width + pageX,\n                        pageHeight - y + shiftY + pageY,\n                        x - shiftX + pageX,\n                        pageHeight - y + shiftY + height + pageY\n                    ];\n                case 270:\n                    return [\n                        x - shiftY - height + pageX,\n                        pageHeight - y - shiftX - width + pageY,\n                        x - shiftY + pageX,\n                        pageHeight - y - shiftX + pageY\n                    ];\n                default:\n                    throw new Error(\"Invalid rotation\");\n            }\n        }\n        getRectInCurrentCoords(rect, pageHeight) {\n            const [x1, y1, x2, y2] = rect;\n            const width = x2 - x1;\n            const height = y2 - y1;\n            switch (this.rotation) {\n                case 0:\n                    return [x1, pageHeight - y2, width, height];\n                case 90:\n                    return [x1, pageHeight - y1, height, width];\n                case 180:\n                    return [x2, pageHeight - y1, width, height];\n                case 270:\n                    return [x2, pageHeight - y2, height, width];\n                default:\n                    // throw new Error(\"Invalid rotation\");\n                    break;\n            }\n        }\n        // /**\n        //  * Executed once this editor has been rendered.\n        //  */\n        onceAdded() { }\n        // /**\n        //  * Check if the editor contains something.\n        //  * @returns {boolean}\n        //  */\n        isEmpty() {\n            return false;\n        }\n        /**\n         * Enable edit mode.\n         */\n        enableEditMode() {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_isInEditMode, true, \"f\");\n        }\n        /**\n         * Disable edit mode.\n         */\n        disableEditMode() {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_isInEditMode, false, \"f\");\n        }\n        /**\n         * Check if the editor is edited.\n         * @returns {boolean}\n         */\n        isInEditMode() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_isInEditMode, \"f\");\n        }\n        // /**\n        //  * If it returns true, then this editor handles the keyboard\n        //  * events itself.\n        //  * @returns {boolean}\n        //  */\n        // shouldGetKeyboardEvents() {\n        //     return this.#isResizerEnabledForKeyboard;\n        // }\n        /**\n         * Check if this editor needs to be rebuilt or not.\n         * @returns {boolean}\n         */\n        needsToBeRebuilt() {\n            return this.div && !this.isAttachedToDOM;\n        }\n        /**\n         * Rebuild the editor in case it has been removed on undo.\n         *\n         * To implement in subclasses.\n         */\n        rebuild() {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_addFocusListeners).call(this);\n        }\n        /**\n         * Rotate the editor.\n         * @param {number} angle\n         */\n        rotate(angle) {\n            if (angle === undefined || angle === null) {\n                return;\n            }\n        }\n        /**\n         * Serialize the editor.\n         * The result of the serialization will be used to construct a\n         * new annotation to add to the pdf document.\n         *\n         * To implement in subclasses.\n         * @param {boolean} [isForCopying]\n         * @param {Object | null} [context]\n         * @returns {Object | null}\n         */\n        // @ts-expect-error (TS)\n        // eslint-disable-next-line\n        serialize(isForCopying = false, context = null) {\n            // serialize() {\n        }\n        /**\n         * Deserialize the editor.\n         * The result of the deserialization is a new editor.\n         *\n         * @param {Object} data\n         * @param {AnnotationEditorLayer} parent\n         * @param {AnnotationEditorUIManager} uiManager\n         * @returns {AnnotationEditor | null}\n         */\n        static deserialize(data, parent, uiManager) {\n            // @ts-expect-error TS(2556):\n            const editor = new this.prototype.constructor({\n                parent,\n                id: parent.getNextId(),\n                uiManager,\n            });\n            editor.rotation = data.rotation;\n            // editor.#accessibilityData = data.accessibilityData;\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n            editor.x = x / pageWidth;\n            editor.y = y / pageHeight;\n            editor.width = width / pageWidth;\n            editor.height = height / pageHeight;\n            return editor;\n        }\n        /**\n         * Check if an existing annotation associated with this editor has been\n         * modified.\n         * @returns {boolean}\n         */\n        get hasBeenModified() {\n            return (!!this.annotationElementId && (this.deleted || this.serialize() !== null));\n        }\n        /**\n         * Remove this editor.\n         * It's used on ctrl+backspace action.\n         */\n        remove() {\n            var _b;\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_focusAC, \"f\")) === null || _b === void 0 ? void 0 : _b.abort();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_focusAC, null, \"f\");\n            if (!this.isEmpty()) {\n                // The editor is removed but it can be back at some point thanks to\n                // undo/redo so we must commit it before.\n                this.commit();\n            }\n            if (this.parent) {\n                this.parent.remove(this);\n            }\n            else {\n                this._uiManager.removeEditor(this);\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_moveInDOMTimeout, \"f\")) {\n                clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_moveInDOMTimeout, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_moveInDOMTimeout, null, \"f\");\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_stopResizing).call(this);\n            this.removeEditToolbar();\n            // if (this.#telemetryTimeouts) {\n            //     for (const timeout of this.#telemetryTimeouts.values()) {\n            //         clearTimeout(timeout);\n            //     }\n            //     this.#telemetryTimeouts = null;\n            // }\n            this.parent = null;\n        }\n        /**\n         * @returns {boolean} true if this editor can be resized.\n         */\n        get isResizable() {\n            return false;\n        }\n        /**\n         * Add the resizers to this editor.\n         */\n        makeResizable() {\n            //     if (this.isResizable) {\n            //         this.#createResizers();\n            //         this.#resizersDiv.classList.remove(\"hidden\");\n            //         this.#resizersDiv.classList.remove(\"k-hidden\");\n            //         bindEvents(this, this.div, [\"keydown\"]);\n            //     }\n        }\n        get toolbarPosition() {\n            return null;\n        }\n        _stopResizingWithKeyboard() {\n            //     this.#stopResizing();\n            //     this.div.focus();\n        }\n        /**\n         * Select this editor.\n         */\n        select() {\n            var _b;\n            // this.makeResizable();\n            // this.div?.classList.add(\"selectedEditor\");\n            (_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.add(\"k-selected\");\n            // todo: manually show annotation toolbar\n            this.addEditToolbar();\n            // if (!this._editToolbar) {\n            //     this.addEditToolbar().then(() => {\n            //         if (this.div?.classList.contains(\"k-selected selectedEditor\")) {\n            //             // The editor can have been unselected while we were waiting for the\n            //             // edit toolbar to be created, hence we want to be sure that this\n            //             // editor is still selected.\n            //             this._editToolbar?.show();\n            //         }\n            //     });\n            //     return;\n            // }\n            // this._editToolbar?.show();\n            // this.#altText?.toggleAltTextBadge(false);\n        }\n        /**\n         * Unselect this editor.\n         */\n        unselect() {\n            var _b, _c;\n            // this.#resizersDiv?.classList.add(\"hidden\");\n            // this.div?.classList.remove(\"selectedEditor\");\n            (_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.remove(\"k-selected\");\n            if ((_c = this.div) === null || _c === void 0 ? void 0 : _c.contains(document.activeElement)) {\n                // Don't use this.div.blur() because we don't know where the focus will\n                // go.\n                this._uiManager.currentLayer.div.focus({\n                    preventScroll: true,\n                });\n            }\n            // this._editToolbar?.hide();\n            // this.#altText?.toggleAltTextBadge(true);\n        }\n        /**\n         * Update some parameters which have been changed through the UI.\n         * @param {number} type\n         * @param {*} value\n         */\n        updateParams(type, value) {\n            if (type === undefined || !value) {\n                return;\n            }\n        }\n        /**\n         * When the user disables the editing mode some editors can change some of\n         * their properties.\n         */\n        disableEditing() { }\n        /**\n         * When the user enables the editing mode some editors can change some of\n         * their properties.\n         */\n        enableEditing() { }\n        /**\n         * The editor is about to be edited.\n         */\n        enterInEditMode() { }\n        /**\n         * @returns {HTMLElement | null} the element requiring an alt text.\n         */\n        getImageForAltText() {\n            return null;\n        }\n        /**\n         * Get the div which really contains the displayed content.\n         * @returns {HTMLDivElement | undefined}\n         */\n        get contentDiv() {\n            return this.div;\n        }\n        /**\n         * If true then the editor is currently edited.\n         * @type {boolean}\n         */\n        get isEditing() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_isEditing, \"f\");\n        }\n        /**\n         * When set to true, it means that this editor is currently edited.\n         * @param {boolean} value\n         */\n        set isEditing(value) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_isEditing, value, \"f\");\n            if (!this.parent) {\n                return;\n            }\n            if (value) {\n                this.parent.setSelected(this);\n                this.parent.setActiveEditor(this);\n            }\n            else {\n                this.parent.setActiveEditor(null);\n            }\n        }\n        /**\n         * Set the aspect ratio to use when resizing.\n         * @param {number} width\n         * @param {number} height\n         */\n        setAspectRatio(width, height) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_keepAspectRatio, true, \"f\");\n            const aspectRatio = width / height;\n            const { style } = this.div;\n            style.aspectRatio = aspectRatio;\n            style.height = \"auto\";\n        }\n        static get MIN_SIZE() {\n            return 16;\n        }\n        static canCreateNewEmptyEditor() {\n            return true;\n        }\n        /**\n         * Get the data to report to the telemetry when the editor is added.\n         * @returns {Object}\n         */\n        get telemetryInitialData() {\n            return { action: \"added\" };\n        }\n        /**\n         * The telemetry data to use when saving/printing.\n         * @returns {Object|null}\n         */\n        get telemetryFinalData() {\n            return null;\n        }\n        _reportTelemetry() {\n        }\n        // _reportTelemetry(data, mustWait = false) {\n        //     if (mustWait) {\n        //         this.#telemetryTimeouts ||= new Map();\n        //         const { action } = data;\n        //         let timeout = this.#telemetryTimeouts.get(action);\n        //         if (timeout) {\n        //             clearTimeout(timeout);\n        //         }\n        //         timeout = setTimeout(() => {\n        //             this._reportTelemetry(data);\n        //             this.#telemetryTimeouts.delete(action);\n        //             if (this.#telemetryTimeouts.size === 0) {\n        //                 this.#telemetryTimeouts = null;\n        //             }\n        //         }, AnnotationEditor._telemetryTimeout);\n        //         this.#telemetryTimeouts.set(action, timeout);\n        //         return;\n        //     }\n        //     data.type ||= this.editorType;\n        //     this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n        //         source: this,\n        //         details: {\n        //             type: \"editing\",\n        //             data,\n        //         },\n        //     });\n        // }\n        /**\n         * Show or hide this editor.\n         * @param {boolean|undefined} visible\n         */\n        show(visible = this._isVisible) {\n            // this.div.classList.toggle(\"hidden\", !visible);\n            this.div.classList.toggle(\"k-hidden\", !visible);\n            this._isVisible = visible;\n        }\n        enable() {\n            if (this.div) {\n                this.div.tabIndex = 0;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_disabled, false, \"f\");\n        }\n        disable() {\n            if (this.div) {\n                this.div.tabIndex = -1;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_disabled, true, \"f\");\n        }\n        /**\n         * Render an annotation in the annotation layer.\n         * @param {Object} annotation\n         * @returns {HTMLElement}\n         */\n        renderAnnotationElement(annotation) {\n            let content = annotation.container.querySelector(\".annotationContent\") ||\n                annotation.container.querySelector(\".k-annotation-content \");\n            if (!content) {\n                content = document.createElement(\"div\");\n                // content.classList.add(\"annotationContent\", this.editorType);\n                content.classList.add(\"k-annotation-content \", this.editorType);\n                annotation.container.prepend(content);\n            }\n            else if (content.nodeName === \"CANVAS\") {\n                const canvas = content;\n                content = document.createElement(\"div\");\n                // content.classList.add(\"annotationContent\", this.editorType);\n                content.classList.add(\"k-annotation-content \", this.editorType);\n                canvas.before(content);\n            }\n            return content;\n        }\n        resetAnnotationElement(annotation) {\n            const { firstChild } = annotation.container;\n            if (firstChild.nodeName === \"DIV\" &&\n                (firstChild.classList.contains(\"annotationContent\") ||\n                    firstChild.classList.contains(\"k-annotation-content \"))) {\n                firstChild.remove();\n            }\n        }\n    }\n    _a$5 = AnnotationEditor, _AnnotationEditor_x = new WeakMap(), _AnnotationEditor_y = new WeakMap(), _AnnotationEditor_disabled = new WeakMap(), _AnnotationEditor_keepAspectRatio = new WeakMap(), _AnnotationEditor_focusAC = new WeakMap(), _AnnotationEditor_hasBeenClicked = new WeakMap(), _AnnotationEditor_initialPosition = new WeakMap(), _AnnotationEditor_isEditing = new WeakMap(), _AnnotationEditor_isInEditMode = new WeakMap(), _AnnotationEditor_moveInDOMTimeout = new WeakMap(), _AnnotationEditor_prevDragX = new WeakMap(), _AnnotationEditor_prevDragY = new WeakMap(), _AnnotationEditor_isDraggable = new WeakMap(), _AnnotationEditor_zIndex = new WeakMap(), _AnnotationEditor_instances = new WeakSet(), _AnnotationEditor_translate = function _AnnotationEditor_translate([width, height], x, y) {\n        [x, y] = this.screenToPageTranslation(x, y);\n        this.x += x / width;\n        this.y += y / height;\n        this.fixAndSetPosition();\n    }, _AnnotationEditor_rotatePoint = function _AnnotationEditor_rotatePoint(x, y, angle) {\n        switch (angle) {\n            case 90:\n                return [y, -x];\n            case 180:\n                return [-x, -y];\n            case 270:\n                return [-y, x];\n            default:\n                return [x, y];\n        }\n    }, _AnnotationEditor_selectOnPointerEvent = function _AnnotationEditor_selectOnPointerEvent(event) {\n        const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n        const highlightEditor = event.target.closest(\".k-highlight-editor\");\n        const freeTextEditor = event.target.closest(\".k-free-text-editor\");\n        const annotationEditorMode = this._uiManager.getMode();\n        // todo: manually prevent selecting a highlight annotation in freetext mode\n        if ((annotationEditorMode === AnnotationEditorType.HIGHLIGHT && !highlightEditor) ||\n            (annotationEditorMode === AnnotationEditorType.FREETEXT && !freeTextEditor)) {\n            return;\n        }\n        if ((event.ctrlKey && !isMac) ||\n            event.shiftKey ||\n            (event.metaKey && isMac)) {\n            this.parent.toggleSelected(this);\n        }\n        else {\n            this.parent.setSelected(this);\n        }\n    }, _AnnotationEditor_setUpDragSession = function _AnnotationEditor_setUpDragSession(event) {\n        const isSelected = this._uiManager.isSelected(this);\n        this._uiManager.setUpDragSession();\n        const ac = new AbortController();\n        const signal = this._uiManager.combinedSignal(ac);\n        if (isSelected) {\n            // this.div.classList.add(\"moving\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_prevDragX, event.clientX, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_prevDragY, event.clientY, \"f\");\n            const pointerMoveCallback = e => {\n                const { clientX: x, clientY: y } = e;\n                const [tx, ty] = this.screenToPageTranslation(x - kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_prevDragX, \"f\"), y - kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_prevDragY, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_prevDragX, x, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_prevDragY, y, \"f\");\n                this._uiManager.dragSelectedEditors(tx, ty);\n            };\n            window.addEventListener(\"pointermove\", pointerMoveCallback, {\n                passive: true,\n                capture: true,\n                signal,\n            });\n        }\n        const pointerUpCallback = () => {\n            ac.abort();\n            if (isSelected) {\n                this.div.classList.remove(\"moving\");\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_hasBeenClicked, false, \"f\");\n            if (!this._uiManager.endDragSession()) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_selectOnPointerEvent).call(this, event);\n            }\n        };\n        window.addEventListener(\"pointerup\", pointerUpCallback, { signal });\n        // If the user is using alt+tab during the dragging session, the pointerup\n        // event could be not fired, but a blur event is fired so we can use it in\n        // order to interrupt the dragging session.\n        window.addEventListener(\"blur\", pointerUpCallback, { signal });\n    }, _AnnotationEditor_addFocusListeners = function _AnnotationEditor_addFocusListeners() {\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_focusAC, \"f\") || !this.div) {\n            return;\n        }\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditor_focusAC, new AbortController(), \"f\");\n        const signal = this._uiManager.combinedSignal(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditor_focusAC, \"f\"));\n        this.div.addEventListener(\"focusin\", this.focusin.bind(this), { signal });\n        this.div.addEventListener(\"focusout\", this.focusout.bind(this), { signal });\n    }, _AnnotationEditor_stopResizing = function _AnnotationEditor_stopResizing() {\n        // this.#isResizerEnabledForKeyboard = false;\n        // this.#setResizerTabIndex(-1);\n        // if (this.#savedDimensions) {\n        //     const { savedX, savedY, savedWidth, savedHeight } = this.#savedDimensions;\n        //     this.#addResizeToUndoStack(savedX, savedY, savedWidth, savedHeight);\n        //     this.#savedDimensions = null;\n        // }\n    };\n    AnnotationEditor.idManager = new IdManager(\"annotation_editor_id_\");\n    AnnotationEditor._borderLineWidth = -1;\n    AnnotationEditor._colorManager = new ColorManager();\n    AnnotationEditor._zIndex = 1;\n    // Time to wait (in ms) before sending the telemetry data.\n    // We wait a bit to avoid sending too many requests when changing something\n    // like the thickness of a line.\n    AnnotationEditor._telemetryTimeout = 1000;\n    // This class is used to fake an editor which has been deleted.\n    class FakeEditor extends AnnotationEditor {\n        constructor(params) {\n            super(params);\n            this.annotationElementId = params.annotationElementId;\n            this.deleted = true;\n        }\n        serialize() {\n            return {\n                id: this.annotationElementId,\n                deleted: true,\n                pageIndex: this.pageIndex,\n            };\n        }\n    }\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _FreeTextEditor_instances, _a$4, _FreeTextEditor_color, _FreeTextEditor_content, _FreeTextEditor_editorDivId, _FreeTextEditor_editModeAC, _FreeTextEditor_fontSize, _FreeTextEditor_initialData, _FreeTextEditor_updateFontSize, _FreeTextEditor_updateColor, _FreeTextEditor_extractText, _FreeTextEditor_setEditorDimensions, _FreeTextEditor_getNodeContent, _FreeTextEditor_setContent, _FreeTextEditor_serializeContent, _FreeTextEditor_deserializeContent, _FreeTextEditor_hasElementChanged;\n    // import { FreeTextAnnotationElement } from \"../annotation-layer\";\n    const EOL_PATTERN = /\\r\\n?|\\n/g;\n    class FreeTextEditor extends AnnotationEditor {\n        constructor(params) {\n            super(Object.assign(Object.assign({}, params), { name: \"k-free-text-editor freeTextEditor\" }));\n            _FreeTextEditor_instances.add(this);\n            // todo: props\n            this.editorDiv = null;\n            this.overlayDiv = null;\n            // todo: props\n            _FreeTextEditor_color.set(this, void 0);\n            _FreeTextEditor_content.set(this, \"\");\n            _FreeTextEditor_editorDivId.set(this, `${this.id}-editor`);\n            _FreeTextEditor_editModeAC.set(this, null);\n            _FreeTextEditor_fontSize.set(this, void 0);\n            _FreeTextEditor_initialData.set(this, null);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_color, params.color ||\n                _a$4._defaultColor ||\n                AnnotationEditor._defaultLineColor, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_fontSize, params.fontSize || _a$4._defaultFontSize, \"f\");\n        }\n        /** @inheritdoc */\n        static initialize(l10n, uiManager) {\n            AnnotationEditor.initialize(l10n, uiManager, {\n                strings: [\"pdfjs-free-text-default-content\"],\n            });\n            const style = getComputedStyle(document.documentElement);\n            // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n            //     const lineHeight = parseFloat(\n            //         style.getPropertyValue(\"--freetext-line-height\")\n            //     );\n            //     assert(\n            //         lineHeight === LINE_FACTOR,\n            //         \"Update the CSS variable to agree with the constant.\"\n            //     );\n            // }\n            // todo: read the variable\n            this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\")) || 2;\n        }\n        /** @inheritdoc */\n        static updateDefaultParams(type, value) {\n            switch (type) {\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE:\n                    _a$4._defaultFontSize = value;\n                    break;\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR:\n                    _a$4._defaultColor = value;\n                    break;\n                default: break;\n            }\n        }\n        /** @inheritdoc */\n        updateParams(type, value) {\n            switch (type) {\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE:\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_updateFontSize).call(this, value);\n                    break;\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR:\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_updateColor).call(this, value);\n                    break;\n                default: break;\n            }\n        }\n        /** @inheritdoc */\n        static get defaultPropertiesToUpdate() {\n            return [\n                [\n                    kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE,\n                    _a$4._defaultFontSize,\n                ],\n                [\n                    kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR,\n                    _a$4._defaultColor || AnnotationEditor._defaultLineColor,\n                ],\n            ];\n        }\n        /** @inheritdoc */\n        get propertiesToUpdate() {\n            return [\n                [kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_fontSize, \"f\")],\n                [kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_color, \"f\")],\n            ];\n        }\n        /**\n         * Helper to translate the editor with the keyboard when it's empty.\n         * @param {number} x in page units.\n         * @param {number} y in page units.\n         */\n        _translateEmpty(x, y) {\n            this._uiManager.translateSelectedEditors(x, y, /* noCommit = */ true);\n        }\n        getInitialTranslation() {\n            // The start of the base line is where the user clicked.\n            const scale = this.parentScale;\n            return [\n                -_a$4._internalPadding * scale,\n                -(_a$4._internalPadding + kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_fontSize, \"f\")) * scale,\n            ];\n        }\n        /** @inheritdoc */\n        rebuild() {\n            if (!this.parent) {\n                return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n                return;\n            }\n            if (!this.isAttachedToDOM) {\n                // At some point this editor was removed and we're rebuilting it,\n                // hence we must add it to its parent.\n                this.parent.add(this);\n            }\n        }\n        enableEditMode() {\n            if (this.isInEditMode()) {\n                return;\n            }\n            this.parent.setEditingState(false);\n            this.parent.updateToolbar(kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT);\n            super.enableEditMode();\n            this.overlayDiv.classList.remove(\"enabled\");\n            this.editorDiv.contentEditable = true;\n            this._isDraggable = false;\n            this.div.removeAttribute(\"aria-activedescendant\");\n            // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n            //     assert(\n            //         !this.#editModeAC,\n            //         \"No `this.#editModeAC` AbortController should exist.\"\n            //     );\n            // }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_editModeAC, new AbortController(), \"f\");\n            const signal = this._uiManager.combinedSignal(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_editModeAC, \"f\"));\n            this.editorDiv.addEventListener(\"keydown\", this.editorDivKeydown.bind(this), { signal });\n            this.editorDiv.addEventListener(\"focus\", this.editorDivFocus.bind(this), {\n                signal,\n            });\n            this.editorDiv.addEventListener(\"blur\", this.editorDivBlur.bind(this), {\n                signal,\n            });\n            this.editorDiv.addEventListener(\"input\", this.editorDivInput.bind(this), {\n                signal,\n            });\n            this.editorDiv.addEventListener(\"paste\", this.editorDivPaste.bind(this), {\n                signal,\n            });\n        }\n        disableEditMode() {\n            var _b;\n            if (!this.isInEditMode()) {\n                return;\n            }\n            this.parent.setEditingState(true);\n            super.disableEditMode();\n            // this.overlayDiv.classList.add(\"enabled\");\n            this.editorDiv.contentEditable = false;\n            this.div.setAttribute(\"aria-activedescendant\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_editorDivId, \"f\"));\n            this._isDraggable = true;\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_editModeAC, \"f\")) === null || _b === void 0 ? void 0 : _b.abort();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_editModeAC, null, \"f\");\n            // On Chrome, the focus is given to <body> when contentEditable is set to\n            // false, hence we focus the div.\n            this.div.focus({\n                preventScroll: true /* See issue #15744 */,\n            });\n            // In case the blur callback hasn't been called.\n            this.isEditing = false;\n            // this.parent.div.classList.add(\"freetextEditing\");\n        }\n        focusin(event) {\n            var _b;\n            if (!this._focusEventsAllowed) {\n                return;\n            }\n            if (((_b = this._uiManager) === null || _b === void 0 ? void 0 : _b.getMode()) !== kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n                // prevent focusing the freetext editor while in highlight mode\n                // in pdf.js this situation does free highlight annotation isntead\n                // which is not currently implemented\n                return;\n            }\n            super.focusin(event);\n            if (event.target !== this.editorDiv) {\n                this.editorDiv.focus();\n            }\n        }\n        /** @inheritdoc */\n        onceAdded() {\n            var _b;\n            if (this.width) {\n                // The editor was created in using ctrl+c.\n                return;\n            }\n            this.enableEditMode();\n            this.editorDiv.focus();\n            if ((_b = this._initialOptions) === null || _b === void 0 ? void 0 : _b.isCentered) {\n                this.center();\n            }\n            this._initialOptions = null;\n        }\n        /** @inheritdoc */\n        isEmpty() {\n            var _b, _c;\n            return !this.editorDiv || ((_c = (_b = this.editorDiv) === null || _b === void 0 ? void 0 : _b.innerText) === null || _c === void 0 ? void 0 : _c.trim()) === \"\";\n        }\n        /** @inheritdoc */\n        remove() {\n            this.isEditing = false;\n            if (this.parent) {\n                this.parent.setEditingState(true);\n                // this.parent.div.classList.add(\"freetextEditing\");\n            }\n            super.remove();\n        }\n        /**\n         * Commit the content we have in this editor.\n         * @returns {undefined}\n         */\n        commit() {\n            if (!this.isInEditMode()) {\n                return;\n            }\n            super.commit();\n            this.disableEditMode();\n            const savedText = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_content, \"f\");\n            const newText = (kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_content, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_extractText).call(this).trimEnd(), \"f\"));\n            if (savedText === newText) {\n                return;\n            }\n            const setText = text => {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_content, text, \"f\");\n                if (!text) {\n                    this.remove();\n                    return;\n                }\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setContent).call(this);\n                this._uiManager.rebuild(this);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setEditorDimensions).call(this);\n            };\n            this.addCommands({\n                cmd: () => {\n                    setText(newText);\n                },\n                undo: () => {\n                    setText(savedText);\n                },\n                mustExec: false,\n            });\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setEditorDimensions).call(this);\n        }\n        /** @inheritdoc */\n        shouldGetKeyboardEvents() {\n            return this.isInEditMode();\n        }\n        /** @inheritdoc */\n        enterInEditMode() {\n            this.enableEditMode();\n            this.editorDiv.focus();\n        }\n        /**\n         * ondblclick callback.\n         * @param {MouseEvent} event\n         */\n        dblclick(event) {\n            if (!event) {\n                return;\n            }\n            this.enterInEditMode();\n        }\n        /**\n         * onkeydown callback.\n         * @param {KeyboardEvent} event\n         */\n        keydown(event) {\n            if (event.target === this.div && event.key === \"Enter\") {\n                this.enterInEditMode();\n                // Avoid to add an unwanted new line.\n                event.preventDefault();\n            }\n        }\n        editorDivKeydown() {\n            // FreeTextEditor._keyboardManager.exec(this, event);\n        }\n        editorDivFocus() {\n            this.isEditing = true;\n        }\n        editorDivBlur() {\n            this.isEditing = false;\n        }\n        editorDivInput() {\n            // this.parent.div.classList.toggle(\"freetextEditing\", this.isEmpty());\n        }\n        /** @inheritdoc */\n        disableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"comment\");\n            this.editorDiv.removeAttribute(\"aria-multiline\");\n        }\n        /** @inheritdoc */\n        enableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"textbox\");\n            this.editorDiv.setAttribute(\"aria-multiline\", true);\n        }\n        /** @inheritdoc */\n        render() {\n            var _b;\n            if (this.div) {\n                return this.div;\n            }\n            let baseX, baseY;\n            if (this.width) {\n                baseX = this.x;\n                baseY = this.y;\n            }\n            super.render();\n            this.editorDiv = document.createElement(\"div\");\n            this.editorDiv.className = \"k-internal internal\";\n            // todo: move to CSS\n            // this.editorDiv.style.position = \"absolute\";\n            // this.div.style.position = \"absolute\";\n            this.editorDiv.setAttribute(\"id\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_editorDivId, \"f\"));\n            this.editorDiv.setAttribute(\"data-l10n-id\", \"pdfjs-free-text\");\n            this.enableEditing();\n            // AnnotationEditor._l10nPromise\n            //     .get(\"pdfjs-free-text-default-content\")\n            //     .then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n            // todo: fix localization\n            (_b = this.editorDiv) === null || _b === void 0 ? void 0 : _b.setAttribute(\"default-content\", this._uiManager.pdfViewer.options.messages.freeTextEditorPlaceholder);\n            this.editorDiv.contentEditable = true;\n            const { style } = this.editorDiv;\n            style.fontSize = `calc(${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_fontSize, \"f\")}px * var(--scale-factor))`;\n            style.color = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_color, \"f\");\n            this.div.append(this.editorDiv);\n            this.overlayDiv = document.createElement(\"div\");\n            // this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n            this.div.append(this.overlayDiv);\n            bindEvents(this, this.div, [\"dblclick\", \"keydown\"]);\n            if (this.width) {\n                // This editor was created in using copy (ctrl+c).\n                const [parentWidth, parentHeight] = this.parentDimensions;\n                if (this.annotationElementId) {\n                    // This stuff is hard to test: if something is changed here, please\n                    // test with the following PDF file:\n                    //  - freetexts.pdf\n                    //  - rotated_freetexts.pdf\n                    // Only small variations between the original annotation and its editor\n                    // are allowed.\n                    // position is the position of the first glyph in the annotation\n                    // and it's relative to its container.\n                    const { position } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_initialData, \"f\");\n                    let [tx, ty] = this.getInitialTranslation();\n                    [tx, ty] = this.pageTranslationToScreen(tx, ty);\n                    const [pageWidth, pageHeight] = this.pageDimensions;\n                    const [pageX, pageY] = this.pageTranslation;\n                    let posX, posY;\n                    switch (this.rotation) {\n                        case 0:\n                            posX = baseX + (position[0] - pageX) / pageWidth;\n                            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n                            break;\n                        case 90:\n                            posX = baseX + (position[0] - pageX) / pageWidth;\n                            posY = baseY - (position[1] - pageY) / pageHeight;\n                            [tx, ty] = [ty, -tx];\n                            break;\n                        case 180:\n                            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n                            posY = baseY - (position[1] - pageY) / pageHeight;\n                            [tx, ty] = [-tx, -ty];\n                            break;\n                        case 270:\n                            posX =\n                                baseX +\n                                    (position[0] - pageX - this.height * pageHeight) / pageWidth;\n                            posY =\n                                baseY +\n                                    (position[1] - pageY - this.width * pageWidth) / pageHeight;\n                            [tx, ty] = [-ty, tx];\n                            break;\n                        default: break;\n                    }\n                    this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n                }\n                else {\n                    this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n                }\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setContent).call(this);\n                this._isDraggable = true;\n                this.editorDiv.contentEditable = false;\n            }\n            else {\n                this._isDraggable = false;\n                this.editorDiv.contentEditable = true;\n            }\n            // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n            //     this.div.setAttribute(\"annotation-id\", this.annotationElementId);\n            // }\n            return this.div;\n        }\n        editorDivPaste(event) {\n            // @ts-expect-error TS(2551):\n            const clipboardData = event.clipboardData || window.clipboardData;\n            const { types } = clipboardData;\n            if (types.length === 1 && types[0] === \"text/plain\") {\n                return;\n            }\n            event.preventDefault();\n            const paste = kendo_dateinputsCommon_cmn_chunk_js.a(_a$4, _a$4, \"m\", _FreeTextEditor_deserializeContent).call(_a$4, clipboardData.getData(\"text\") || \"\").replaceAll(EOL_PATTERN, \"\\n\");\n            if (!paste) {\n                return;\n            }\n            const selection = window.getSelection();\n            if (!selection.rangeCount) {\n                return;\n            }\n            this.editorDiv.normalize();\n            selection.deleteFromDocument();\n            const range = selection.getRangeAt(0);\n            if (!paste.includes(\"\\n\")) {\n                range.insertNode(document.createTextNode(paste));\n                this.editorDiv.normalize();\n                selection.collapseToStart();\n                return;\n            }\n            // Collect the text before and after the caret.\n            const { startContainer, startOffset } = range;\n            const bufferBefore = [];\n            const bufferAfter = [];\n            if (startContainer.nodeType === Node.TEXT_NODE) {\n                const parent = startContainer.parentElement;\n                bufferAfter.push(\n                // @ts-expect-error TS(2556):\n                startContainer.nodeValue.slice(startOffset).replaceAll(EOL_PATTERN, \"\"));\n                if (parent !== this.editorDiv) {\n                    let buffer = bufferBefore;\n                    for (const child of this.editorDiv.childNodes) {\n                        if (child === parent) {\n                            buffer = bufferAfter;\n                            continue;\n                        }\n                        buffer.push(kendo_dateinputsCommon_cmn_chunk_js.a(_a$4, _a$4, \"m\", _FreeTextEditor_getNodeContent).call(_a$4, child));\n                    }\n                }\n                bufferBefore.push(startContainer.nodeValue\n                    .slice(0, startOffset)\n                    // @ts-expect-error TS(2556):\n                    .replaceAll(EOL_PATTERN, \"\"));\n            }\n            else if (startContainer === this.editorDiv) {\n                let buffer = bufferBefore;\n                let i = 0;\n                for (const child of this.editorDiv.childNodes) {\n                    if (i++ === startOffset) {\n                        buffer = bufferAfter;\n                    }\n                    buffer.push(kendo_dateinputsCommon_cmn_chunk_js.a(_a$4, _a$4, \"m\", _FreeTextEditor_getNodeContent).call(_a$4, child));\n                }\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_content, `${bufferBefore.join(\"\\n\")}${paste}${bufferAfter.join(\"\\n\")}`, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setContent).call(this);\n            // Set the caret at the right position.\n            const newRange = new Range();\n            let beforeLength = bufferBefore.reduce((acc, line) => acc + line.length, 0);\n            for (const { firstChild } of this.editorDiv.childNodes) {\n                // Each child is either a div with a text node or a br element.\n                if (firstChild.nodeType === Node.TEXT_NODE) {\n                    const length = firstChild.nodeValue.length;\n                    if (beforeLength <= length) {\n                        newRange.setStart(firstChild, beforeLength);\n                        newRange.setEnd(firstChild, beforeLength);\n                        break;\n                    }\n                    beforeLength -= length;\n                }\n            }\n            selection.removeAllRanges();\n            selection.addRange(newRange);\n        }\n        /** @inheritdoc */\n        get contentDiv() {\n            return this.editorDiv;\n        }\n        /** @inheritdoc */\n        static deserialize(data, parent, uiManager) {\n            let initialData = null;\n            if (data instanceof FreeTextAnnotationElement) {\n                const { data: { defaultAppearanceData: { fontSize, fontColor }, rect, rotation, id, }, textContent, textPosition, parent: { page: { pageNumber }, }, } = data;\n                // textContent is supposed to be an array of strings containing each line\n                // of text. However, it can be null or empty.\n                if (!textContent || textContent.length === 0) {\n                    // Empty annotation.\n                    return null;\n                }\n                initialData = data = {\n                    annotationType: kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT,\n                    color: Array.from(fontColor),\n                    fontSize,\n                    value: textContent.join(\"\\n\"),\n                    position: textPosition,\n                    pageIndex: pageNumber - 1,\n                    rect: rect.slice(0),\n                    rotation,\n                    id,\n                    deleted: false,\n                };\n            }\n            const editor = super.deserialize(data, parent, uiManager);\n            kendo_dateinputsCommon_cmn_chunk_js._(editor, _FreeTextEditor_fontSize, data.fontSize, \"f\");\n            // @ts-expect-error TS(2556):\n            kendo_dateinputsCommon_cmn_chunk_js._(editor, _FreeTextEditor_color, kendo_pdfjs_loader_js.Util.makeHexColor(...data.color), \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(editor, _FreeTextEditor_content, kendo_dateinputsCommon_cmn_chunk_js.a(_a$4, _a$4, \"m\", _FreeTextEditor_deserializeContent).call(_a$4, data.value), \"f\");\n            editor.annotationElementId = data.id || null;\n            kendo_dateinputsCommon_cmn_chunk_js._(editor, _FreeTextEditor_initialData, initialData, \"f\");\n            return editor;\n        }\n        /** @inheritdoc */\n        serialize(isForCopying = false) {\n            if (this.isEmpty()) {\n                return null;\n            }\n            if (this.deleted) {\n                return {\n                    pageIndex: this.pageIndex,\n                    id: this.annotationElementId,\n                    deleted: true,\n                };\n            }\n            const padding = _a$4._internalPadding * this.parentScale;\n            const rect = this.getRect(padding, padding);\n            const color = AnnotationEditor._colorManager.convert(this.isAttachedToDOM\n                ? getComputedStyle(this.editorDiv).color\n                : kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_color, \"f\"));\n            const serialized = {\n                annotationType: kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT,\n                color,\n                fontSize: kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_fontSize, \"f\"),\n                value: kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_serializeContent).call(this),\n                pageIndex: this.pageIndex,\n                rect,\n                rotation: this.rotation,\n                structTreeParentId: this._structTreeParentId,\n            };\n            if (isForCopying) {\n                // Don't add the id when copying because the pasted editor mustn't be\n                // linked to an existing annotation.\n                return serialized;\n            }\n            if (this.annotationElementId && !kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_hasElementChanged).call(this, serialized)) {\n                return null;\n            }\n            // @ts-expect-error TS(2556):\n            serialized.id = this.annotationElementId;\n            return serialized;\n        }\n        /** @inheritdoc */\n        renderAnnotationElement(annotation) {\n            const content = super.renderAnnotationElement(annotation);\n            if (this.deleted) {\n                return content;\n            }\n            const { style } = content;\n            style.fontSize = `calc(${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_fontSize, \"f\")}px * var(--scale-factor))`;\n            style.color = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_color, \"f\");\n            content.replaceChildren();\n            for (const line of kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_content, \"f\").split(\"\\n\")) {\n                const div = document.createElement(\"div\");\n                div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n                content.append(div);\n            }\n            const padding = _a$4._internalPadding * this.parentScale;\n            annotation.updateEdited({\n                rect: this.getRect(padding, padding),\n                popupContent: kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_content, \"f\"),\n            });\n            return content;\n        }\n        resetAnnotationElement(annotation) {\n            super.resetAnnotationElement(annotation);\n            annotation.resetEdited();\n        }\n        // todo: this is necessary\n        // saveDocument() has checks that test \"editor instanceof AnnotationEditor\", but they fail\n        // because AnnotationEditor from \"pdfjs-dist/legacy/build/pdf.mjs\" is not exported\n        // thus replace instances of editors with their serialized version\n        toJSON() {\n            const data = this.serialize();\n            return data;\n        }\n    }\n    _a$4 = FreeTextEditor, _FreeTextEditor_color = new WeakMap(), _FreeTextEditor_content = new WeakMap(), _FreeTextEditor_editorDivId = new WeakMap(), _FreeTextEditor_editModeAC = new WeakMap(), _FreeTextEditor_fontSize = new WeakMap(), _FreeTextEditor_initialData = new WeakMap(), _FreeTextEditor_instances = new WeakSet(), _FreeTextEditor_updateFontSize = function _FreeTextEditor_updateFontSize(fontSize) {\n        const setFontsize = size => {\n            this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n            this.translate(0, -(size - kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_fontSize, \"f\")) * this.parentScale);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_fontSize, size, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setEditorDimensions).call(this);\n        };\n        const savedFontsize = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_fontSize, \"f\");\n        this.addCommands({\n            cmd: setFontsize.bind(this, fontSize),\n            undo: setFontsize.bind(this, savedFontsize),\n            post: this._uiManager.updateUI.bind(this._uiManager, this),\n            mustExec: true,\n            type: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE,\n            overwriteIfSameType: true,\n            keepUndo: true,\n        });\n    }, _FreeTextEditor_updateColor = function _FreeTextEditor_updateColor(color) {\n        const setColor = col => {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeTextEditor_color, this.editorDiv.style.color = col, \"f\");\n        };\n        const savedColor = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_color, \"f\");\n        this.addCommands({\n            cmd: setColor.bind(this, color),\n            undo: setColor.bind(this, savedColor),\n            post: this._uiManager.updateUI.bind(this._uiManager, this),\n            mustExec: true,\n            type: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR,\n            overwriteIfSameType: true,\n            keepUndo: true,\n        });\n    }, _FreeTextEditor_extractText = function _FreeTextEditor_extractText() {\n        // We don't use innerText because there are some bugs with line breaks.\n        const buffer = [];\n        this.editorDiv.normalize();\n        for (const child of this.editorDiv.childNodes) {\n            buffer.push(kendo_dateinputsCommon_cmn_chunk_js.a(_a$4, _a$4, \"m\", _FreeTextEditor_getNodeContent).call(_a$4, child));\n        }\n        return buffer.join(\"\\n\");\n    }, _FreeTextEditor_setEditorDimensions = function _FreeTextEditor_setEditorDimensions() {\n        const [parentWidth, parentHeight] = this.parentDimensions;\n        let rect;\n        if (this.isAttachedToDOM) {\n            rect = this.div.getBoundingClientRect();\n        }\n        else {\n            // This editor isn't on screen but we need to get its dimensions, so\n            // we just insert it in the DOM, get its bounding box and then remove it.\n            const { currentLayer, div } = this;\n            const savedDisplay = div.style.display;\n            const savedVisibility = div.classList.contains(\"hidden\") || div.classList.contains(\"k-hidden\");\n            div.classList.remove(\"hidden\");\n            div.classList.remove(\"k-hidden\");\n            div.style.display = \"hidden\";\n            currentLayer.div.append(this.div);\n            rect = div.getBoundingClientRect();\n            div.remove();\n            div.style.display = savedDisplay;\n            // div.classList.toggle(\"hidden\", savedVisibility);\n            div.classList.toggle(\"k-hidden\", savedVisibility);\n        }\n        // The dimensions are relative to the rotation of the page, hence we need to\n        // take that into account (see issue #16636).\n        if (this.rotation % 180 === this.parentRotation % 180) {\n            this.width = rect.width / parentWidth;\n            this.height = rect.height / parentHeight;\n        }\n        else {\n            this.width = rect.height / parentWidth;\n            this.height = rect.width / parentHeight;\n        }\n        this.fixAndSetPosition();\n    }, _FreeTextEditor_getNodeContent = function _FreeTextEditor_getNodeContent(node) {\n        return (node.nodeType === Node.TEXT_NODE ? node.nodeValue : node.innerText).replaceAll(EOL_PATTERN, \"\");\n    }, _FreeTextEditor_setContent = function _FreeTextEditor_setContent() {\n        this.editorDiv.replaceChildren();\n        if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_content, \"f\")) {\n            return;\n        }\n        for (const line of kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_content, \"f\").split(\"\\n\")) {\n            const div = document.createElement(\"div\");\n            div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n            this.editorDiv.append(div);\n        }\n    }, _FreeTextEditor_serializeContent = function _FreeTextEditor_serializeContent() {\n        // @ts-expect-error TS(2556):\n        return kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_content, \"f\").replaceAll(\"\\xa0\", \" \");\n    }, _FreeTextEditor_deserializeContent = function _FreeTextEditor_deserializeContent(content) {\n        return content.replaceAll(\" \", \"\\xa0\");\n    }, _FreeTextEditor_hasElementChanged = function _FreeTextEditor_hasElementChanged(serialized) {\n        const { value, fontSize, color, pageIndex } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeTextEditor_initialData, \"f\");\n        return (this._hasBeenMoved ||\n            serialized.value !== value ||\n            serialized.fontSize !== fontSize ||\n            serialized.color.some((c, i) => c !== color[i]) ||\n            serialized.pageIndex !== pageIndex);\n    };\n    FreeTextEditor._freeTextDefaultContent = \"\";\n    FreeTextEditor._internalPadding = 0;\n    // static _defaultColor = null;\n    FreeTextEditor._defaultColor = \"#000000\";\n    FreeTextEditor._defaultFontSize = 10;\n    // static get _keyboardManager() {\n    //     const proto = FreeTextEditor.prototype;\n    //     const arrowChecker = self => self.isEmpty();\n    //     const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n    //     const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n    //     return shadow(\n    //         this,\n    //         \"_keyboardManager\",\n    //         new KeyboardManager([\n    //             [\n    //                 // Commit the text in case the user use ctrl+s to save the document.\n    //                 // The event must bubble in order to be caught by the viewer.\n    //                 // See bug 1831574.\n    //                 [\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"],\n    //                 proto.commitOrRemove,\n    //                 { bubbles: true },\n    //             ],\n    //             [\n    //                 [\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"],\n    //                 proto.commitOrRemove,\n    //             ],\n    //             [\n    //                 [\"ArrowLeft\", \"mac+ArrowLeft\"],\n    //                 proto._translateEmpty,\n    //                 { args: [-small, 0], checker: arrowChecker },\n    //             ],\n    //             [\n    //                 [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n    //                 proto._translateEmpty,\n    //                 { args: [-big, 0], checker: arrowChecker },\n    //             ],\n    //             [\n    //                 [\"ArrowRight\", \"mac+ArrowRight\"],\n    //                 proto._translateEmpty,\n    //                 { args: [small, 0], checker: arrowChecker },\n    //             ],\n    //             [\n    //                 [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n    //                 proto._translateEmpty,\n    //                 { args: [big, 0], checker: arrowChecker },\n    //             ],\n    //             [\n    //                 [\"ArrowUp\", \"mac+ArrowUp\"],\n    //                 proto._translateEmpty,\n    //                 { args: [0, -small], checker: arrowChecker },\n    //             ],\n    //             [\n    //                 [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n    //                 proto._translateEmpty,\n    //                 { args: [0, -big], checker: arrowChecker },\n    //             ],\n    //             [\n    //                 [\"ArrowDown\", \"mac+ArrowDown\"],\n    //                 proto._translateEmpty,\n    //                 { args: [0, small], checker: arrowChecker },\n    //             ],\n    //             [\n    //                 [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n    //                 proto._translateEmpty,\n    //                 { args: [0, big], checker: arrowChecker },\n    //             ],\n    //         ])\n    //     );\n    // }\n    FreeTextEditor._type = \"freetext\";\n    FreeTextEditor._editorType = kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT;\n\n    /* Copyright 2023 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _Outliner_instances, _Outliner_box, _Outliner_verticalEdges, _Outliner_intervals, _Outliner_getOutlines, _Outliner_binarySearch, _Outliner_insert, _Outliner_remove, _Outliner_breakEdge, _HighlightOutline_box, _HighlightOutline_outlines, _FreeOutliner_instances, _a$3, _FreeOutliner_box, _FreeOutliner_bottom, _FreeOutliner_innerMargin, _FreeOutliner_isLTR, _FreeOutliner_top, _FreeOutliner_last, _FreeOutliner_lastX, _FreeOutliner_lastY, _FreeOutliner_min, _FreeOutliner_min_dist, _FreeOutliner_scaleFactor, _FreeOutliner_thickness, _FreeOutliner_points, _FreeOutliner_MIN_DIST, _FreeOutliner_MIN_DIFF, _FreeOutliner_MIN, _FreeOutliner_getLastCoords, _FreeHighlightOutline_instances, _FreeHighlightOutline_box, _FreeHighlightOutline_bbox, _FreeHighlightOutline_innerMargin, _FreeHighlightOutline_isLTR, _FreeHighlightOutline_points, _FreeHighlightOutline_scaleFactor, _FreeHighlightOutline_outline, _FreeHighlightOutline_rescale, _FreeHighlightOutline_rescaleAndSwap, _FreeHighlightOutline_computeMinMax;\n    // import { Util } from \"../../shared/utils\";\n    class Outliner {\n        /*\n         * Construct an outliner.\n         * @param {Array<Object>} boxes - An array of axis-aligned rectangles.\n         * @param {number} borderWidth - The width of the border of the boxes, it\n         *   allows to make the boxes bigger (or smaller).\n         * @param {number} innerMargin - The margin between the boxes and the\n         *   outlines. It's important to not have a null innerMargin when we want to\n         *   draw the outline else the stroked outline could be clipped because of its\n         *   width.\n         * @param {boolean} isLTR - true if we're in LTR mode. It's used to determine\n         *   the last point of the boxes.\n         */\n        constructor(boxes, borderWidth = 0, innerMargin = 0, isLTR = true) {\n            _Outliner_instances.add(this);\n            _Outliner_box.set(this, void 0);\n            _Outliner_verticalEdges.set(this, []);\n            _Outliner_intervals.set(this, []);\n            let minX = Infinity;\n            let maxX = -Infinity;\n            let minY = Infinity;\n            let maxY = -Infinity;\n            // We round the coordinates to slightly reduce the number of edges in the\n            // final outlines.\n            const NUMBER_OF_DIGITS = 4;\n            const EPSILON = Math.pow(10, -NUMBER_OF_DIGITS);\n            // The coordinates of the boxes are in the page coordinate system.\n            for (const { x, y, width, height } of boxes) {\n                const x1 = Math.floor((x - borderWidth) / EPSILON) * EPSILON;\n                const x2 = Math.ceil((x + width + borderWidth) / EPSILON) * EPSILON;\n                const y1 = Math.floor((y - borderWidth) / EPSILON) * EPSILON;\n                const y2 = Math.ceil((y + height + borderWidth) / EPSILON) * EPSILON;\n                const left = [x1, y1, y2, true];\n                const right = [x2, y1, y2, false];\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_verticalEdges, \"f\").push(left, right);\n                minX = Math.min(minX, x1);\n                maxX = Math.max(maxX, x2);\n                minY = Math.min(minY, y1);\n                maxY = Math.max(maxY, y2);\n            }\n            const bboxWidth = maxX - minX + 2 * innerMargin;\n            const bboxHeight = maxY - minY + 2 * innerMargin;\n            const shiftedMinX = minX - innerMargin;\n            const shiftedMinY = minY - innerMargin;\n            const lastEdge = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_verticalEdges, \"f\").at(isLTR ? -1 : -2);\n            const lastPoint = [lastEdge[0], lastEdge[2]];\n            // Convert the coordinates of the edges into box coordinates.\n            for (const edge of kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_verticalEdges, \"f\")) {\n                const [x, y1, y2] = edge;\n                edge[0] = (x - shiftedMinX) / bboxWidth;\n                edge[1] = (y1 - shiftedMinY) / bboxHeight;\n                edge[2] = (y2 - shiftedMinY) / bboxHeight;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _Outliner_box, {\n                x: shiftedMinX,\n                y: shiftedMinY,\n                width: bboxWidth,\n                height: bboxHeight,\n                lastPoint\n            }, \"f\");\n        }\n        getOutlines() {\n            // We begin to sort lexicographically the vertical edges by their abscissa,\n            // and then by their ordinate.\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_verticalEdges, \"f\").sort((a, b) => a[0] - b[0] || a[1] - b[1] || a[2] - b[2]);\n            // We're now using a sweep line algorithm to find the outlines.\n            // We start with the leftmost vertical edge, and we're going to iterate\n            // over all the vertical edges from left to right.\n            // Each time we encounter a left edge, we're going to insert the interval\n            // [y1, y2] in the set of intervals.\n            // This set of intervals is used to break the vertical edges into chunks:\n            // we only take the part of the vertical edge that isn't in the union of\n            // the intervals.\n            const outlineVerticalEdges = [];\n            for (const edge of kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_verticalEdges, \"f\")) {\n                if (edge[3]) {\n                    // Left edge.\n                    outlineVerticalEdges.push(...kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_breakEdge).call(this, edge));\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_insert).call(this, edge);\n                }\n                else {\n                    // Right edge.\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_remove).call(this, edge);\n                    outlineVerticalEdges.push(...kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_breakEdge).call(this, edge));\n                }\n            }\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_getOutlines).call(this, outlineVerticalEdges);\n        }\n    }\n    _Outliner_box = new WeakMap(), _Outliner_verticalEdges = new WeakMap(), _Outliner_intervals = new WeakMap(), _Outliner_instances = new WeakSet(), _Outliner_getOutlines = function _Outliner_getOutlines(outlineVerticalEdges) {\n        const edges = [];\n        const allEdges = new Set();\n        for (const edge of outlineVerticalEdges) {\n            const [x, y1, y2] = edge;\n            edges.push([x, y1, edge], [x, y2, edge]);\n        }\n        // We sort lexicographically the vertices of each edge by their ordinate and\n        // by their abscissa.\n        // Every pair (v_2i, v_{2i + 1}) of vertices defines a horizontal edge.\n        // So for every vertical edge, we're going to add the two vertical edges\n        // which are connected to it through a horizontal edge.\n        edges.sort((a, b) => a[1] - b[1] || a[0] - b[0]);\n        for (let i = 0, ii = edges.length; i < ii; i += 2) {\n            const edge1 = edges[i][2];\n            const edge2 = edges[i + 1][2];\n            edge1.push(edge2);\n            edge2.push(edge1);\n            allEdges.add(edge1);\n            allEdges.add(edge2);\n        }\n        const outlines = [];\n        let outline;\n        while (allEdges.size > 0) {\n            const edge = allEdges.values().next().value;\n            let [x, y1, y2, edge1, edge2] = edge;\n            allEdges.delete(edge);\n            let lastPointX = x;\n            let lastPointY = y1;\n            outline = [x, y2];\n            outlines.push(outline);\n            while (true) {\n                let e;\n                if (allEdges.has(edge1)) {\n                    e = edge1;\n                }\n                else if (allEdges.has(edge2)) {\n                    e = edge2;\n                }\n                else {\n                    break;\n                }\n                allEdges.delete(e);\n                [x, y1, y2, edge1, edge2] = e;\n                if (lastPointX !== x) {\n                    outline.push(lastPointX, lastPointY, x, lastPointY === y1 ? y1 : y2);\n                    lastPointX = x;\n                }\n                lastPointY = lastPointY === y1 ? y2 : y1;\n            }\n            outline.push(lastPointX, lastPointY);\n        }\n        return new HighlightOutline(outlines, kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_box, \"f\"));\n    }, _Outliner_binarySearch = function _Outliner_binarySearch(y) {\n        const array = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\");\n        let start = 0;\n        let end = array.length - 1;\n        while (start <= end) {\n            const middle = (start + end) >> 1;\n            const y1 = array[middle][0];\n            if (y1 === y) {\n                return middle;\n            }\n            if (y1 < y) {\n                start = middle + 1;\n            }\n            else {\n                end = middle - 1;\n            }\n        }\n        return end + 1;\n    }, _Outliner_insert = function _Outliner_insert([, y1, y2]) {\n        const index = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_binarySearch).call(this, y1);\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\").splice(index, 0, [y1, y2]);\n    }, _Outliner_remove = function _Outliner_remove([, y1, y2]) {\n        const index = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_binarySearch).call(this, y1);\n        for (let i = index; i < kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\").length; i++) {\n            const [start, end] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\")[i];\n            if (start !== y1) {\n                break;\n            }\n            if (start === y1 && end === y2) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\").splice(i, 1);\n                return;\n            }\n        }\n        for (let i = index - 1; i >= 0; i--) {\n            const [start, end] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\")[i];\n            if (start !== y1) {\n                break;\n            }\n            if (start === y1 && end === y2) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\").splice(i, 1);\n                return;\n            }\n        }\n    }, _Outliner_breakEdge = function _Outliner_breakEdge(edge) {\n        const [x, y1, y2] = edge;\n        const results = [[x, y1, y2]];\n        const index = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_instances, \"m\", _Outliner_binarySearch).call(this, y2);\n        for (let i = 0; i < index; i++) {\n            const [start, end] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Outliner_intervals, \"f\")[i];\n            for (let j = 0, jj = results.length; j < jj; j++) {\n                const [, y3, y4] = results[j];\n                if (end <= y3 || y4 <= start) {\n                    // There is no intersection between the interval and the edge, hence\n                    // we keep it as is.\n                    continue;\n                }\n                if (y3 >= start) {\n                    if (y4 > end) {\n                        results[j][1] = end;\n                    }\n                    else {\n                        if (jj === 1) {\n                            return [];\n                        }\n                        // The edge is included in the interval, hence we remove it.\n                        results.splice(j, 1);\n                        j--;\n                        jj--;\n                    }\n                    continue;\n                }\n                results[j][2] = start;\n                if (y4 > end) {\n                    results.push([x, end, y4]);\n                }\n            }\n        }\n        return results;\n    };\n    class Outline {\n        /**\n         * @returns {string} The SVG path of the outline.\n         */\n        toSVGPath() {\n            throw new Error(\"Abstract method `toSVGPath` must be implemented.\");\n        }\n        /**\n         * @type {Object|null} The bounding box of the outline.\n         */\n        get box() {\n            throw new Error(\"Abstract getter `box` must be implemented.\");\n        }\n        // serialize() {\n        // serialize(_bbox, _rotation) {\n        serialize([blX, blY, trX, trY]) {\n            // throw new Error(\"Abstract method `serialize` must be implemented.\");\n            if (!blX || !blY || !trX || !trY) {\n                return;\n            }\n        }\n        get free() {\n            return this instanceof FreeHighlightOutline;\n            // return false;\n        }\n    }\n    class HighlightOutline extends Outline {\n        constructor(outlines, box) {\n            super();\n            _HighlightOutline_box.set(this, void 0);\n            _HighlightOutline_outlines.set(this, void 0);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightOutline_outlines, outlines, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightOutline_box, box, \"f\");\n        }\n        toSVGPath() {\n            const buffer = [];\n            for (const polygon of kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightOutline_outlines, \"f\")) {\n                let [prevX, prevY] = polygon;\n                buffer.push(`M${prevX} ${prevY}`);\n                for (let i = 2; i < polygon.length; i += 2) {\n                    const x = polygon[i];\n                    const y = polygon[i + 1];\n                    if (x === prevX) {\n                        buffer.push(`V${y}`);\n                        prevY = y;\n                    }\n                    else if (y === prevY) {\n                        buffer.push(`H${x}`);\n                        prevX = x;\n                    }\n                }\n                buffer.push(\"Z\");\n            }\n            return buffer.join(\" \");\n        }\n        /*\n         * Serialize the outlines into the PDF page coordinate system.\n         * @param {Array<number>} _bbox - the bounding box of the annotation.\n         * @param {number} _rotation - the rotation of the annotation.\n         * @returns {Array<Array<number>>}\n         */\n        // serialize([blX, blY, trX, trY], _rotation) {\n        serialize([blX, blY, trX, trY]) {\n            const outlines = [];\n            const width = trX - blX;\n            const height = trY - blY;\n            for (const outline of kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightOutline_outlines, \"f\")) {\n                const points = new Array(outline.length);\n                for (let i = 0; i < outline.length; i += 2) {\n                    points[i] = blX + outline[i] * width;\n                    points[i + 1] = trY - outline[i + 1] * height;\n                }\n                outlines.push(points);\n            }\n            return outlines;\n        }\n        get box() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightOutline_box, \"f\");\n        }\n    }\n    _HighlightOutline_box = new WeakMap(), _HighlightOutline_outlines = new WeakMap();\n    class FreeOutliner {\n        constructor({ x, y }, box, scaleFactor, thickness, isLTR, innerMargin = 0) {\n            _FreeOutliner_instances.add(this);\n            _FreeOutliner_box.set(this, void 0);\n            _FreeOutliner_bottom.set(this, []);\n            _FreeOutliner_innerMargin.set(this, void 0);\n            _FreeOutliner_isLTR.set(this, void 0);\n            _FreeOutliner_top.set(this, []);\n            // The first 6 elements are the last 3 points of the top part of the outline.\n            // The next 6 elements are the last 3 points of the line.\n            // The next 6 elements are the last 3 points of the bottom part of the\n            // outline.\n            // We track the last 3 points in order to be able to:\n            //  - compute the normal of the line,\n            //  - compute the control points of the quadratic Bézier curve.\n            _FreeOutliner_last.set(this, new Float64Array(18));\n            _FreeOutliner_lastX.set(this, void 0);\n            _FreeOutliner_lastY.set(this, void 0);\n            _FreeOutliner_min.set(this, void 0);\n            _FreeOutliner_min_dist.set(this, void 0);\n            _FreeOutliner_scaleFactor.set(this, void 0);\n            _FreeOutliner_thickness.set(this, void 0);\n            _FreeOutliner_points.set(this, []);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_box, box, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_thickness, thickness * scaleFactor, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_isLTR, isLTR, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set([NaN, NaN, NaN, NaN, x, y], 6);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_innerMargin, innerMargin, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_min_dist, kendo_dateinputsCommon_cmn_chunk_js.a(_a$3, _a$3, \"f\", _FreeOutliner_MIN_DIST) * scaleFactor, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_min, kendo_dateinputsCommon_cmn_chunk_js.a(_a$3, _a$3, \"f\", _FreeOutliner_MIN) * scaleFactor, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_scaleFactor, scaleFactor, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_points, \"f\").push(x, y);\n        }\n        get free() {\n            return true;\n        }\n        isEmpty() {\n            // When we add a second point then this.#last.slice(6) will be something\n            // like [NaN, NaN, firstX, firstY, secondX, secondY,...] so having a NaN\n            // at index 8 means that we've only one point.\n            return isNaN(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[8]);\n        }\n        add({ x, y }) {\n            var _b;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_lastX, x, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeOutliner_lastY, y, \"f\");\n            const [layerX, layerY, layerWidth, layerHeight] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_box, \"f\");\n            let [x1, y1, x2, y2] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(8, 12);\n            const diffX = x - x2;\n            const diffY = y - y2;\n            const d = Math.hypot(diffX, diffY);\n            if (d < kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_min, \"f\")) {\n                // The idea is to avoid garbage points around the last point.\n                // When the points are too close, it just leads to bad normal vectors and\n                // control points.\n                return false;\n            }\n            const diffD = d - kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_min_dist, \"f\");\n            const K = diffD / d;\n            const shiftX = K * diffX;\n            const shiftY = K * diffY;\n            // We update the last 3 points of the line.\n            let x0 = x1;\n            let y0 = y1;\n            x1 = x2;\n            y1 = y2;\n            x2 += shiftX;\n            y2 += shiftY;\n            // We keep track of the points in order to be able to compute the focus\n            // outline.\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_points, \"f\")) === null || _b === void 0 ? void 0 : _b.push(x, y);\n            // Create the normal unit vector.\n            // |(shiftX, shiftY)| = |K| * |(diffX, diffY)| = |K| * d = diffD.\n            const nX = -shiftY / diffD;\n            const nY = shiftX / diffD;\n            const thX = nX * kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_thickness, \"f\");\n            const thY = nY * kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_thickness, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(2, 8), 0);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set([x2 + thX, y2 + thY], 4);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(14, 18), 12);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set([x2 - thX, y2 - thY], 16);\n            if (isNaN(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[6])) {\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_top, \"f\").length === 0) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set([x1 + thX, y1 + thY], 2);\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_top, \"f\").push(NaN, NaN, NaN, NaN, (x1 + thX - layerX) / layerWidth, (y1 + thY - layerY) / layerHeight);\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set([x1 - thX, y1 - thY], 14);\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_bottom, \"f\").push(NaN, NaN, NaN, NaN, (x1 - thX - layerX) / layerWidth, (y1 - thY - layerY) / layerHeight);\n                }\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set([x0, y0, x1, y1, x2, y2], 6);\n                return !this.isEmpty();\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").set([x0, y0, x1, y1, x2, y2], 6);\n            const angle = Math.abs(Math.atan2(y0 - y1, x0 - x1) - Math.atan2(shiftY, shiftX));\n            if (angle < Math.PI / 2) {\n                // In order to avoid some possible artifacts, we're going to use the a\n                // straight line instead of a quadratic Bézier curve.\n                [x1, y1, x2, y2] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(2, 6);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_top, \"f\").push(NaN, NaN, NaN, NaN, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n                [x1, y1, x0, y0] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(14, 18);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_bottom, \"f\").push(NaN, NaN, NaN, NaN, ((x0 + x1) / 2 - layerX) / layerWidth, ((y0 + y1) / 2 - layerY) / layerHeight);\n                return true;\n            }\n            // Control points and the final point for the quadratic Bézier curve.\n            [x0, y0, x1, y1, x2, y2] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(0, 6);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_top, \"f\").push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n            [x2, y2, x1, y1, x0, y0] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(12, 18);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_bottom, \"f\").push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n            return true;\n        }\n        toSVGPath() {\n            if (this.isEmpty()) {\n                // We've only one point.\n                return \"\";\n            }\n            const top = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_top, \"f\");\n            const bottom = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_bottom, \"f\");\n            const lastTop = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(4, 6);\n            const lastBottom = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(16, 18);\n            const [x, y, width, height] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_box, \"f\");\n            const [lastTopX, lastTopY, lastBottomX, lastBottomY] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_instances, \"m\", _FreeOutliner_getLastCoords).call(this);\n            if (isNaN(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[6]) && !this.isEmpty()) {\n                // We've only two points.\n                return `M${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[2] - x) / width} ${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[3] - y) / height} L${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[4] - x) / width} ${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[5] - y) / height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[16] - x) / width} ${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[17] - y) / height} L${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[14] - x) / width} ${(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\")[15] - y) / height} Z`;\n            }\n            const buffer = [];\n            buffer.push(`M${top[4]} ${top[5]}`);\n            for (let i = 6; i < top.length; i += 6) {\n                if (isNaN(top[i])) {\n                    buffer.push(`L${top[i + 4]} ${top[i + 5]}`);\n                }\n                else {\n                    buffer.push(`C${top[i]} ${top[i + 1]} ${top[i + 2]} ${top[i + 3]} ${top[i + 4]} ${top[i + 5]}`);\n                }\n            }\n            buffer.push(`L${(lastTop[0] - x) / width} ${(lastTop[1] - y) / height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(lastBottom[0] - x) / width} ${(lastBottom[1] - y) / height}`);\n            for (let i = bottom.length - 6; i >= 6; i -= 6) {\n                if (isNaN(bottom[i])) {\n                    buffer.push(`L${bottom[i + 4]} ${bottom[i + 5]}`);\n                }\n                else {\n                    buffer.push(`C${bottom[i]} ${bottom[i + 1]} ${bottom[i + 2]} ${bottom[i + 3]} ${bottom[i + 4]} ${bottom[i + 5]}`);\n                }\n            }\n            buffer.push(`L${bottom[4]} ${bottom[5]} Z`);\n            return buffer.join(\" \");\n        }\n        getOutlines() {\n            var _b, _c;\n            const top = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_top, \"f\");\n            const bottom = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_bottom, \"f\");\n            const last = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\");\n            const lastTop = last.subarray(4, 6);\n            const lastBottom = last.subarray(16, 18);\n            const [layerX, layerY, layerWidth, layerHeight] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_box, \"f\");\n            const points = new Float64Array(((_c = (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_points, \"f\")) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0) + 2);\n            for (let i = 0, ii = points.length - 2; i < ii; i += 2) {\n                points[i] = (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_points, \"f\")[i] - layerX) / layerWidth;\n                points[i + 1] = (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_points, \"f\")[i + 1] - layerY) / layerHeight;\n            }\n            points[points.length - 2] = (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_lastX, \"f\") - layerX) / layerWidth;\n            points[points.length - 1] = (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_lastY, \"f\") - layerY) / layerHeight;\n            const [lastTopX, lastTopY, lastBottomX, lastBottomY] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_instances, \"m\", _FreeOutliner_getLastCoords).call(this);\n            if (isNaN(last[6]) && !this.isEmpty()) {\n                // We've only two points.\n                const outlineObj = new Float64Array(36);\n                outlineObj.set([\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    (last[2] - layerX) / layerWidth,\n                    (last[3] - layerY) / layerHeight,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    (last[4] - layerX) / layerWidth,\n                    (last[5] - layerY) / layerHeight,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    lastTopX,\n                    lastTopY,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    lastBottomX,\n                    lastBottomY,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    (last[16] - layerX) / layerWidth,\n                    (last[17] - layerY) / layerHeight,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    (last[14] - layerX) / layerWidth,\n                    (last[15] - layerY) / layerHeight,\n                ], 0);\n                return new FreeHighlightOutline(outlineObj, points, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_box, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_scaleFactor, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_innerMargin, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_isLTR, \"f\"));\n            }\n            const outline = new Float64Array(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_top, \"f\").length + 24 + kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_bottom, \"f\").length);\n            let N = top.length;\n            for (let i = 0; i < N; i += 2) {\n                if (isNaN(top[i])) {\n                    outline[i] = outline[i + 1] = NaN;\n                    continue;\n                }\n                outline[i] = top[i];\n                outline[i + 1] = top[i + 1];\n            }\n            outline.set([\n                NaN,\n                NaN,\n                NaN,\n                NaN,\n                (lastTop[0] - layerX) / layerWidth,\n                (lastTop[1] - layerY) / layerHeight,\n                NaN,\n                NaN,\n                NaN,\n                NaN,\n                lastTopX,\n                lastTopY,\n                NaN,\n                NaN,\n                NaN,\n                NaN,\n                lastBottomX,\n                lastBottomY,\n                NaN,\n                NaN,\n                NaN,\n                NaN,\n                (lastBottom[0] - layerX) / layerWidth,\n                (lastBottom[1] - layerY) / layerHeight,\n            ], N);\n            N += 24;\n            for (let i = bottom.length - 6; i >= 6; i -= 6) {\n                for (let j = 0; j < 6; j += 2) {\n                    if (isNaN(bottom[i + j])) {\n                        outline[N] = outline[N + 1] = NaN;\n                        N += 2;\n                        continue;\n                    }\n                    outline[N] = bottom[i + j];\n                    outline[N + 1] = bottom[i + j + 1];\n                    N += 2;\n                }\n            }\n            outline.set([NaN, NaN, NaN, NaN, bottom[4], bottom[5]], N);\n            return new FreeHighlightOutline(outline, points, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_box, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_scaleFactor, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_innerMargin, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_isLTR, \"f\"));\n        }\n    }\n    _a$3 = FreeOutliner, _FreeOutliner_box = new WeakMap(), _FreeOutliner_bottom = new WeakMap(), _FreeOutliner_innerMargin = new WeakMap(), _FreeOutliner_isLTR = new WeakMap(), _FreeOutliner_top = new WeakMap(), _FreeOutliner_last = new WeakMap(), _FreeOutliner_lastX = new WeakMap(), _FreeOutliner_lastY = new WeakMap(), _FreeOutliner_min = new WeakMap(), _FreeOutliner_min_dist = new WeakMap(), _FreeOutliner_scaleFactor = new WeakMap(), _FreeOutliner_thickness = new WeakMap(), _FreeOutliner_points = new WeakMap(), _FreeOutliner_instances = new WeakSet(), _FreeOutliner_getLastCoords = function _FreeOutliner_getLastCoords() {\n        const lastTop = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(4, 6);\n        const lastBottom = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_last, \"f\").subarray(16, 18);\n        const [x, y, width, height] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_box, \"f\");\n        return [\n            (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_lastX, \"f\") + (lastTop[0] - lastBottom[0]) / 2 - x) / width,\n            (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_lastY, \"f\") + (lastTop[1] - lastBottom[1]) / 2 - y) / height,\n            (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_lastX, \"f\") + (lastBottom[0] - lastTop[0]) / 2 - x) / width,\n            (kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeOutliner_lastY, \"f\") + (lastBottom[1] - lastTop[1]) / 2 - y) / height,\n        ];\n    };\n    _FreeOutliner_MIN_DIST = { value: 8 };\n    _FreeOutliner_MIN_DIFF = { value: 2 };\n    _FreeOutliner_MIN = { value: kendo_dateinputsCommon_cmn_chunk_js.a(_a$3, _a$3, \"f\", _FreeOutliner_MIN_DIST) + kendo_dateinputsCommon_cmn_chunk_js.a(_a$3, _a$3, \"f\", _FreeOutliner_MIN_DIFF) };\n    class FreeHighlightOutline extends Outline {\n        constructor(outline, points, box, scaleFactor, innerMargin, isLTR) {\n            super();\n            _FreeHighlightOutline_instances.add(this);\n            _FreeHighlightOutline_box.set(this, void 0);\n            _FreeHighlightOutline_bbox.set(this, null);\n            _FreeHighlightOutline_innerMargin.set(this, void 0);\n            _FreeHighlightOutline_isLTR.set(this, void 0);\n            _FreeHighlightOutline_points.set(this, void 0);\n            _FreeHighlightOutline_scaleFactor.set(this, void 0);\n            _FreeHighlightOutline_outline.set(this, void 0);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeHighlightOutline_outline, outline, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeHighlightOutline_points, points, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeHighlightOutline_box, box, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeHighlightOutline_scaleFactor, scaleFactor, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeHighlightOutline_innerMargin, innerMargin, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeHighlightOutline_isLTR, isLTR, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_computeMinMax).call(this, isLTR);\n            const { x, y, width, height } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_bbox, \"f\");\n            for (let i = 0, ii = outline.length; i < ii; i += 2) {\n                outline[i] = (outline[i] - x) / width;\n                outline[i + 1] = (outline[i + 1] - y) / height;\n            }\n            for (let i = 0, ii = points.length; i < ii; i += 2) {\n                points[i] = (points[i] - x) / width;\n                points[i + 1] = (points[i + 1] - y) / height;\n            }\n        }\n        toSVGPath() {\n            const buffer = [`M${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[4]} ${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[5]}`];\n            for (let i = 6, ii = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\").length; i < ii; i += 6) {\n                if (isNaN(kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i])) {\n                    buffer.push(`L${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i + 4]} ${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i + 5]}`);\n                    continue;\n                }\n                buffer.push(`C${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i]} ${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i + 1]} ${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i + 2]} ${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i + 3]} ${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i + 4]} ${kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\")[i + 5]}`);\n            }\n            buffer.push(\"Z\");\n            return buffer.join(\" \");\n        }\n        // @ts-expect-error(TS:2556)\n        serialize([blX, blY, trX, trY], rotation) {\n            const width = trX - blX;\n            const height = trY - blY;\n            let outline;\n            let points;\n            switch (rotation) {\n                case 0:\n                    outline = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\"), blX, trY, width, -height);\n                    points = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\"), blX, trY, width, -height);\n                    break;\n                case 90:\n                    outline = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\"), blX, blY, width, height);\n                    points = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\"), blX, blY, width, height);\n                    break;\n                case 180:\n                    outline = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\"), trX, blY, -width, height);\n                    points = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\"), trX, blY, -width, height);\n                    break;\n                case 270:\n                    outline = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\"), trX, trY, -width, -height);\n                    points = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\"), trX, trY, -width, -height);\n                    break;\n                default: break;\n            }\n            return { outline: Array.from(outline), points: [Array.from(points)] };\n        }\n        get box() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_bbox, \"f\");\n        }\n        getNewOutline(thickness, innerMargin) {\n            // Build the outline of the highlight to use as the focus outline.\n            const { x, y, width, height } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_bbox, \"f\");\n            const [layerX, layerY, layerWidth, layerHeight] = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_box, \"f\");\n            const sx = width * layerWidth;\n            const sy = height * layerHeight;\n            const tx = x * layerWidth + layerX;\n            const ty = y * layerHeight + layerY;\n            const outliner = new FreeOutliner({\n                x: kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\")[0] * sx + tx,\n                y: kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\")[1] * sy + ty,\n            }, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_box, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_scaleFactor, \"f\"), thickness, kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_isLTR, \"f\"), innerMargin !== null && innerMargin !== void 0 ? innerMargin : kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_innerMargin, \"f\"));\n            for (let i = 2; i < kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\").length; i += 2) {\n                outliner.add({\n                    x: kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\")[i] * sx + tx,\n                    y: kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_points, \"f\")[i + 1] * sy + ty,\n                });\n            }\n            return outliner.getOutlines();\n        }\n    }\n    _FreeHighlightOutline_box = new WeakMap(), _FreeHighlightOutline_bbox = new WeakMap(), _FreeHighlightOutline_innerMargin = new WeakMap(), _FreeHighlightOutline_isLTR = new WeakMap(), _FreeHighlightOutline_points = new WeakMap(), _FreeHighlightOutline_scaleFactor = new WeakMap(), _FreeHighlightOutline_outline = new WeakMap(), _FreeHighlightOutline_instances = new WeakSet(), _FreeHighlightOutline_rescale = function _FreeHighlightOutline_rescale(src, tx, ty, sx, sy) {\n        const dest = new Float64Array(src.length);\n        for (let i = 0, ii = src.length; i < ii; i += 2) {\n            dest[i] = tx + src[i] * sx;\n            dest[i + 1] = ty + src[i + 1] * sy;\n        }\n        return dest;\n    }, _FreeHighlightOutline_rescaleAndSwap = function _FreeHighlightOutline_rescaleAndSwap(src, tx, ty, sx, sy) {\n        const dest = new Float64Array(src.length);\n        for (let i = 0, ii = src.length; i < ii; i += 2) {\n            dest[i] = tx + src[i + 1] * sx;\n            dest[i + 1] = ty + src[i] * sy;\n        }\n        return dest;\n    }, _FreeHighlightOutline_computeMinMax = function _FreeHighlightOutline_computeMinMax(isLTR) {\n        const outline = kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_outline, \"f\");\n        let lastX = outline[4];\n        let lastY = outline[5];\n        let minX = lastX;\n        let minY = lastY;\n        let maxX = lastX;\n        let maxY = lastY;\n        let lastPointX = lastX;\n        let lastPointY = lastY;\n        const ltrCallback = isLTR ? Math.max : Math.min;\n        for (let i = 6, ii = outline.length; i < ii; i += 6) {\n            if (isNaN(outline[i])) {\n                minX = Math.min(minX, outline[i + 4]);\n                minY = Math.min(minY, outline[i + 5]);\n                maxX = Math.max(maxX, outline[i + 4]);\n                maxY = Math.max(maxY, outline[i + 5]);\n                if (lastPointY < outline[i + 5]) {\n                    lastPointX = outline[i + 4];\n                    lastPointY = outline[i + 5];\n                }\n                else if (lastPointY === outline[i + 5]) {\n                    lastPointX = ltrCallback(lastPointX, outline[i + 4]);\n                }\n            }\n            else {\n                const bbox = kendo_pdfjs_loader_js.Util.bezierBoundingBox(lastX, lastY, \n                // @ts-expect-error(TS:2556)\n                ...outline.slice(i, i + 6));\n                minX = Math.min(minX, bbox[0]);\n                minY = Math.min(minY, bbox[1]);\n                maxX = Math.max(maxX, bbox[2]);\n                maxY = Math.max(maxY, bbox[3]);\n                if (lastPointY < bbox[3]) {\n                    lastPointX = bbox[2];\n                    lastPointY = bbox[3];\n                }\n                else if (lastPointY === bbox[3]) {\n                    lastPointX = ltrCallback(lastPointX, bbox[2]);\n                }\n            }\n            lastX = outline[i + 4];\n            lastY = outline[i + 5];\n        }\n        const x = minX - kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_innerMargin, \"f\"), y = minY - kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_innerMargin, \"f\"), width = maxX - minX + 2 * kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_innerMargin, \"f\"), height = maxY - minY + 2 * kendo_dateinputsCommon_cmn_chunk_js.a(this, _FreeHighlightOutline_innerMargin, \"f\");\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _FreeHighlightOutline_bbox, { x, y, width, height, lastPoint: [lastPointX, lastPointY] }, \"f\");\n    };\n    // export { Outliner };\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _HighlightEditor_instances, _a$2, _HighlightEditor_anchorNode, _HighlightEditor_anchorOffset, _HighlightEditor_boxes, _HighlightEditor_clipPathId, _HighlightEditor_focusOutlines, _HighlightEditor_focusNode, _HighlightEditor_focusOffset, _HighlightEditor_highlightDiv, _HighlightEditor_highlightOutlines, _HighlightEditor_id, _HighlightEditor_isFreeHighlight, _HighlightEditor_lastPoint, _HighlightEditor_opacity, _HighlightEditor_outlineId, _HighlightEditor_text, _HighlightEditor_thickness, _HighlightEditor_methodOfCreation, _HighlightEditor_createOutlines, _HighlightEditor_createFreeOutlines, _HighlightEditor_updateColor, _HighlightEditor_updateThickness, _HighlightEditor_cleanDrawLayer, _HighlightEditor_addToDrawLayer, _HighlightEditor_rotateBbox, _HighlightEditor_keydown, _HighlightEditor_setCaret, _HighlightEditor_getRotation, _HighlightEditor_serializeBoxes, _HighlightEditor_serializeOutlines, _HighlightEditor_highlightMove, _HighlightEditor_endHighlight;\n    // import { ColorPicker } from \"./color_picker.js\";\n    // import { noContextMenu } from \"../../shared/display_utils\";\n    /**\n     * Basic draw editor in order to generate an Highlight annotation.\n     */\n    class HighlightEditor extends AnnotationEditor {\n        // static get _keyboardManager() {\n        //     const proto = HighlightEditor.prototype;\n        //     return shadow(\n        //         this,\n        //         \"_keyboardManager\",\n        //         new KeyboardManager([\n        //             [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._moveCaret, { args: [0] }],\n        //             [[\"ArrowRight\", \"mac+ArrowRight\"], proto._moveCaret, { args: [1] }],\n        //             [[\"ArrowUp\", \"mac+ArrowUp\"], proto._moveCaret, { args: [2] }],\n        //             [[\"ArrowDown\", \"mac+ArrowDown\"], proto._moveCaret, { args: [3] }],\n        //         ])\n        //     );\n        // }\n        constructor(params) {\n            super(Object.assign(Object.assign({}, params), { name: \"k-highlight-editor highlightEditor\" }));\n            _HighlightEditor_instances.add(this);\n            // todo: props\n            this.color = \"\";\n            // parent = null;\n            // width = null;\n            // height = null;\n            // x = null;\n            // y = null;\n            // todo: props\n            _HighlightEditor_anchorNode.set(this, null);\n            _HighlightEditor_anchorOffset.set(this, 0);\n            _HighlightEditor_boxes.set(this, void 0);\n            _HighlightEditor_clipPathId.set(this, null);\n            // #colorPicker = null;\n            _HighlightEditor_focusOutlines.set(this, null);\n            _HighlightEditor_focusNode.set(this, null);\n            _HighlightEditor_focusOffset.set(this, 0);\n            _HighlightEditor_highlightDiv.set(this, null);\n            _HighlightEditor_highlightOutlines.set(this, null);\n            _HighlightEditor_id.set(this, null);\n            _HighlightEditor_isFreeHighlight.set(this, false);\n            _HighlightEditor_lastPoint.set(this, null);\n            _HighlightEditor_opacity.set(this, void 0);\n            _HighlightEditor_outlineId.set(this, null);\n            _HighlightEditor_text.set(this, \"\");\n            _HighlightEditor_thickness.set(this, void 0);\n            _HighlightEditor_methodOfCreation.set(this, \"\");\n            this.color = params.color || _a$2._defaultColor;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_thickness, params.thickness || _a$2._defaultThickness, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_opacity, params.opacity || _a$2._defaultOpacity, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_boxes, params.boxes || null, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_methodOfCreation, params.methodOfCreation || \"\", \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_text, params.text || \"\", \"f\");\n            this._isDraggable = false;\n            if (params.highlightId > -1) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_isFreeHighlight, true, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_createFreeOutlines).call(this, params);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this);\n            }\n            else {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_anchorNode, params.anchorNode, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_anchorOffset, params.anchorOffset, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_focusNode, params.focusNode, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_focusOffset, params.focusOffset, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_createOutlines).call(this);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this);\n                this.rotate(this.rotation);\n            }\n        }\n        /** @inheritdoc */\n        get telemetryInitialData() {\n            return {\n                action: \"added\",\n                type: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\") ? \"free_highlight\" : \"highlight\",\n                color: this._uiManager.highlightColorNames.get(this.color),\n                thickness: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_thickness, \"f\"),\n                methodOfCreation: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_methodOfCreation, \"f\"),\n            };\n        }\n        /** @inheritdoc */\n        get telemetryFinalData() {\n            return {\n                type: \"highlight\",\n                color: this._uiManager.highlightColorNames.get(this.color),\n            };\n        }\n        static computeTelemetryFinalData(data) {\n            // We want to know how many colors have been used.\n            return { numberOfColors: data.get(\"color\").size };\n        }\n        /** @inheritdoc */\n        static initialize(l10n, uiManager) {\n            var _b, _c, _d, _e;\n            AnnotationEditor.initialize(l10n, uiManager, {});\n            _a$2._defaultColor || (_a$2._defaultColor = \n            // uiManager.highlightColors?.values().next().value || \"#fff066\";\n            // uiManager.highlightColors?.values().next().value || \"#ffff00\";\n            ((_e = (_d = (_c = (_b = uiManager.viewer) === null || _b === void 0 ? void 0 : _b.options) === null || _c === void 0 ? void 0 : _c.annotations) === null || _d === void 0 ? void 0 : _d.highlight) === null || _e === void 0 ? void 0 : _e.color) || \"#ffff00\");\n        }\n        /** @inheritdoc */\n        static updateDefaultParams(type, value) {\n            switch (type) {\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:\n                    _a$2._defaultColor = value;\n                    break;\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:\n                    _a$2._defaultThickness = value;\n                    break;\n                default: break;\n            }\n        }\n        /** @inheritdoc */\n        // translateInPage(x, y) { }\n        translateInPage() { }\n        /** @inheritdoc */\n        get toolbarPosition() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_lastPoint, \"f\");\n        }\n        /** @inheritdoc */\n        updateParams(type, value) {\n            switch (type) {\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR:\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_updateColor).call(this, value);\n                    break;\n                case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_updateThickness).call(this, value);\n                    break;\n                default: break;\n            }\n        }\n        static get defaultPropertiesToUpdate() {\n            return [\n                [\n                    kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR,\n                    _a$2._defaultColor,\n                ],\n                [\n                    kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,\n                    _a$2._defaultThickness,\n                ],\n            ];\n        }\n        /** @inheritdoc */\n        get propertiesToUpdate() {\n            return [\n                [\n                    kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n                    this.color || _a$2._defaultColor,\n                ],\n                [\n                    kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_thickness, \"f\") || _a$2._defaultThickness,\n                ],\n                [kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_FREE, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\")],\n            ];\n        }\n        /** @inheritdoc */\n        // async addEditToolbar() {\n        //     // const toolbar = await super.addEditToolbar();\n        //     // if (!toolbar) {\n        //     //     return null;\n        //     // }\n        //     // if (this._uiManager.highlightColors) {\n        //     //     // this.#colorPicker = new ColorPicker({ editor: this });\n        //     //     // toolbar.addColorPicker(this.#colorPicker);\n        //     // }\n        //     // return toolbar;\n        // }\n        /** @inheritdoc */\n        disableEditing() {\n            super.disableEditing();\n            this.div.classList.toggle(\"disabled\", true);\n            // this.div.classList.toggle(\"k-disabled\", true);\n        }\n        /** @inheritdoc */\n        enableEditing() {\n            super.enableEditing();\n            this.div.classList.toggle(\"disabled\", false);\n            // this.div.classList.toggle(\"k-disabled\", false);\n        }\n        /** @inheritdoc */\n        fixAndSetPosition() {\n            return super.fixAndSetPosition(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this));\n        }\n        /** @inheritdoc */\n        getBaseTranslation() {\n            // The editor itself doesn't have any CSS border (we're drawing one\n            // ourselves in using SVG).\n            return [0, 0];\n        }\n        /** @inheritdoc */\n        getRect(tx, ty) {\n            return super.getRect(tx, ty, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this));\n        }\n        /** @inheritdoc */\n        onceAdded() {\n            this.parent.addUndoableEditor(this);\n            this.div.focus();\n        }\n        /** @inheritdoc */\n        remove() {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_cleanDrawLayer).call(this);\n            // this._reportTelemetry({\n            //     action: \"deleted\",\n            // });\n            super.remove();\n        }\n        /** @inheritdoc */\n        rebuild() {\n            if (!this.parent) {\n                return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this);\n            if (!this.isAttachedToDOM) {\n                // At some point this editor was removed and we're rebuilding it,\n                // hence we must add it to its parent.\n                this.parent.add(this);\n            }\n        }\n        setParent(parent) {\n            var _b, _c;\n            let mustBeSelected = false;\n            if (this.parent && !parent) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_cleanDrawLayer).call(this);\n            }\n            else if (parent) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this, parent);\n                // If mustBeSelected is true it means that this editor was selected\n                // when its parent has been destroyed, hence we must select it again.\n                mustBeSelected =\n                    !this.parent &&\n                        (((_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.contains(\"selectedEditor\")) ||\n                            ((_c = this.div) === null || _c === void 0 ? void 0 : _c.classList.contains(\"k-selected\")));\n            }\n            super.setParent(parent);\n            this.show(this._isVisible);\n            if (mustBeSelected) {\n                // We select it after the parent has been set.\n                this.select();\n            }\n        }\n        /** @inheritdoc */\n        rotate(angle) {\n            // We need to rotate the svgs because of the coordinates system.\n            const { drawLayer } = this.parent;\n            let box;\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n                angle = (angle - this.rotation + 360) % 360;\n                box = kendo_dateinputsCommon_cmn_chunk_js.a(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightOutlines, \"f\").box, angle);\n            }\n            else {\n                // An highlight annotation is always drawn horizontally.\n                box = kendo_dateinputsCommon_cmn_chunk_js.a(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, this, angle);\n            }\n            drawLayer.rotate(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\"), angle);\n            drawLayer.rotate(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), angle);\n            drawLayer.updateBox(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\"), box);\n            drawLayer.updateBox(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOutlines, \"f\").box, angle));\n        }\n        /** @inheritdoc */\n        render() {\n            if (this.div) {\n                return this.div;\n            }\n            const div = super.render();\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_text, \"f\")) {\n                div.setAttribute(\"aria-label\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_text, \"f\"));\n                div.setAttribute(\"role\", \"mark\");\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n                div.classList.add(\"free\");\n            }\n            else {\n                this.div.addEventListener(\"keydown\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_keydown).bind(this), {\n                    signal: this._uiManager._signal,\n                });\n            }\n            const highlightDiv = (kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_highlightDiv, document.createElement(\"div\"), \"f\"));\n            div.append(highlightDiv);\n            highlightDiv.setAttribute(\"aria-hidden\", \"true\");\n            highlightDiv.className = \"k-internal internal\";\n            highlightDiv.style.clipPath = kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_clipPathId, \"f\");\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.setDims(this.width * parentWidth, this.height * parentHeight);\n            bindEvents(this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightDiv, \"f\"), [\"pointerover\", \"pointerleave\"]);\n            this.enableEditing();\n            return div;\n        }\n        pointerover() {\n            this.parent.drawLayer.addClass(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), \"hovered\");\n        }\n        pointerleave() {\n            this.parent.drawLayer.removeClass(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), \"hovered\");\n        }\n        _moveCaret(direction) {\n            this.parent.unselect(this);\n            switch (direction) {\n                case 0 /* left */:\n                case 2 /* up */:\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_setCaret).call(this, /* start = */ true);\n                    break;\n                case 1 /* right */:\n                case 3 /* down */:\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_setCaret).call(this, /* start = */ false);\n                    break;\n                default: break;\n            }\n        }\n        /** @inheritdoc */\n        select() {\n            var _b, _c, _d;\n            super.select();\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\")) {\n                return;\n            }\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.drawLayer.removeClass(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), \"hovered\");\n            (_c = this.parent) === null || _c === void 0 ? void 0 : _c.drawLayer.addClass(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), \"selected\");\n            (_d = this.parent) === null || _d === void 0 ? void 0 : _d.drawLayer.addClass(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), \"k-selected\");\n        }\n        /** @inheritdoc */\n        unselect() {\n            var _b, _c;\n            super.unselect();\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\")) {\n                return;\n            }\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.drawLayer.removeClass(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), \"selected\");\n            (_c = this.parent) === null || _c === void 0 ? void 0 : _c.drawLayer.removeClass(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), \"k-selected\");\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_setCaret).call(this, /* start = */ false);\n            }\n        }\n        /** @inheritdoc */\n        get _mustFixPosition() {\n            return !kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\");\n        }\n        /** @inheritdoc */\n        show(visible = this._isVisible) {\n            super.show(visible);\n            if (this.parent) {\n                this.parent.drawLayer.show(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\"), visible);\n                this.parent.drawLayer.show(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), visible);\n            }\n        }\n        static startHighlighting(parent, isLTR, { target: textLayer, x, y }) {\n            const { x: layerX, y: layerY, width: parentWidth, height: parentHeight, } = textLayer.getBoundingClientRect();\n            const ac = new AbortController();\n            const signal = parent.combinedSignal(ac);\n            const pointerDown = e => {\n                // Avoid to have undesired clicks during the drawing.\n                e.preventDefault();\n                e.stopPropagation();\n            };\n            const pointerUpCallback = e => {\n                ac.abort();\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _a$2, \"m\", _HighlightEditor_endHighlight).call(this, parent, e);\n            };\n            window.addEventListener(\"blur\", pointerUpCallback, { signal });\n            window.addEventListener(\"pointerup\", pointerUpCallback, { signal });\n            window.addEventListener(\"pointerdown\", pointerDown, {\n                capture: true,\n                passive: false,\n                signal,\n            });\n            window.addEventListener(\"contextmenu\", kendo_pdfjs_loader_js.noContextMenu, { signal });\n            textLayer.addEventListener(\"pointermove\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _a$2, \"m\", _HighlightEditor_highlightMove).bind(this, parent), { signal });\n            this._freeHighlight = new FreeOutliner({ x, y }, [layerX, layerY, parentWidth, parentHeight], parent.scale, this._defaultThickness / 2, isLTR, \n            /* innerMargin = */ 0.001);\n            ({ id: this._freeHighlightId, clipPathId: this._freeHighlightClipId } =\n                parent.drawLayer.highlight(this._freeHighlight, this._defaultColor, this._defaultOpacity, \n                /* isPathUpdatable = */ true));\n        }\n        /** @inheritdoc */\n        static deserialize(data, parent, uiManager) {\n            const editor = super.deserialize(data, parent, uiManager);\n            const { rect: [blX, blY, trX, trY], color, quadPoints, } = data;\n            // @ts-expect-error TS()\n            editor.color = kendo_pdfjs_loader_js.Util.makeHexColor(...color);\n            kendo_dateinputsCommon_cmn_chunk_js._(editor, _HighlightEditor_opacity, data.opacity, \"f\");\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            editor.width = (trX - blX) / pageWidth;\n            editor.height = (trY - blY) / pageHeight;\n            const boxes = (kendo_dateinputsCommon_cmn_chunk_js._(editor, _HighlightEditor_boxes, [], \"f\"));\n            for (let i = 0; i < quadPoints.length; i += 8) {\n                boxes.push({\n                    x: (quadPoints[4] - trX) / pageWidth,\n                    y: (trY - (1 - quadPoints[i + 5])) / pageHeight,\n                    width: (quadPoints[i + 2] - quadPoints[i]) / pageWidth,\n                    height: (quadPoints[i + 5] - quadPoints[i + 1]) / pageHeight,\n                });\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(editor, _HighlightEditor_instances, \"m\", _HighlightEditor_createOutlines).call(editor);\n            return editor;\n        }\n        /** @inheritdoc */\n        serialize(isForCopying = false) {\n            // It doesn't make sense to copy/paste a highlight annotation.\n            if (this.isEmpty() || isForCopying) {\n                return null;\n            }\n            const rect = this.getRect(0, 0);\n            const color = AnnotationEditor._colorManager.convert(this.color);\n            return {\n                annotationType: kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT,\n                color,\n                opacity: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_opacity, \"f\"),\n                thickness: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_thickness, \"f\"),\n                quadPoints: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_serializeBoxes).call(this),\n                outlines: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_serializeOutlines).call(this, rect),\n                pageIndex: this.pageIndex,\n                rect,\n                rotation: kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this),\n                structTreeParentId: this._structTreeParentId,\n            };\n        }\n        static canCreateNewEmptyEditor() {\n            return false;\n        }\n        // todo: this is necessary\n        // saveDocument() has checks that test \"editor instanceof AnnotationEditor\", but they fail\n        // because AnnotationEditor from \"pdfjs-dist/legacy/build/pdf.mjs\" is not exported\n        // thus replace instances of editors with their serialized version\n        toJSON() {\n            const data = this.serialize();\n            return data;\n        }\n    }\n    _a$2 = HighlightEditor, _HighlightEditor_anchorNode = new WeakMap(), _HighlightEditor_anchorOffset = new WeakMap(), _HighlightEditor_boxes = new WeakMap(), _HighlightEditor_clipPathId = new WeakMap(), _HighlightEditor_focusOutlines = new WeakMap(), _HighlightEditor_focusNode = new WeakMap(), _HighlightEditor_focusOffset = new WeakMap(), _HighlightEditor_highlightDiv = new WeakMap(), _HighlightEditor_highlightOutlines = new WeakMap(), _HighlightEditor_id = new WeakMap(), _HighlightEditor_isFreeHighlight = new WeakMap(), _HighlightEditor_lastPoint = new WeakMap(), _HighlightEditor_opacity = new WeakMap(), _HighlightEditor_outlineId = new WeakMap(), _HighlightEditor_text = new WeakMap(), _HighlightEditor_thickness = new WeakMap(), _HighlightEditor_methodOfCreation = new WeakMap(), _HighlightEditor_instances = new WeakSet(), _HighlightEditor_createOutlines = function _HighlightEditor_createOutlines() {\n        const outliner = new Outliner(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_boxes, \"f\"), /* borderWidth = */ 0.001);\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_highlightOutlines, outliner.getOutlines(), \"f\");\n        ({\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n        } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightOutlines, \"f\").box);\n        const outlinerForOutline = new Outliner(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_boxes, \"f\"), \n        /* borderWidth = */ 0.0025, \n        /* innerMargin = */ 0.001, this._uiManager.direction === \"ltr\");\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_focusOutlines, outlinerForOutline.getOutlines(), \"f\");\n        // The last point is in the pages coordinate system.\n        const { lastPoint } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOutlines, \"f\").box;\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_lastPoint, [\n            (lastPoint[0] - this.x) / this.width,\n            (lastPoint[1] - this.y) / this.height,\n        ], \"f\");\n    }, _HighlightEditor_createFreeOutlines = function _HighlightEditor_createFreeOutlines({ highlightOutlines, highlightId, clipPathId }) {\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_highlightOutlines, highlightOutlines, \"f\");\n        const extraThickness = 1.5;\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_focusOutlines, highlightOutlines.getNewOutline(\n        /* Slightly bigger than the highlight in order to have a little\n           space between the highlight and the outline. */\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_thickness, \"f\") / 2 + extraThickness, \n        /* innerMargin = */ 0.0025), \"f\");\n        if (highlightId >= 0) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_id, highlightId, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_clipPathId, clipPathId, \"f\");\n            // We need to redraw the highlight because we change the coordinates to be\n            // in the box coordinate system.\n            this.parent.drawLayer.finalizeLine(highlightId, highlightOutlines);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_outlineId, this.parent.drawLayer.highlightOutline(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOutlines, \"f\")), \"f\");\n        }\n        else if (this.parent) {\n            const angle = this.parent.viewport.rotation;\n            this.parent.drawLayer.updateLine(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\"), highlightOutlines);\n            this.parent.drawLayer.updateBox(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightOutlines, \"f\").box, (angle - this.rotation + 360) % 360));\n            this.parent.drawLayer.updateLine(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOutlines, \"f\"));\n            this.parent.drawLayer.updateBox(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOutlines, \"f\").box, angle));\n        }\n        const { x, y, width, height } = highlightOutlines.box;\n        switch (this.rotation) {\n            case 0:\n                this.x = x;\n                this.y = y;\n                this.width = width;\n                this.height = height;\n                break;\n            case 90: {\n                const [pageWidth, pageHeight] = this.parentDimensions;\n                this.x = y;\n                this.y = 1 - x;\n                this.width = (width * pageHeight) / pageWidth;\n                this.height = (height * pageWidth) / pageHeight;\n                break;\n            }\n            case 180:\n                this.x = 1 - x;\n                this.y = 1 - y;\n                this.width = width;\n                this.height = height;\n                break;\n            case 270: {\n                const [pageWidth, pageHeight] = this.parentDimensions;\n                this.x = 1 - y;\n                this.y = x;\n                this.width = (width * pageHeight) / pageWidth;\n                this.height = (height * pageWidth) / pageHeight;\n                break;\n            }\n            default: break;\n        }\n        const { lastPoint } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOutlines, \"f\").box;\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_lastPoint, [(lastPoint[0] - x) / width, (lastPoint[1] - y) / height], \"f\");\n    }, _HighlightEditor_updateColor = function _HighlightEditor_updateColor(color) {\n        if (!color) {\n            return;\n        }\n        const setColor = col => {\n            var _b;\n            this.color = col;\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.drawLayer.changeColor(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\"), col);\n            // this.#colorPicker?.updateColor(col);\n        };\n        const savedColor = this.color;\n        this.addCommands({\n            cmd: setColor.bind(this, color),\n            undo: setColor.bind(this, savedColor),\n            post: this._uiManager.updateUI.bind(this._uiManager, this),\n            mustExec: true,\n            type: kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n            overwriteIfSameType: true,\n            keepUndo: true,\n        });\n        // this._reportTelemetry(\n        //     {\n        //         action: \"color_changed\",\n        //         color: this._uiManager.highlightColorNames.get(color),\n        //     },\n        //     /* mustWait = */ true\n        // );\n    }, _HighlightEditor_updateThickness = function _HighlightEditor_updateThickness(thickness) {\n        if (!thickness) {\n            return;\n        }\n        // const savedThickness = this.#thickness;\n        // const setThickness = th => {\n        //     this.#thickness = th;\n        //     this.#changeThickness(th);\n        // };\n        // this.addCommands({\n        //     cmd: setThickness.bind(this, thickness),\n        //     undo: setThickness.bind(this, savedThickness),\n        //     post: this._uiManager.updateUI.bind(this._uiManager, this),\n        //     mustExec: true,\n        //     type: AnnotationEditorParamsType.INK_THICKNESS,\n        //     overwriteIfSameType: true,\n        //     keepUndo: true,\n        // });\n        // this._reportTelemetry(\n        //     { action: \"thickness_changed\", thickness },\n        // /* mustWait = */ true\n        // );\n    }, _HighlightEditor_cleanDrawLayer = function _HighlightEditor_cleanDrawLayer() {\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\") === null || !this.parent) {\n            return;\n        }\n        this.parent.drawLayer.remove(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\"));\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_id, null, \"f\");\n        this.parent.drawLayer.remove(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_outlineId, \"f\"));\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_outlineId, null, \"f\");\n    }, _HighlightEditor_addToDrawLayer = function _HighlightEditor_addToDrawLayer(parent = this.parent) {\n        var _b, _c;\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_id, \"f\") !== null) {\n            return;\n        }\n        (_b = this, _c = this, { id: ({ set value(_a) { kendo_dateinputsCommon_cmn_chunk_js._(_b, _HighlightEditor_id, _a, \"f\"); } }).value, clipPathId: ({ set value(_a) { kendo_dateinputsCommon_cmn_chunk_js._(_c, _HighlightEditor_clipPathId, _a, \"f\"); } }).value } =\n            parent.drawLayer.highlight(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightOutlines, \"f\"), this.color, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_opacity, \"f\")));\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _HighlightEditor_outlineId, parent.drawLayer.highlightOutline(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOutlines, \"f\")), \"f\");\n        // // todo: manually set styles, so that SVG elements are properly displayed\n        // if (parent.drawLayer.parent) {\n        //     Array.from(parent.drawLayer.parent.querySelectorAll(\".highlight\")).forEach(x => {\n        //         const element = x as any;\n        //         element.style[\"--blend-mode\"] = \"multiply\";\n        //         element.style.position = \"absolute\";\n        //         element.style[\"mix-blend-mode\"] = \"var(--blend-mode)\";\n        //         element.style.transform = \"none\";\n        //     });\n        // }\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightDiv, \"f\")) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightDiv, \"f\").style.clipPath = kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_clipPathId, \"f\");\n        }\n    }, _HighlightEditor_rotateBbox = function _HighlightEditor_rotateBbox({ x, y, width, height }, angle) {\n        switch (angle) {\n            case 90:\n                return {\n                    x: 1 - y - height,\n                    y: x,\n                    width: height,\n                    height: width,\n                };\n            case 180:\n                return {\n                    x: 1 - x - width,\n                    y: 1 - y - height,\n                    width,\n                    height,\n                };\n            case 270:\n                return {\n                    x: y,\n                    y: 1 - x - width,\n                    width: height,\n                    height: width,\n                };\n            default: break;\n        }\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }, _HighlightEditor_keydown = function _HighlightEditor_keydown(event) {\n        if (!event) {\n            return;\n        }\n        // HighlightEditor._keyboardManager.exec(this, event);\n    }, _HighlightEditor_setCaret = function _HighlightEditor_setCaret(start) {\n        if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_anchorNode, \"f\")) {\n            return;\n        }\n        const selection = window.getSelection();\n        if (start) {\n            selection.setPosition(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_anchorNode, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_anchorOffset, \"f\"));\n        }\n        else {\n            selection.setPosition(kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusNode, \"f\"), kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_focusOffset, \"f\"));\n        }\n    }, _HighlightEditor_getRotation = function _HighlightEditor_getRotation() {\n        // Highlight annotations are always drawn horizontally but if\n        // a free highlight annotation can be rotated.\n        return kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\") ? this.rotation : 0;\n    }, _HighlightEditor_serializeBoxes = function _HighlightEditor_serializeBoxes() {\n        if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n            return null;\n        }\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        const boxes = kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_boxes, \"f\");\n        const quadPoints = new Float32Array(boxes.length * 8);\n        let i = 0;\n        for (const { x, y, width, height } of boxes) {\n            const sx = x * pageWidth + pageX;\n            const sy = (1 - y - height) * pageHeight + pageY;\n            // The specifications say that the rectangle should start from the bottom\n            // left corner and go counter-clockwise.\n            // But when opening the file in Adobe Acrobat it appears that this isn't\n            // correct hence the 4th and 6th numbers are just swapped.\n            quadPoints[i] = quadPoints[i + 4] = sx;\n            quadPoints[i + 1] = quadPoints[i + 3] = sy;\n            quadPoints[i + 2] = quadPoints[i + 6] = sx + width * pageWidth;\n            quadPoints[i + 5] = quadPoints[i + 7] = sy + height * pageHeight;\n            i += 8;\n        }\n        return quadPoints;\n    }, _HighlightEditor_serializeOutlines = function _HighlightEditor_serializeOutlines(rect) {\n        return kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_highlightOutlines, \"f\").serialize(rect, kendo_dateinputsCommon_cmn_chunk_js.a(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this));\n    }, _HighlightEditor_highlightMove = function _HighlightEditor_highlightMove(parent, event) {\n        if (this._freeHighlight.add(event)) {\n            // Redraw only if the point has been added.\n            parent.drawLayer.updatePath(this._freeHighlightId, this._freeHighlight);\n        }\n    }, _HighlightEditor_endHighlight = function _HighlightEditor_endHighlight(parent, event) {\n        if (!this._freeHighlight.isEmpty()) {\n            parent.createAndAddNewEditor(event, false, {\n                highlightId: this._freeHighlightId,\n                highlightOutlines: this._freeHighlight.getOutlines(),\n                clipPathId: this._freeHighlightClipId,\n                methodOfCreation: \"main_toolbar\",\n            });\n        }\n        else {\n            parent.drawLayer.removeFreeHighlight(this._freeHighlightId);\n        }\n        this._freeHighlightId = -1;\n        this._freeHighlight = null;\n        this._freeHighlightClipId = \"\";\n    };\n    HighlightEditor._defaultColor = null;\n    HighlightEditor._defaultOpacity = 1;\n    HighlightEditor._defaultThickness = 12;\n    HighlightEditor._type = \"highlight\";\n    HighlightEditor._editorType = kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT;\n    HighlightEditor._freeHighlightId = -1;\n    HighlightEditor._freeHighlight = null;\n    HighlightEditor._freeHighlightClipId = \"\";\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _AnnotationEditorLayer_instances, _a$1, _AnnotationEditorLayer_accessibilityManager, _AnnotationEditorLayer_allowClick, _AnnotationEditorLayer_annotationLayer, _AnnotationEditorLayer_clickAC, _AnnotationEditorLayer_editorFocusTimeoutId, _AnnotationEditorLayer_editors, _AnnotationEditorLayer_hadPointerDown, _AnnotationEditorLayer_isCleaningUp, _AnnotationEditorLayer_isDisabling, _AnnotationEditorLayer_textLayer, _AnnotationEditorLayer_textSelectionAC, _AnnotationEditorLayer_uiManager, _AnnotationEditorLayer_editorTypes, _AnnotationEditorLayer_textLayerPointerDown, _AnnotationEditorLayer_currentEditorType_get, _AnnotationEditorLayer_createNewEditor, _AnnotationEditorLayer_getCenterPoint, _AnnotationEditorLayer_cleanup;\n    class AnnotationEditorLayer {\n        /**\n         * @param {AnnotationEditorLayerOptions} options\n         */\n        constructor({ uiManager, pageIndex, div, accessibilityManager, annotationLayer, drawLayer, textLayer, viewport\n        // l10n\n         }) {\n            _AnnotationEditorLayer_instances.add(this);\n            // todo: props\n            this.drawLayer = null;\n            this.pageIndex = 0;\n            this.div = null;\n            this.viewport = null;\n            // todo: props\n            _AnnotationEditorLayer_accessibilityManager.set(this, void 0);\n            _AnnotationEditorLayer_allowClick.set(this, false);\n            _AnnotationEditorLayer_annotationLayer.set(this, null);\n            _AnnotationEditorLayer_clickAC.set(this, null);\n            _AnnotationEditorLayer_editorFocusTimeoutId.set(this, null);\n            _AnnotationEditorLayer_editors.set(this, new Map());\n            _AnnotationEditorLayer_hadPointerDown.set(this, false);\n            _AnnotationEditorLayer_isCleaningUp.set(this, false);\n            _AnnotationEditorLayer_isDisabling.set(this, false);\n            _AnnotationEditorLayer_textLayer.set(this, null);\n            _AnnotationEditorLayer_textSelectionAC.set(this, null);\n            _AnnotationEditorLayer_uiManager.set(this, null);\n            const editorTypes = [...kendo_dateinputsCommon_cmn_chunk_js.a(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).values()];\n            if (!_a$1._initialized) {\n                _a$1._initialized = true;\n                for (const editorType of editorTypes) {\n                    // editorType.initialize(l10n, uiManager);\n                    editorType.initialize({}, uiManager);\n                }\n            }\n            uiManager.registerEditorTypes(editorTypes);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_uiManager, uiManager, \"f\");\n            this.pageIndex = pageIndex;\n            this.div = div;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_accessibilityManager, accessibilityManager, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_annotationLayer, annotationLayer, \"f\");\n            this.viewport = viewport;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_textLayer, textLayer, \"f\");\n            this.drawLayer = drawLayer;\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").addLayer(this);\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_annotationLayer, \"f\") || !kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\")) {\n                return;\n            }\n        }\n        // todo: ported from AnnotationEditorLayerBuilder\n        hide() {\n            if (!this.div) {\n                return;\n            }\n            this.div.hidden = true;\n        }\n        show() {\n            if (!this.div || this.isInvisible) {\n                return;\n            }\n            this.div.hidden = false;\n        }\n        // todo: ported from AnnotationEditorLayerBuilder\n        get isEmpty() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").size === 0;\n        }\n        get isInvisible() {\n            return (this.isEmpty && kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.NONE);\n        }\n        /**\n         * Update the toolbar if it's required to reflect the tool currently used.\n         * @param {number} mode\n         */\n        // updateToolbar(mode) {\n        updateToolbar() {\n            // this.#uiManager.updateToolbar(mode);\n        }\n        /**\n         * The mode has changed: it must be updated.\n         * @param {number} mode\n         */\n        updateMode(mode = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getMode()) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_cleanup).call(this);\n            switch (mode) {\n                case kendo_pdfjs_loader_js.AnnotationEditorType.NONE:\n                    this.disableTextSelection();\n                    this.togglePointerEvents(false);\n                    this.toggleAnnotationLayerPointerEvents(true);\n                    this.disableClick();\n                    return;\n                case kendo_pdfjs_loader_js.AnnotationEditorType.INK:\n                    // We always want to have an ink editor ready to draw in.\n                    this.addInkEditorIfNeeded(false);\n                    this.disableTextSelection();\n                    this.togglePointerEvents(true);\n                    this.disableClick();\n                    break;\n                case kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT:\n                    this.enableTextSelection();\n                    this.togglePointerEvents(false);\n                    this.disableClick();\n                    break;\n                default:\n                    this.disableTextSelection();\n                    this.togglePointerEvents(true);\n                    this.enableClick();\n            }\n            this.toggleAnnotationLayerPointerEvents(false);\n            const { classList } = this.div;\n            for (const editorType of kendo_dateinputsCommon_cmn_chunk_js.a(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).values()) {\n                classList.toggle(`${editorType._type}Editing`, mode === editorType._editorType);\n            }\n            this.div.hidden = false;\n        }\n        hasTextLayer(textLayer) {\n            var _b;\n            return textLayer === ((_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div);\n            // return textLayer === this.#textLayer || textLayer === this.#textLayer?.div;\n        }\n        addInkEditorIfNeeded(isCommitting) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() !== kendo_pdfjs_loader_js.AnnotationEditorType.INK) {\n                // We don't want to add an ink editor if we're not in ink mode!\n                return;\n            }\n            if (!isCommitting) {\n                // We're removing an editor but an empty one can already exist so in this\n                // case we don't need to create a new one.\n                for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n                    if (editor.isEmpty()) {\n                        editor.setInBackground();\n                        return;\n                    }\n                }\n            }\n            const newEditor = this.createAndAddNewEditor({ offsetX: 0, offsetY: 0 }, \n            /* isCentered = */ false);\n            newEditor.setInBackground();\n        }\n        /**\n         * Set the editing state.\n         * @param {boolean} isEditing\n         */\n        setEditingState(isEditing) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").setEditingState(isEditing);\n        }\n        /**\n         * Add some commands into the CommandManager (undo/redo stuff).\n         * @param {Object} params\n         */\n        addCommands(params) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").addCommands(params);\n        }\n        toggleDrawing(enabled = false) {\n            this.div.classList.toggle(\"drawing\", !enabled);\n            // this.div.classList.toggle(\"k-drawing\", !enabled);\n        }\n        togglePointerEvents(enabled = false) {\n            // this.div.classList.toggle(\"disabled\", !enabled);\n            this.div.classList.toggle(\"k-annotation-editor-layer-disabled\", !enabled);\n        }\n        toggleAnnotationLayerPointerEvents(enabled = false) {\n            var _b;\n            // this.#annotationLayer?.div.classList.toggle(\"disabled\", !enabled);\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_annotationLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div.classList.toggle(\"k-annotation-editor-layer-disabled\", !enabled);\n        }\n        /**\n         * Enable pointer events on the main div in order to enable\n         * editor creation.\n         */\n        enable() {\n            this.div.tabIndex = 0;\n            this.togglePointerEvents(true);\n            const annotationElementIds = new Set();\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n                editor.enableEditing();\n                editor.show(true);\n                if (editor.annotationElementId) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").removeChangedExistingAnnotation(editor);\n                    annotationElementIds.add(editor.annotationElementId);\n                }\n            }\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_annotationLayer, \"f\")) {\n                return;\n            }\n            const editables = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_annotationLayer, \"f\").getEditableAnnotations();\n            for (const editable of editables) {\n                // The element must be hidden whatever its state is.\n                editable.hide();\n                if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").isDeletedAnnotationElement(editable.data.id)) {\n                    continue;\n                }\n                if (annotationElementIds.has(editable.data.id)) {\n                    continue;\n                }\n                const editor = this.deserialize(editable);\n                if (!editor) {\n                    continue;\n                }\n                this.addOrRebuild(editor);\n                editor.enableEditing();\n            }\n        }\n        /**\n         * Disable editor creation.\n         */\n        disable() {\n            var _b;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_isDisabling, true, \"f\");\n            this.div.tabIndex = -1;\n            this.togglePointerEvents(false);\n            const changedAnnotations = new Map();\n            const resetAnnotations = new Map();\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n                editor.disableEditing();\n                if (!editor.annotationElementId) {\n                    continue;\n                }\n                if (editor.serialize() !== null) {\n                    changedAnnotations.set(editor.annotationElementId, editor);\n                    continue;\n                }\n                else {\n                    resetAnnotations.set(editor.annotationElementId, editor);\n                }\n                (_b = this.getEditableAnnotation(editor.annotationElementId)) === null || _b === void 0 ? void 0 : _b.show();\n                editor.remove();\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_annotationLayer, \"f\")) {\n                // Show the annotations that were hidden in enable().\n                const editables = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_annotationLayer, \"f\").getEditableAnnotations();\n                for (const editable of editables) {\n                    const { id } = editable.data;\n                    if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").isDeletedAnnotationElement(id)) {\n                        continue;\n                    }\n                    let editor = resetAnnotations.get(id);\n                    if (editor) {\n                        editor.resetAnnotationElement(editable);\n                        editor.show(false);\n                        editable.show();\n                        continue;\n                    }\n                    editor = changedAnnotations.get(id);\n                    if (editor) {\n                        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").addChangedExistingAnnotation(editor);\n                        editor.renderAnnotationElement(editable);\n                        editor.show(false);\n                    }\n                    editable.show();\n                }\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_cleanup).call(this);\n            if (this.isEmpty) {\n                this.div.hidden = true;\n            }\n            const { classList } = this.div;\n            for (const editorType of kendo_dateinputsCommon_cmn_chunk_js.a(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).values()) {\n                classList.remove(`${editorType._type}Editing`);\n            }\n            this.disableTextSelection();\n            this.toggleAnnotationLayerPointerEvents(true);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_isDisabling, false, \"f\");\n        }\n        getEditableAnnotation(id) {\n            var _b;\n            return ((_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_annotationLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.getEditableAnnotation(id)) || null;\n        }\n        /**\n         * Set the current editor.\n         * @param {AnnotationEditor} editor\n         */\n        setActiveEditor(editor) {\n            const currentActive = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getActive();\n            if (currentActive === editor) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").setActiveEditor(editor);\n        }\n        enableTextSelection() {\n            var _b;\n            this.div.tabIndex = -1;\n            if (((_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div) && !kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textSelectionAC, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_textSelectionAC, new AbortController(), \"f\");\n                const signal = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").combinedSignal(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textSelectionAC, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\").div.addEventListener(\"pointerdown\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_textLayerPointerDown).bind(this), { signal });\n                // this.#textLayer.div.classList.add(\"highlighting\");\n            }\n        }\n        disableTextSelection() {\n            var _b;\n            this.div.tabIndex = 0;\n            if (((_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div) && kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textSelectionAC, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textSelectionAC, \"f\").abort();\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_textSelectionAC, null, \"f\");\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\").div.classList.remove(\"highlighting\");\n            }\n        }\n        enableClick() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_clickAC, \"f\")) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_clickAC, new AbortController(), \"f\");\n            const signal = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").combinedSignal(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_clickAC, \"f\"));\n            this.div.addEventListener(\"pointerdown\", this.pointerdown.bind(this), {\n                signal,\n            });\n            this.div.addEventListener(\"pointerup\", this.pointerup.bind(this), {\n                signal,\n            });\n        }\n        disableClick() {\n            var _b;\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_clickAC, \"f\")) === null || _b === void 0 ? void 0 : _b.abort();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_clickAC, null, \"f\");\n        }\n        attach(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").set(editor.id, editor);\n            const { annotationElementId } = editor;\n            if (annotationElementId &&\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").isDeletedAnnotationElement(annotationElementId)) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").removeDeletedAnnotationElement(editor);\n            }\n        }\n        detach(editor) {\n            var _b;\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").delete(editor.id);\n            (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_accessibilityManager, \"f\")) === null || _b === void 0 ? void 0 : _b.removePointerInTextLayer(editor.contentDiv);\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_isDisabling, \"f\") && editor.annotationElementId) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").addDeletedAnnotationElement(editor);\n            }\n        }\n        /**\n         * Remove an editor.\n         * @param {AnnotationEditor} editor\n         */\n        remove(editor) {\n            this.detach(editor);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").removeEditor(editor);\n            editor.div.remove();\n            editor.isAttachedToDOM = false;\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_isCleaningUp, \"f\")) {\n                this.addInkEditorIfNeeded(/* isCommitting = */ false);\n            }\n        }\n        /**\n         * An editor can have a different parent, for example after having\n         * being dragged and droped from a page to another.\n         * @param {AnnotationEditor} editor\n         */\n        changeParent(editor) {\n            var _b;\n            if (editor.parent === this) {\n                return;\n            }\n            if (editor.parent && editor.annotationElementId) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").addDeletedAnnotationElement(editor.annotationElementId);\n                AnnotationEditor.deleteAnnotationElement(editor);\n                editor.annotationElementId = null;\n            }\n            this.attach(editor);\n            (_b = editor.parent) === null || _b === void 0 ? void 0 : _b.detach(editor);\n            editor.setParent(this);\n            if (editor.div && editor.isAttachedToDOM) {\n                editor.div.remove();\n                this.div.append(editor.div);\n            }\n        }\n        /**\n         * Add a new editor in the current view.\n         * @param {AnnotationEditor} editor\n         */\n        add(editor) {\n            if (editor.parent === this && editor.isAttachedToDOM) {\n                return;\n            }\n            this.changeParent(editor);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").addEditor(editor);\n            this.attach(editor);\n            if (!editor.isAttachedToDOM) {\n                const div = editor.render();\n                this.div.append(div);\n                editor.isAttachedToDOM = true;\n            }\n            // The editor will be correctly moved into the DOM (see fixAndSetPosition).\n            editor.fixAndSetPosition();\n            editor.onceAdded();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").addToAnnotationStorage(editor);\n            // editor._reportTelemetry(editor.telemetryInitialData);\n            // todo: this differs from pdf.js\n            // this.setActiveEditor(editor);\n        }\n        moveEditorInDOM(editor) {\n            var _b;\n            if (!editor.isAttachedToDOM) {\n                return;\n            }\n            const { activeElement } = document;\n            if (editor.div.contains(activeElement) && !kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editorFocusTimeoutId, \"f\")) {\n                // When the div is moved in the DOM the focus can move somewhere else,\n                // so we want to be sure that the focus will stay on the editor but we\n                // don't want to call any focus callbacks, hence we disable them and only\n                // re-enable them when the editor has the focus.\n                editor._focusEventsAllowed = false;\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_editorFocusTimeoutId, setTimeout(() => {\n                    kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_editorFocusTimeoutId, null, \"f\");\n                    if (!editor.div.contains(document.activeElement)) {\n                        editor.div.addEventListener(\"focusin\", () => {\n                            editor._focusEventsAllowed = true;\n                        }, { once: true, signal: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\")._signal });\n                        activeElement.focus();\n                    }\n                    else {\n                        editor._focusEventsAllowed = true;\n                    }\n                }, 0), \"f\");\n            }\n            editor._structTreeParentId = (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_accessibilityManager, \"f\")) === null || _b === void 0 ? void 0 : _b.moveElementInDOM(this.div, editor.div, editor.contentDiv, \n            /* isRemovable = */ true);\n        }\n        /**\n         * Add or rebuild depending if it has been removed or not.\n         * @param {AnnotationEditor} editor\n         */\n        addOrRebuild(editor) {\n            if (editor.needsToBeRebuilt()) {\n                editor.parent || (editor.parent = this);\n                editor.rebuild();\n                editor.show();\n            }\n            else {\n                this.add(editor);\n            }\n        }\n        /**\n         * Add a new editor and make this addition undoable.\n         * @param {AnnotationEditor} editor\n         */\n        addUndoableEditor(editor) {\n            const cmd = () => editor._uiManager.rebuild(editor);\n            const undo = () => {\n                editor.remove();\n            };\n            this.addCommands({ cmd, undo, mustExec: false });\n        }\n        /**\n         * Get an id for an editor.\n         * @returns {string}\n         */\n        getNextId() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getId();\n        }\n        combinedSignal(abortController) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").combinedSignal(abortController);\n        }\n        canCreateNewEmptyEditor() {\n            var _b;\n            return (_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"a\", _AnnotationEditorLayer_currentEditorType_get)) === null || _b === void 0 ? void 0 : _b.canCreateNewEmptyEditor();\n        }\n        /**\n         * Paste some content into a new editor.\n         * @param {number} mode\n         * @param {Object} params\n         */\n        pasteEditor(mode, params) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").updateToolbar(mode);\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").updateMode(mode);\n            const { offsetX, offsetY } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_getCenterPoint).call(this);\n            const id = this.getNextId();\n            const editor = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_createNewEditor).call(this, Object.assign({ parent: this, id, x: offsetX, y: offsetY, uiManager: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\"), isCentered: true }, params));\n            if (editor) {\n                this.add(editor);\n            }\n        }\n        /**\n         * Create a new editor\n         * @param {Object} data\n         * @returns {AnnotationEditor | null}\n         */\n        deserialize(data) {\n            var _b, _c;\n            return (((_c = kendo_dateinputsCommon_cmn_chunk_js.a(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes)\n                .get((_b = data.annotationType) !== null && _b !== void 0 ? _b : data.annotationEditorType)) === null || _c === void 0 ? void 0 : _c.deserialize(data, this, kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\"))) || null);\n        }\n        /**\n         * Create and add a new editor.\n         * @param {PointerEvent} event\n         * @param {boolean} isCentered\n         * @param [Object] data\n         * @returns {AnnotationEditor}\n         */\n        createAndAddNewEditor(event, isCentered, data = {}) {\n            const id = this.getNextId();\n            const editor = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_createNewEditor).call(this, Object.assign({ parent: this, id, x: event.offsetX, y: event.offsetY, uiManager: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\"), isCentered }, data));\n            if (editor) {\n                this.add(editor);\n            }\n            return editor;\n        }\n        /**\n         * Create and add a new editor.\n         */\n        addNewEditor() {\n            this.createAndAddNewEditor(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_getCenterPoint).call(this), /* isCentered = */ true);\n        }\n        /**\n         * Set the last selected editor.\n         * @param {AnnotationEditor} editor\n         */\n        setSelected(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").setSelected(editor);\n        }\n        /**\n         * Add or remove an editor the current selection.\n         * @param {AnnotationEditor} editor\n         */\n        toggleSelected(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").toggleSelected(editor);\n        }\n        /**\n         * Check if the editor is selected.\n         * @param {AnnotationEditor} editor\n         */\n        isSelected(editor) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").isSelected(editor);\n        }\n        /**\n         * Unselect an editor.\n         * @param {AnnotationEditor} editor\n         */\n        unselect(editor) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").unselect(editor);\n        }\n        /**\n         * Pointerup callback.\n         * @param {PointerEvent} event\n         */\n        pointerup(event) {\n            const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n            if (event.button !== 0 || (event.ctrlKey && isMac)) {\n                // Don't create an editor on right click.\n                return;\n            }\n            if (event.target !== this.div) {\n                return;\n            }\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_hadPointerDown, \"f\")) {\n                // It can happen when the user starts a drag inside a text editor\n                // and then releases the mouse button outside of it. In such a case\n                // we don't want to create a new editor, hence we check that a pointerdown\n                // occurred on this div previously.\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_hadPointerDown, false, \"f\");\n            if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_allowClick, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_allowClick, true, \"f\");\n                return;\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.STAMP) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").unselectAll();\n                return;\n            }\n            this.createAndAddNewEditor(event, /* isCentered = */ false);\n        }\n        /**\n         * Pointerdown callback.\n         * @param {PointerEvent} event\n         */\n        pointerdown(event) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n                this.enableTextSelection();\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_hadPointerDown, \"f\")) {\n                // It's possible to have a second pointerdown event before a pointerup one\n                // when the user puts a finger on a touchscreen and then add a second one\n                // to start a pinch-to-zoom gesture.\n                // That said, in case it's possible to have two pointerdown events with\n                // a mouse, we don't want to create a new editor in such a case either.\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_hadPointerDown, false, \"f\");\n                return;\n            }\n            const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n            if (event.button !== 0 || (event.ctrlKey && isMac)) {\n                // Do nothing on right click.\n                return;\n            }\n            if (event.target !== this.div) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_hadPointerDown, true, \"f\");\n            const editor = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getActive();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_allowClick, !editor || editor.isEmpty(), \"f\");\n        }\n        /**\n         *\n         * @param {AnnotationEditor} editor\n         * @param {number} x\n         * @param {number} y\n         * @returns\n         */\n        findNewParent(editor, x, y) {\n            const layer = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").findParent(x, y);\n            if (layer === null || layer === this) {\n                return false;\n            }\n            layer.changeParent(editor);\n            return true;\n        }\n        /**\n         * Destroy the main editor.\n         */\n        destroy() {\n            var _b, _c;\n            if (((_b = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getActive()) === null || _b === void 0 ? void 0 : _b.parent) === this) {\n                // We need to commit the current editor before destroying the layer.\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").commitOrRemove();\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").setActiveEditor(null);\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editorFocusTimeoutId, \"f\")) {\n                clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editorFocusTimeoutId, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_editorFocusTimeoutId, null, \"f\");\n            }\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n                (_c = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_accessibilityManager, \"f\")) === null || _c === void 0 ? void 0 : _c.removePointerInTextLayer(editor.contentDiv);\n                editor.setParent(null);\n                editor.isAttachedToDOM = false;\n                editor.div.remove();\n            }\n            this.div = null;\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").clear();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").removeLayer(this);\n        }\n        /**\n         * Render the main editor.\n         * @param {RenderEditorLayerOptions} parameters\n         */\n        render({ viewport }) {\n            this.viewport = viewport;\n            kendo_pdfjs_loader_js.setLayerDimensions(this.div, viewport);\n            for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getEditors(this.pageIndex)) {\n                this.add(editor);\n                editor.rebuild();\n            }\n            // We're maybe rendering a layer which was invisible when we started to edit\n            // so we must set the different callbacks for it.\n            this.updateMode();\n        }\n        // /**\n        //  * Update the main editor.\n        //  * @param {RenderEditorLayerOptions} parameters\n        //  */\n        update({ viewport }) {\n            // Editors have their dimensions/positions in percent so to avoid any\n            // issues (see #15582), we must commit the current one before changing\n            // the viewport.\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").commitOrRemove();\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_cleanup).call(this);\n            const oldRotation = this.viewport.rotation;\n            const rotation = viewport.rotation;\n            this.viewport = viewport;\n            // setLayerDimensions(this.div, { rotation });\n            // todo: fix parameters\n            // setLayerDimensions(this.div, { rotation } as PageViewport);\n            kendo_pdfjs_loader_js.setLayerDimensions(this.div, viewport);\n            if (oldRotation !== rotation) {\n                for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n                    editor.rotate(rotation);\n                }\n            }\n            this.addInkEditorIfNeeded(/* isCommitting = */ false);\n        }\n        /**\n         * Get page dimensions.\n         * @returns {Object} dimensions.\n         */\n        get pageDimensions() {\n            const { pageWidth, pageHeight } = this.viewport.rawDims;\n            return [pageWidth, pageHeight];\n        }\n        get scale() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").viewParameters.realScale;\n        }\n    }\n    _a$1 = AnnotationEditorLayer, _AnnotationEditorLayer_accessibilityManager = new WeakMap(), _AnnotationEditorLayer_allowClick = new WeakMap(), _AnnotationEditorLayer_annotationLayer = new WeakMap(), _AnnotationEditorLayer_clickAC = new WeakMap(), _AnnotationEditorLayer_editorFocusTimeoutId = new WeakMap(), _AnnotationEditorLayer_editors = new WeakMap(), _AnnotationEditorLayer_hadPointerDown = new WeakMap(), _AnnotationEditorLayer_isCleaningUp = new WeakMap(), _AnnotationEditorLayer_isDisabling = new WeakMap(), _AnnotationEditorLayer_textLayer = new WeakMap(), _AnnotationEditorLayer_textSelectionAC = new WeakMap(), _AnnotationEditorLayer_uiManager = new WeakMap(), _AnnotationEditorLayer_instances = new WeakSet(), _AnnotationEditorLayer_textLayerPointerDown = function _AnnotationEditorLayer_textLayerPointerDown(event) {\n        // Unselect all the editors in order to let the user select some text\n        // without being annoyed by an editor toolbar.\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").unselectAll();\n        const { target } = event;\n        if (target === kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\").div ||\n            (target.classList.contains(\"endOfContent\") && kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\").div.contains(target))) {\n            const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n            if (event.button !== 0 || (event.ctrlKey && isMac)) {\n                // Do nothing on right click.\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").showAllEditors(\"highlight\", true);\n            // if (this.#uiManager.getMode() === AnnotationEditorType.HIGHLIGHT) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n                // todo: do not continue with free highlight\n                return;\n            }\n            // this.#textLayer.div.classList.add(\"free\");\n            // todo: intentionally prevent free highlight\n            // this.toggleDrawing();\n            // HighlightEditor.startHighlighting(\n            //     this,\n            //     this.#uiManager.direction === \"ltr\",\n            //     event\n            // );\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\").div.addEventListener(\"pointerup\", () => {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_textLayer, \"f\").div.classList.remove(\"free\");\n                this.toggleDrawing(true);\n            }, { once: true, signal: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\")._signal });\n            event.preventDefault();\n        }\n    }, _AnnotationEditorLayer_currentEditorType_get = function _AnnotationEditorLayer_currentEditorType_get() {\n        return kendo_dateinputsCommon_cmn_chunk_js.a(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).get(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_uiManager, \"f\").getMode());\n    }, _AnnotationEditorLayer_createNewEditor = function _AnnotationEditorLayer_createNewEditor(params) {\n        const editorType = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_instances, \"a\", _AnnotationEditorLayer_currentEditorType_get);\n        // return editorType ? new editorType.prototype.constructor(params) : null;\n        return editorType ? new editorType(params) : null;\n    }, _AnnotationEditorLayer_getCenterPoint = function _AnnotationEditorLayer_getCenterPoint() {\n        const { x, y, width, height } = this.div.getBoundingClientRect();\n        const tlX = Math.max(0, x);\n        const tlY = Math.max(0, y);\n        const brX = Math.min(window.innerWidth, x + width);\n        const brY = Math.min(window.innerHeight, y + height);\n        const centerX = (tlX + brX) / 2 - x;\n        const centerY = (tlY + brY) / 2 - y;\n        const [offsetX, offsetY] = this.viewport.rotation % 180 === 0\n            ? [centerX, centerY]\n            : [centerY, centerX];\n        return { offsetX, offsetY };\n    }, _AnnotationEditorLayer_cleanup = function _AnnotationEditorLayer_cleanup() {\n        // When we're cleaning up, some editors are removed but we don't want\n        // to add a new one which will induce an addition in this.#editors, hence\n        // an infinite loop.\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_isCleaningUp, true, \"f\");\n        for (const editor of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n            if (editor.isEmpty()) {\n                editor.remove();\n            }\n        }\n        kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayer_isCleaningUp, false, \"f\");\n    };\n    AnnotationEditorLayer._initialized = false;\n    _AnnotationEditorLayer_editorTypes = { value: new Map(\n        // [FreeTextEditor, InkEditor, StampEditor, HighlightEditor].map(type => [\n        [FreeTextEditor, HighlightEditor].map(type => [\n            type._editorType,\n            type\n        ])) };\n\n    /* Copyright 2022 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _AnnotationEditorLayerBuilder_annotationLayer, _AnnotationEditorLayerBuilder_drawLayer, _AnnotationEditorLayerBuilder_onAppend, _AnnotationEditorLayerBuilder_textLayer, _AnnotationEditorLayerBuilder_uiManager;\n    // import { GenericL10n } from \"web-null_l10n\";\n    /**\n     * @typedef {Object} AnnotationEditorLayerBuilderOptions\n     * @property {AnnotationEditorUIManager} [uiManager]\n     * @property {PDFPageProxy} pdfPage\n     * @property {IL10n} [l10n]\n     * @property {TextAccessibilityManager} [accessibilityManager]\n     * @property {AnnotationLayer} [annotationLayer]\n     * @property {TextLayer} [textLayer]\n     * @property {DrawLayer} [drawLayer]\n     * @property {function} [onAppend]\n     */\n    class AnnotationEditorLayerBuilder {\n        /**\n         * @param {AnnotationEditorLayerBuilderOptions} options\n         */\n        constructor(options) {\n            // todo: props\n            this.pdfPage = null;\n            this.annotationEditorLayer = null;\n            this._cancelled = null;\n            this.div = null;\n            this.accessibilityManager = null;\n            // todo: props\n            _AnnotationEditorLayerBuilder_annotationLayer.set(this, null);\n            _AnnotationEditorLayerBuilder_drawLayer.set(this, null);\n            _AnnotationEditorLayerBuilder_onAppend.set(this, null);\n            _AnnotationEditorLayerBuilder_textLayer.set(this, null);\n            _AnnotationEditorLayerBuilder_uiManager.set(this, null);\n            this.pdfPage = options.pdfPage;\n            this.accessibilityManager = options.accessibilityManager;\n            // this.l10n = options.l10n;\n            // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n            // this.l10n ||= new GenericL10n();\n            // }\n            this.annotationEditorLayer = null;\n            this.div = null;\n            this._cancelled = false;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayerBuilder_uiManager, options.uiManager, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayerBuilder_annotationLayer, options.annotationLayer || null, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayerBuilder_textLayer, options.textLayer || null, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayerBuilder_drawLayer, options.drawLayer || null, \"f\");\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationEditorLayerBuilder_onAppend, options.onAppend || null, \"f\");\n        }\n        /**\n         * @param {PageViewport} viewport\n         * @param {string} intent (default value is 'display')\n         */\n        render(viewport_1) {\n            return kendo_dateinputsCommon_cmn_chunk_js.b(this, arguments, void 0, function* (viewport, intent = \"display\") {\n                var _a;\n                if (intent !== \"display\") {\n                    return;\n                }\n                if (this._cancelled) {\n                    return;\n                }\n                const clonedViewport = viewport.clone({ dontFlip: true });\n                if (this.div) {\n                    this.annotationEditorLayer.update({ viewport: clonedViewport });\n                    this.show();\n                    return;\n                }\n                // Create an AnnotationEditor layer div\n                const div = (this.div = document.createElement(\"div\"));\n                div.className = \"k-annotation-editor-layer annotationEditorLayer\";\n                div.hidden = true;\n                div.dir = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayerBuilder_uiManager, \"f\").direction;\n                (_a = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayerBuilder_onAppend, \"f\")) === null || _a === void 0 ? void 0 : _a.call(this, div);\n                this.annotationEditorLayer = new AnnotationEditorLayer({\n                    uiManager: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayerBuilder_uiManager, \"f\"),\n                    div,\n                    accessibilityManager: this.accessibilityManager,\n                    pageIndex: this.pdfPage.pageNumber - 1,\n                    // l10n: this.l10n,\n                    viewport: clonedViewport,\n                    annotationLayer: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayerBuilder_annotationLayer, \"f\"),\n                    textLayer: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayerBuilder_textLayer, \"f\"),\n                    drawLayer: kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationEditorLayerBuilder_drawLayer, \"f\"),\n                });\n                const parameters = {\n                    viewport: clonedViewport,\n                    div,\n                    annotations: null,\n                    intent,\n                };\n                this.annotationEditorLayer.render(parameters);\n                this.show();\n            });\n        }\n        cancel() {\n            this._cancelled = true;\n            if (!this.div) {\n                return;\n            }\n            this.annotationEditorLayer.destroy();\n        }\n        hide() {\n            if (!this.div) {\n                return;\n            }\n            this.div.hidden = true;\n        }\n        show() {\n            if (!this.div || this.annotationEditorLayer.isInvisible) {\n                return;\n            }\n            this.div.hidden = false;\n        }\n    }\n    _AnnotationEditorLayerBuilder_annotationLayer = new WeakMap(), _AnnotationEditorLayerBuilder_drawLayer = new WeakMap(), _AnnotationEditorLayerBuilder_onAppend = new WeakMap(), _AnnotationEditorLayerBuilder_textLayer = new WeakMap(), _AnnotationEditorLayerBuilder_uiManager = new WeakMap();\n\n    var _Page_instances, _Page_annotationMode, _Page_isEditing, _Page_layerProperties, _Page_previousRotation, _Page_renderingState, _Page_textLayerMode, _Page_viewportMap, _Page_layers, _Page_addLayer, _Page_setDimensions, _Page_dispatchLayerRendered, _Page_renderAnnotationLayer, _Page_renderAnnotationEditorLayer, _Page_renderDrawLayer, _Page_renderTextLayer, _Page_finishRenderTask;\n    const DEFAULT_ZOOM_LEVEL$1 = 1.25;\n    const DEFAULT_LAYER_PROPERTIES = {\n        annotationEditorUIManager: null,\n        annotationStorage: null,\n        downloadManager: null,\n        enableScripting: false,\n        fieldObjectsPromise: null,\n        findController: null,\n        hasJSActionsPromise: null,\n        get linkService() {\n            // return new SimpleLinkService();\n            return null;\n        },\n    };\n    const LAYERS_ORDER = new Map([\n        [\"canvasWrapper\", 0],\n        [\"textLayer\", 1],\n        [\"annotationLayer\", 2],\n        [\"annotationEditorLayer\", 3],\n        [\"xfaLayer\", 3],\n    ]);\n    class Page extends Component {\n        constructor(element, options) {\n            super(element, options);\n            _Page_instances.add(this);\n            // todo: props\n            this.eventBus = null;\n            this.zoomLayer = null;\n            this.div = null;\n            this.viewport = null;\n            this.id = 1;\n            this._accessibilityManager = null;\n            this._annotationCanvasMap = new Map();\n            this.renderTask = null;\n            this.pdfPageRotate = null;\n            this.rotation = null;\n            this.scale = null;\n            this.pdfViewer = null;\n            // todo: props\n            // todo: props ported from pdf.js\n            this.xfaLayer = null;\n            _Page_annotationMode.set(this, kendo_pdfjs_loader_js.AnnotationMode.ENABLE_FORMS);\n            // #enableHWA = false;\n            // #hasRestrictedScaling = false;\n            // // @ts-expect-error(TS)\n            _Page_isEditing.set(this, false);\n            _Page_layerProperties.set(this, null);\n            // #loadingId = null;\n            _Page_previousRotation.set(this, null);\n            // #renderError = null;\n            _Page_renderingState.set(this, RenderingStates.INITIAL);\n            _Page_textLayerMode.set(this, TextLayerMode.ENABLE);\n            // #useThumbnailCanvas = {\n            //   directDrawing: true,\n            //   initialOptionalContent: true,\n            //   regularAnnotations: true,\n            // };\n            _Page_viewportMap.set(this, new WeakMap());\n            _Page_layers.set(this, [null, null, null, null]);\n            // textLayer: HTMLDivElement;\n            this.textLayer = null;\n            this.textLayerBuilder = null;\n            this.textAccessibilityManager = null;\n            this.annotationLayer = null;\n            this.drawLayer = null;\n            this.annotationEditorLayer = null;\n            this.options = {};\n            this.state = {};\n            this.pdfPage = null;\n            this.extendOptions(options);\n            // todo: ported from pdf.js\n            this.div = element;\n            this.viewport = this.options.viewport;\n            this.id = this.options.id || this.options.number || 1;\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _Page_layerProperties, options.layerProperties || DEFAULT_LAYER_PROPERTIES, \"f\");\n            this.eventBus = options.eventBus;\n            this.initScale();\n            // todo: ported from pdf.js\n            this.pdfViewer = options.pdfViewer;\n            this.pdfPage = options.pdfPage;\n            this.resetState();\n        }\n        destroy() {\n            this.destroyTextLayer();\n        }\n        get isEditing() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_isEditing, \"f\");\n        }\n        get rawWidth() {\n            var _a, _b;\n            return (_b = (_a = this.viewport) === null || _a === void 0 ? void 0 : _a.rawDims) === null || _b === void 0 ? void 0 : _b.pageWidth;\n        }\n        get rawHeight() {\n            var _a, _b;\n            return (_b = (_a = this.viewport) === null || _a === void 0 ? void 0 : _a.rawDims) === null || _b === void 0 ? void 0 : _b.pageWidth;\n        }\n        setState(newState) {\n            this.state = deepExtend(this.state || {}, newState);\n        }\n        resetState() {\n            this.setState({});\n        }\n        initScale() {\n            this.scale = this.options.zoomLevel || this.options.scale || DEFAULT_SCALE;\n        }\n        createPromise() {\n            return createPromise();\n        }\n        getViewport(options = { scale: 1 }) {\n            const viewport = this.pdfPage ? this.pdfPage.getViewport(options) : { width: 0, height: 0 };\n            return viewport;\n        }\n        destroyTextLayer() {\n            this.removeTextLayer();\n        }\n        removeTextLayer() {\n            var _a, _b;\n            if (this.textLayer && ((_a = this.textLayer.div) === null || _a === void 0 ? void 0 : _a.parentNode)) {\n                (_b = this.textLayer.div) === null || _b === void 0 ? void 0 : _b.parentNode.removeChild(this.textLayer.div);\n            }\n        }\n        getPrintContentAsync() {\n            const canvas = this.canvasForPrint;\n            const printContentLoadPromise = this.createPromise();\n            const printContent = new Image();\n            const viewportRawDimensions = this.viewport.rawDims;\n            const pageWidth = viewportRawDimensions.pageWidth;\n            const pageHeight = viewportRawDimensions.pageHeight;\n            // const pageWidth = this.viewport.width;\n            // const pageHeight = this.viewport.height;\n            printContent.src = canvas.toDataURL();\n            printContent.width = pageWidth;\n            printContent.height = pageHeight;\n            printContent.onload = () => {\n                // @ts-expect-error TS(2339):\n                printContentLoadPromise.resolve(printContent);\n            };\n            return printContentLoadPromise;\n        }\n        loadForPrintAsync({ zoomLevel = DEFAULT_ZOOM_LEVEL$1, force = false }) {\n            const that = this;\n            const pageLoadPromise = this.createPromise();\n            const pageZoomLevel = this.pdfViewer.state.zoomLevel;\n            if (this.pdfPage && pageZoomLevel === zoomLevel && !force) {\n                // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n                return pageLoadPromise.resolve(that);\n            }\n            else if (this.pdfPage && pageZoomLevel && (pageZoomLevel !== zoomLevel || force)) {\n                this.renderForPrintAsync()\n                    .then(() => {\n                    this.setState({\n                        isPrintingInProgress: false\n                    });\n                    // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n                    pageLoadPromise.resolve(that);\n                });\n                return pageLoadPromise;\n            }\n            const pageIndex = Math.max(0, this.pdfPage._pageIndex);\n            const pagePromise = this.pdfViewer.state.pdfDocument.getPage(pageIndex + 1);\n            pagePromise.then(() => {\n                this.renderForPrintAsync()\n                    .then(() => {\n                    this.setState({\n                        isPrintingInProgress: false\n                    });\n                    // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n                    pageLoadPromise.resolve(that);\n                });\n            });\n            return pageLoadPromise;\n        }\n        renderForPrintAsync() {\n            var _a, _b;\n            const { canvasContext, canvas,\n            // canvasWrapper,\n            // viewport,\n            // pageElement,\n            // _styles\n             } = this.pdfViewer.createPageElements({\n                pdfPage: this.pdfPage,\n                zoom: this.pdfViewer.options.zoomLevel || 1,\n            });\n            this.canvasForPrint = canvas;\n            // canvasWrapper.appendChild(canvas);\n            // pageElement.appendChild(canvasWrapper);\n            this.setState({\n                isPrintingInProgress: true\n            });\n            const printUnits = this.pdfViewer.options.printResolution / kendo_pdfjs_loader_js.PixelsPerInch.PDF;\n            const optionalContentConfigPromise = this.pdfViewer.state.pdfDocument.getOptionalContentConfig({\n                intent: \"print\",\n            });\n            const renderContext = {\n                canvasContext: canvasContext,\n                transform: [printUnits, 0, 0, printUnits, 0, 0],\n                // viewport: this.pdfPage.getViewport({ scale: 1, rotation: size.rotation }),\n                viewport: this.pdfPage.getViewport({ scale: 1, rotation: this.viewport.rotation }),\n                intent: \"print\",\n                annotationMode: kendo_pdfjs_loader_js.AnnotationMode.ENABLE_STORAGE,\n                optionalContentConfigPromise,\n                printAnnotationStorage: (_b = (_a = this.pdfViewer) === null || _a === void 0 ? void 0 : _a.annotationStorage) === null || _b === void 0 ? void 0 : _b.print\n            };\n            const renderTask = this.pdfPage.render(renderContext);\n            const resultPromise = renderTask.promise;\n            return resultPromise;\n        }\n        isBlank() {\n            return this.element && this.element.getAttribute(\"data-blank\");\n        }\n        setBlank(isBlank) {\n            if (!this.element) {\n                return;\n            }\n            if (isBlank) {\n                this.element.setAttribute(\"data-blank\", true.toString());\n            }\n            else {\n                this.element.removeAttribute(\"data-blank\");\n            }\n        }\n        get renderingState() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_renderingState, \"f\");\n        }\n        setPdfPage(pdfPage) {\n            // if (\n            //     (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n            //     this._isStandalone &&\n            //     (this.pageColors?.foreground === \"CanvasText\" ||\n            //         this.pageColors?.background === \"Canvas\")\n            // ) {\n            //     this._container?.style.setProperty(\n            //         \"--hcm-highlight-filter\",\n            //         pdfPage.filterFactory.addHighlightHCMFilter(\n            //             \"highlight\",\n            //             \"CanvasText\",\n            //             \"Canvas\",\n            //             \"HighlightText\",\n            //             \"Highlight\"\n            //         )\n            //     );\n            //     this._container?.style.setProperty(\n            //         \"--hcm-highlight-selected-filter\",\n            //         pdfPage.filterFactory.addHighlightHCMFilter(\n            //             \"highlight_selected\",\n            //             \"CanvasText\",\n            //             \"Canvas\",\n            //             \"HighlightText\",\n            //             \"Highlight\"\n            //         )\n            //     );\n            // }\n            this.pdfPage = pdfPage;\n            this.pdfPageRotate = pdfPage.rotate;\n            const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n            this.viewport = pdfPage.getViewport({\n                scale: this.scale * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS,\n                rotation: totalRotation,\n            });\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_setDimensions).call(this);\n            this.reset();\n        }\n        hasEditableAnnotations() {\n            var _a;\n            return !!((_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.hasEditableAnnotations());\n        }\n        // /**\n        //  * The structure tree is currently only supported when the text layer is\n        //  * enabled and a canvas is used for rendering.\n        //  *\n        //  * The structure tree must be generated after the text layer for the\n        //  * aria-owns to work.\n        //  */\n        // async #renderStructTreeLayer() {\n        //     if (!this.textLayer) {\n        //         return;\n        //     }\n        //     this.structTreeLayer ||= new StructTreeLayerBuilder();\n        //     const tree = await (!this.structTreeLayer.renderingDone\n        //         ? this.pdfPage.getStructTree()\n        //         : null);\n        //     const treeDom = this.structTreeLayer?.render(tree);\n        //     if (treeDom) {\n        //         // Pause translation when inserting the structTree in the DOM.\n        //         this.l10n.pause();\n        //         this.canvas?.append(treeDom);\n        //         this.l10n.resume();\n        //     }\n        //     this.structTreeLayer?.show();\n        // }\n        // async #buildXfaTextContentItems(textDivs) {\n        //     const text = await this.pdfPage.getTextContent();\n        //     const items = [];\n        //     for (const item of text.items) {\n        //         items.push(item.str);\n        //     }\n        //     this._textHighlighter.setTextMapping(textDivs, items);\n        //     this._textHighlighter.enable();\n        // }\n        _resetZoomLayer(removeFromDOM = false) {\n            if (!this.zoomLayer) {\n                return;\n            }\n            const zoomLayerCanvas = this.zoomLayer.firstChild;\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_viewportMap, \"f\").delete(zoomLayerCanvas);\n            // Zeroing the width and height causes Firefox to release graphics\n            // resources immediately, which can greatly reduce memory consumption.\n            zoomLayerCanvas.width = 0;\n            zoomLayerCanvas.height = 0;\n            if (removeFromDOM) {\n                // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n                this.zoomLayer.remove();\n            }\n            this.zoomLayer = null;\n        }\n        reset({ keepZoomLayer = false, keepAnnotationLayer = false, keepAnnotationEditorLayer = false, keepXfaLayer = false, keepTextLayer = false, } = {}) {\n            // this.cancelRendering({\n            //     keepAnnotationLayer,\n            //     keepAnnotationEditorLayer,\n            //     keepXfaLayer,\n            //     keepTextLayer,\n            // });\n            // this.renderingState = RenderingStates.INITIAL;\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            const div = this.div;\n            if (!div) {\n                return;\n            }\n            const childNodes = div.childNodes, zoomLayerNode = (keepZoomLayer && this.zoomLayer) || null, annotationLayerNode = (keepAnnotationLayer && ((_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.div)) || null, annotationEditorLayerNode = (keepAnnotationEditorLayer && ((_b = this.annotationEditorLayer) === null || _b === void 0 ? void 0 : _b.div)) || null, xfaLayerNode = (keepXfaLayer && ((_c = this.xfaLayer) === null || _c === void 0 ? void 0 : _c.div)) || null, textLayerNode = (keepTextLayer && ((_d = this.textLayer) === null || _d === void 0 ? void 0 : _d.div)) || null;\n            for (let i = childNodes.length - 1; i >= 0; i--) {\n                const node = childNodes[i];\n                switch (node) {\n                    case zoomLayerNode:\n                    case annotationLayerNode:\n                    case annotationEditorLayerNode:\n                    case xfaLayerNode:\n                    case textLayerNode:\n                        continue;\n                    default: break;\n                }\n                node.remove();\n                const layerIndex = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_layers, \"f\").indexOf(node);\n                if (layerIndex >= 0) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_layers, \"f\")[layerIndex] = null;\n                }\n            }\n            div.removeAttribute(\"data-loaded\");\n            if (annotationLayerNode) {\n                // Hide the annotation layer until all elements are resized\n                // so they are not displayed on the already resized page.\n                (_e = this.annotationLayer) === null || _e === void 0 ? void 0 : _e.hide();\n            }\n            if (annotationEditorLayerNode) {\n                (_f = this.annotationEditorLayer) === null || _f === void 0 ? void 0 : _f.hide();\n            }\n            if (xfaLayerNode) {\n                // Hide the XFA layer until all elements are resized\n                // so they are not displayed on the already resized page.\n                (_g = this.xfaLayer) === null || _g === void 0 ? void 0 : _g.hide();\n            }\n            if (textLayerNode) {\n                (_h = this.textLayer) === null || _h === void 0 ? void 0 : _h.hide();\n            }\n            // this.structTreeLayer?.hide();\n            if (!zoomLayerNode) {\n                if (this.canvas) {\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_viewportMap, \"f\").delete(this.canvas);\n                    // Zeroing the width and height causes Firefox to release graphics\n                    // resources immediately, which can greatly reduce memory consumption.\n                    this.canvas.width = 0;\n                    this.canvas.height = 0;\n                    delete this.canvas;\n                }\n                this._resetZoomLayer();\n            }\n        }\n        toggleEditingMode(isEditing) {\n            if (!this.hasEditableAnnotations()) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _Page_isEditing, isEditing, \"f\");\n            this.reset({\n                keepZoomLayer: true,\n                keepAnnotationLayer: true,\n                keepAnnotationEditorLayer: true,\n                keepXfaLayer: true,\n                keepTextLayer: true,\n            });\n        }\n        draw() {\n            return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n                // if (this.renderingState !== RenderingStates.INITIAL) {\n                //     console.error(\"Must be in new state before drawing\");\n                //     this.reset(); // Ensure that we reset all state to prevent issues.\n                // }\n                // const { div, l10n, pageColors, pdfPage: pdfPage, viewport } = this;\n                // if (!pdfPage) {\n                //     this.renderingState = RenderingStates.FINISHED;\n                //     throw new Error(\"pdfPage is not loaded\");\n                // }\n                // this.renderingState = RenderingStates.RUNNING;\n                const { canvasContext, canvas, canvasWrapper, viewport, pageElement, styles } = this.pdfViewer.createPageElements({\n                    pdfPage: this.pdfPage,\n                    zoom: this.pdfViewer.options.zoomLevel || 1,\n                });\n                if (this.isBlank()) {\n                    this.element.replaceWith(pageElement);\n                    this.element = this.div = pageElement;\n                    this.canvas = canvas;\n                }\n                else {\n                    this.element = this.div = this.element || this.div || pageElement;\n                    this.canvas = this.canvas || canvas;\n                }\n                this.options.styles = styles;\n                // Wrap the canvas so that if it has a CSS transform for high DPI the\n                // overflow will be hidden in Firefox.\n                // const canvasWrapper = document.createElement(\"div\");\n                // canvasWrapper.classList.add(\"canvasWrapper\");\n                canvasWrapper.appendChild(canvas);\n                this.element.appendChild(canvasWrapper);\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_addLayer).call(this, canvasWrapper, \"canvasWrapper\");\n                const { div, \n                // l10n,\n                // pageColors,\n                pdfPage,\n                // viewport\n                 } = this;\n                if (!this.textLayer && kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_textLayerMode, \"f\") !== TextLayerMode.DISABLE && !pdfPage.isPureXfa) {\n                    this._accessibilityManager || (this._accessibilityManager = new TextAccessibilityManager());\n                    this.textLayer = new TextLayerBuilder({\n                        // todo: not part of pdf.js\n                        styles: this.options.styles,\n                        pdfPage,\n                        // highlighter: this._textHighlighter,\n                        accessibilityManager: this._accessibilityManager,\n                        // enablePermissions: this.#textLayerMode === TextLayerMode.ENABLE_PERMISSIONS,\n                        onAppend: textLayerDiv => {\n                            // Pause translation when inserting the textLayer in the DOM.\n                            // this.l10n.pause();\n                            kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_addLayer).call(this, textLayerDiv, \"textLayer\");\n                            // this.l10n.resume();\n                        },\n                    });\n                }\n                if (!this.annotationLayer && kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_annotationMode, \"f\") !== kendo_pdfjs_loader_js.AnnotationMode.DISABLE) {\n                    const { annotationStorage, annotationEditorUIManager, \n                    // downloadManager,\n                    // enableScripting,\n                    // fieldObjectsPromise,\n                    // hasJSActionsPromise,\n                    linkService, } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_layerProperties, \"f\");\n                    this._annotationCanvasMap || (this._annotationCanvasMap = new Map());\n                    this.annotationLayer = new AnnotationLayerBuilder({\n                        pdfPage,\n                        eventBus: this.eventBus || this.pdfViewer.eventBus,\n                        annotationStorage,\n                        // imageResourcesPath: this.imageResourcesPath,\n                        // renderForms: this.#annotationMode === AnnotationMode.ENABLE_FORMS,\n                        linkService,\n                        // downloadManager,\n                        // enableScripting,\n                        // hasJSActionsPromise,\n                        // fieldObjectsPromise,\n                        annotationCanvasMap: this._annotationCanvasMap,\n                        accessibilityManager: this._accessibilityManager,\n                        annotationEditorUIManager,\n                        onAppend: annotationLayerDiv => {\n                            kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_addLayer).call(this, annotationLayerDiv, \"annotationLayer\");\n                        },\n                    });\n                }\n                // const renderContinueCallback = cont => {\n                //     showCanvas?.(false);\n                //     if (this.renderingQueue && !this.renderingQueue.isHighestPriority(this)) {\n                //         this.renderingState = RenderingStates.PAUSED;\n                //         this.resume = () => {\n                //             this.renderingState = RenderingStates.RUNNING;\n                //             cont();\n                //         };\n                //         return;\n                //     }\n                //     cont();\n                // };\n                // const { width, height } = viewport;\n                // const canvas = document.createElement(\"canvas\");\n                // canvas.setAttribute(\"role\", \"presentation\");\n                // // Keep the canvas hidden until the first draw callback, or until drawing\n                // // is complete when `!this.renderingQueue`, to prevent black flickering.\n                // canvas.hidden = true;\n                // const hasHCM = !!(pageColors?.background && pageColors?.foreground);\n                // let showCanvas = isLastShow => {\n                //     // In HCM, a final filter is applied on the canvas which means that\n                //     // before it's applied we've normal colors. Consequently, to avoid to have\n                //     // a final flash we just display it once all the drawing is done.\n                //     if (!hasHCM || isLastShow) {\n                //         canvas.hidden = false;\n                //         showCanvas = null; // Only invoke the function once.\n                //     }\n                // };\n                // canvasWrapper.append(canvas);\n                // this.canvas = canvas;\n                // const ctx = canvas.getContext(\"2d\", {\n                //     alpha: false,\n                //     willReadFrequently: !this.#enableHWA,\n                // });\n                // const ctx = canvas.getContext(\"2d\");\n                // const outputScale = (this.outputScale = new OutputScale());\n                // if (\n                //     (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n                //     this.maxCanvasPixels === 0\n                // ) {\n                //     const invScale = 1 / this.scale;\n                //     // Use a scale that makes the canvas have the originally intended size\n                //     // of the page.\n                //     outputScale.sx *= invScale;\n                //     outputScale.sy *= invScale;\n                //     this.#hasRestrictedScaling = true;\n                // } else if (this.maxCanvasPixels > 0) {\n                //     const pixelsInViewport = width * height;\n                //     const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n                //     if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n                //         outputScale.sx = maxScale;\n                //         outputScale.sy = maxScale;\n                //         this.#hasRestrictedScaling = true;\n                //     } else {\n                //         this.#hasRestrictedScaling = false;\n                //     }\n                // }\n                // const sfx = approximateFraction(outputScale.sx);\n                // const sfy = approximateFraction(outputScale.sy);\n                // canvas.width = floorToDivide(width * outputScale.sx, sfx[0]);\n                // canvas.height = floorToDivide(height * outputScale.sy, sfy[0]);\n                // const { style } = canvas;\n                // style.width = floorToDivide(width, sfx[1]) + \"px\";\n                // style.height = floorToDivide(height, sfy[1]) + \"px\";\n                // Add the viewport so it's known what it was originally drawn with.\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_viewportMap, \"f\").set(canvas, viewport);\n                // // Rendering area\n                // const transform = outputScale.scaled\n                //     ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0]\n                //     : null;\n                const renderContext = {\n                    canvasContext: canvasContext,\n                    // transform,\n                    viewport,\n                    annotationMode: kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_annotationMode, \"f\"),\n                    // optionalContentConfigPromise: this._optionalContentConfigPromise,\n                    annotationCanvasMap: this._annotationCanvasMap,\n                    // pageColors,\n                    isEditing: kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_isEditing, \"f\"),\n                };\n                // pdfPage.render(renderContext)\n                const renderTask = (this.renderTask = pdfPage.render(renderContext));\n                // renderTask.onContinue = renderContinueCallback;\n                const resultPromise = renderTask.promise.then(() => kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n                    var _a;\n                    // showCanvas?.(true);\n                    yield kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_finishRenderTask).call(this, renderTask);\n                    // todo: awaiting this breaks text nodes positioning after zoom\n                    // if \"includeMarkedContent\": true is set in TextLayerBuilder\n                    yield kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_renderTextLayer).call(this);\n                    // this.#renderTextLayer();\n                    if (this.annotationLayer) {\n                        yield kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_renderAnnotationLayer).call(this);\n                    }\n                    const { annotationEditorUIManager } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_layerProperties, \"f\");\n                    if (!annotationEditorUIManager) {\n                        return;\n                    }\n                    this.drawLayer || (this.drawLayer = new DrawLayerBuilder({\n                        pageIndex: this.id,\n                    }));\n                    yield kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_renderDrawLayer).call(this);\n                    this.drawLayer.setParent(canvasWrapper);\n                    if (!this.annotationEditorLayer) {\n                        this.annotationEditorLayer = new AnnotationEditorLayerBuilder({\n                            uiManager: annotationEditorUIManager,\n                            pdfPage,\n                            // l10n,\n                            accessibilityManager: this._accessibilityManager,\n                            annotationLayer: (_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.annotationLayer,\n                            textLayer: this.textLayer,\n                            drawLayer: this.drawLayer.getDrawLayer(),\n                            onAppend: annotationEditorLayerDiv => {\n                                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_addLayer).call(this, annotationEditorLayerDiv, \"annotationEditorLayer\");\n                            },\n                        });\n                    }\n                    // todo: this is not awaited in pdf.js\n                    kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_renderAnnotationEditorLayer).call(this);\n                    // await this.#renderAnnotationEditorLayer();\n                }), error => {\n                    // When zooming with a `drawingDelay` set, avoid temporarily showing\n                    // a black canvas if rendering was cancelled before the `onContinue`-\n                    // callback had been invoked at least once.\n                    // if (!(error instanceof RenderingCancelledException)) {\n                    //     showCanvas?.(true);\n                    // }\n                    // return this.#finishRenderTask(renderTask, error);\n                    if (!error) {\n                        return;\n                    }\n                });\n                if (pdfPage.isPureXfa) {\n                    // if (!this.xfaLayer) {\n                    //     const { annotationStorage, linkService } = this.#layerProperties;\n                    //     this.xfaLayer = new XfaLayerBuilder({\n                    //         pdfPage,\n                    //         annotationStorage,\n                    //         linkService,\n                    //     });\n                    // }\n                    // this.#renderXfaLayer();\n                }\n                div.setAttribute(\"data-loaded\", true);\n                this.eventBus.dispatch(\"pagerender\", {\n                    source: this,\n                    pageNumber: this.id,\n                });\n                return resultPromise;\n            });\n        }\n    }\n    _Page_annotationMode = new WeakMap(), _Page_isEditing = new WeakMap(), _Page_layerProperties = new WeakMap(), _Page_previousRotation = new WeakMap(), _Page_renderingState = new WeakMap(), _Page_textLayerMode = new WeakMap(), _Page_viewportMap = new WeakMap(), _Page_layers = new WeakMap(), _Page_instances = new WeakSet(), _Page_addLayer = function _Page_addLayer(div, name) {\n        const pos = LAYERS_ORDER.get(name);\n        const oldDiv = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_layers, \"f\")[pos];\n        kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_layers, \"f\")[pos] = div;\n        if (oldDiv) {\n            oldDiv.replaceWith(div);\n            return;\n        }\n        for (let i = pos - 1; i >= 0; i--) {\n            const layer = kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_layers, \"f\")[i];\n            if (layer) {\n                layer.after(div);\n                return;\n            }\n        }\n        this.div.prepend(div);\n    }, _Page_setDimensions = function _Page_setDimensions() {\n        const { viewport } = this;\n        if (this.pdfPage) {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_previousRotation, \"f\") === viewport.rotation) {\n                return;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _Page_previousRotation, viewport.rotation, \"f\");\n        }\n        if (!this.div || !viewport) {\n            return;\n        }\n        kendo_pdfjs_loader_js.setLayerDimensions(this.div, viewport, \n        /* mustFlip = */ true, \n        /* mustRotate = */ false);\n    }, _Page_dispatchLayerRendered = function _Page_dispatchLayerRendered(name, error) {\n        this.eventBus.dispatch(name, {\n            source: this,\n            pageNumber: this.id,\n            error,\n        });\n    }, _Page_renderAnnotationLayer = function _Page_renderAnnotationLayer() {\n        return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n            let error = null;\n            try {\n                yield this.annotationLayer.render(this.viewport, \"display\");\n            }\n            catch (ex) {\n                console.error(`#renderAnnotationLayer: \"${ex}\".`);\n                error = ex;\n            }\n            finally {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_dispatchLayerRendered).call(this, \"annotationlayerrendered\", error);\n            }\n        });\n    }, _Page_renderAnnotationEditorLayer = function _Page_renderAnnotationEditorLayer() {\n        return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n            let error = null;\n            try {\n                // await this.annotationEditorLayer.render(this.viewport, \"display\");\n                yield this.annotationEditorLayer.render(this.viewport);\n            }\n            catch (ex) {\n                // console.error(`#renderAnnotationEditorLayer: \"${ex}\".`);\n                error = ex;\n            }\n            finally {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_dispatchLayerRendered).call(this, \"annotationeditorlayerrendered\", error);\n            }\n        });\n    }, _Page_renderDrawLayer = function _Page_renderDrawLayer() {\n        return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n            try {\n                yield this.drawLayer.render(\"display\");\n            }\n            catch (ex) {\n                // console.error(`#renderDrawLayer: \"${ex}\".`);\n            }\n        });\n    }, _Page_renderTextLayer = function _Page_renderTextLayer() {\n        return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n            if (!this.textLayer) {\n                return;\n            }\n            let error = null;\n            try {\n                yield this.textLayer.render(this.viewport);\n            }\n            catch (ex) {\n                if (ex instanceof kendo_pdfjs_loader_js.AbortException) {\n                    return;\n                }\n                // console.error(`#renderTextLayer: \"${ex}\".`);\n                error = ex;\n            }\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _Page_instances, \"m\", _Page_dispatchLayerRendered).call(this, \"textlayerrendered\", error);\n            // this.#renderStructTreeLayer();\n        });\n    }, _Page_finishRenderTask = function _Page_finishRenderTask(renderTask) {\n        return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n            // The renderTask may have been replaced by a new one, so only remove\n            // the reference to the renderTask if it matches the one that is\n            // triggering this callback.\n            if (renderTask === this.renderTask) {\n                this.renderTask = null;\n            }\n            //     if (error instanceof RenderingCancelledException) {\n            //         this.#renderError = null;\n            //         return;\n            //     }\n            //     this.#renderError = error;\n            //     this.renderingState = RenderingStates.FINISHED;\n            this._resetZoomLayer(/* removeFromDOM = */ true);\n            //     // Ensure that the thumbnails won't become partially (or fully) blank,\n            //     // for documents that contain interactive form elements.\n            //     this.#useThumbnailCanvas.regularAnnotations = !renderTask.separateAnnots;\n            this.eventBus.dispatch(\"pagerendered\", {\n                source: this,\n                pageNumber: this.id,\n                cssTransform: false,\n                timestamp: performance.now(),\n                // error: this.#renderError,\n                error: \"page render error\",\n            });\n            //     if (error) {\n            //         throw error;\n            //     }\n        });\n    };\n\n    /* Copyright 2014 Opera Software ASA\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     *\n     *\n     * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n     * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n     */\n    const SEED = 0xc3d2e1f0;\n    // Workaround for missing math precision in JS.\n    const MASK_HIGH = 0xffff0000;\n    const MASK_LOW = 0xffff;\n    class MurmurHash3_64 {\n        // todo: props\n        constructor(seed) {\n            // todo: props\n            this.h1 = null;\n            this.h2 = null;\n            this.h1 = seed ? seed & 0xffffffff : SEED;\n            this.h2 = seed ? seed & 0xffffffff : SEED;\n        }\n        update(input) {\n            let data, length;\n            if (typeof input === \"string\") {\n                data = new Uint8Array(input.length * 2);\n                length = 0;\n                for (let i = 0, ii = input.length; i < ii; i++) {\n                    const code = input.charCodeAt(i);\n                    if (code <= 0xff) {\n                        data[length++] = code;\n                    }\n                    else {\n                        data[length++] = code >>> 8;\n                        data[length++] = code & 0xff;\n                    }\n                }\n            }\n            else if (ArrayBuffer.isView(input)) {\n                data = input.slice();\n                length = data.byteLength;\n            }\n            else {\n                throw new Error(\"Invalid data format, must be a string or TypedArray.\");\n            }\n            const blockCounts = length >> 2;\n            const tailLength = length - blockCounts * 4;\n            // We don't care about endianness here.\n            const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n            let k1 = 0, k2 = 0;\n            let h1 = this.h1, h2 = this.h2;\n            const C1 = 0xcc9e2d51, C2 = 0x1b873593;\n            const C1_LOW = C1 & MASK_LOW, C2_LOW = C2 & MASK_LOW;\n            for (let i = 0; i < blockCounts; i++) {\n                if (i & 1) {\n                    k1 = dataUint32[i];\n                    k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n                    k1 = (k1 << 15) | (k1 >>> 17);\n                    k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n                    h1 ^= k1;\n                    h1 = (h1 << 13) | (h1 >>> 19);\n                    h1 = h1 * 5 + 0xe6546b64;\n                }\n                else {\n                    k2 = dataUint32[i];\n                    k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n                    k2 = (k2 << 15) | (k2 >>> 17);\n                    k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n                    h2 ^= k2;\n                    h2 = (h2 << 13) | (h2 >>> 19);\n                    h2 = h2 * 5 + 0xe6546b64;\n                }\n            }\n            k1 = 0;\n            switch (tailLength) {\n                case 3:\n                    k1 ^= data[blockCounts * 4 + 2] << 16;\n                /* falls through */\n                case 2:\n                    k1 ^= data[blockCounts * 4 + 1] << 8;\n                /* falls through */\n                case 1:\n                    k1 ^= data[blockCounts * 4];\n                    /* falls through */\n                    k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n                    k1 = (k1 << 15) | (k1 >>> 17);\n                    k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n                    if (blockCounts & 1) {\n                        h1 ^= k1;\n                    }\n                    else {\n                        h2 ^= k1;\n                    }\n                    break;\n                default: break;\n            }\n            this.h1 = h1;\n            this.h2 = h2;\n        }\n        hexdigest() {\n            let h1 = this.h1, h2 = this.h2;\n            h1 ^= h2 >>> 1;\n            h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n            h2 =\n                ((h2 * 0xff51afd7) & MASK_HIGH) |\n                    (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n            h1 ^= h2 >>> 1;\n            h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n            h2 =\n                ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n                    (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n            h1 ^= h2 >>> 1;\n            return ((h1 >>> 0).toString(16).padStart(8, \"0\") +\n                (h2 >>> 0).toString(16).padStart(8, \"0\"));\n        }\n    }\n\n    /* Copyright 2020 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _AnnotationStorage_instances, _AnnotationStorage_modified, _AnnotationStorage_modifiedIds, _AnnotationStorage_storage, _AnnotationStorage_setModified, _PrintAnnotationStorage_serializable;\n    const SerializableEmpty = Object.freeze({\n        map: null,\n        hash: \"\",\n        transfer: undefined,\n    });\n    /**\n     * Key/value storage for annotation data in forms.\n     */\n    class AnnotationStorage {\n        constructor() {\n            _AnnotationStorage_instances.add(this);\n            // todo: props\n            this.onSetModified = null;\n            this.onResetModified = null;\n            this.onAnnotationEditor = null;\n            // todo: props\n            _AnnotationStorage_modified.set(this, false);\n            _AnnotationStorage_modifiedIds.set(this, null);\n            _AnnotationStorage_storage.set(this, new Map());\n            // Callbacks to signal when the modification state is set or reset.\n            // This is used by the viewer to only bind on `beforeunload` if forms\n            // are actually edited to prevent doing so unconditionally since that\n            // can have undesirable effects.\n            this.onSetModified = null;\n            this.onResetModified = null;\n            this.onAnnotationEditor = null;\n        }\n        /**\n         * Get the value for a given key if it exists, or return the default value.\n         * @param {string} key\n         * @param {Object} defaultValue\n         * @returns {Object}\n         */\n        getValue(key, defaultValue) {\n            const value = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").get(key);\n            if (value === undefined) {\n                return defaultValue;\n            }\n            return Object.assign(defaultValue, value);\n        }\n        /**\n         * Get the value for a given key.\n         * @param {string} key\n         * @returns {Object}\n         */\n        getRawValue(key) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").get(key);\n        }\n        /**\n         * Remove a value from the storage.\n         * @param {string} key\n         */\n        remove(key) {\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").delete(key);\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").size === 0) {\n                this.resetModified();\n            }\n            if (typeof this.onAnnotationEditor === \"function\") {\n                for (const value of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").values()) {\n                    if (value instanceof AnnotationEditor) {\n                        return;\n                    }\n                }\n                this.onAnnotationEditor(null);\n            }\n        }\n        /**\n         * Set the value for a given key\n         * @param {string} key\n         * @param {Object} value\n         */\n        setValue(key, value) {\n            const obj = kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").get(key);\n            let modified = false;\n            if (obj !== undefined) {\n                for (const [entry, val] of Object.entries(value)) {\n                    if (obj[entry] !== val) {\n                        modified = true;\n                        obj[entry] = val;\n                    }\n                }\n            }\n            else {\n                modified = true;\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").set(key, value);\n            }\n            if (modified) {\n                kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_instances, \"m\", _AnnotationStorage_setModified).call(this);\n            }\n            if (value instanceof AnnotationEditor &&\n                typeof this.onAnnotationEditor === \"function\") {\n                this.onAnnotationEditor(value.constructor._type);\n            }\n        }\n        /**\n         * Check if the storage contains the given key.\n         * @param {string} key\n         * @returns {boolean}\n         */\n        has(key) {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").has(key);\n        }\n        /**\n         * @returns {Object | null}\n         */\n        getAll() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").size > 0 ? objectFromMap(kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\")) : null;\n        }\n        /**\n         * @param {Object} obj\n         */\n        setAll(obj) {\n            for (const [key, val] of Object.entries(obj)) {\n                this.setValue(key, val);\n            }\n        }\n        get size() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").size;\n        }\n        resetModified() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_modified, \"f\")) {\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationStorage_modified, false, \"f\");\n                if (typeof this.onResetModified === \"function\") {\n                    this.onResetModified();\n                }\n            }\n        }\n        /**\n         * @returns {PrintAnnotationStorage}\n         */\n        get print() {\n            return new PrintAnnotationStorage(this);\n        }\n        /**\n         * PLEASE NOTE: Only intended for usage within the API itself.\n         * @ignore\n         */\n        get serializable() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").size === 0) {\n                return SerializableEmpty;\n            }\n            const map = new Map(), hash = new MurmurHash3_64(null), transfer = [];\n            const context = Object.create(null);\n            let hasBitmap = false;\n            for (const [key, val] of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\")) {\n                const serialized = val instanceof AnnotationEditor\n                    ? val.serialize(/* isForCopying = */ false, context)\n                    : val;\n                if (serialized) {\n                    map.set(key, serialized);\n                    hash.update(`${key}:${JSON.stringify(serialized)}`);\n                    hasBitmap || (hasBitmap = !!serialized.bitmap);\n                }\n            }\n            if (hasBitmap) {\n                // We must transfer the bitmap data separately, since it can be changed\n                // during serialization with SVG images.\n                for (const value of map.values()) {\n                    if (value.bitmap) {\n                        transfer.push(value.bitmap);\n                    }\n                }\n            }\n            return map.size > 0\n                ? { map, hash: hash.hexdigest(), transfer }\n                : SerializableEmpty;\n        }\n        get editorStats() {\n            var _a;\n            let stats = null;\n            const typeToEditor = new Map();\n            for (const value of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").values()) {\n                if (!(value instanceof AnnotationEditor)) {\n                    continue;\n                }\n                const editorStats = value.telemetryFinalData;\n                if (!editorStats) {\n                    continue;\n                }\n                const { type } = editorStats;\n                if (!typeToEditor.has(type)) {\n                    typeToEditor.set(type, Object.getPrototypeOf(value).constructor);\n                }\n                stats || (stats = Object.create(null));\n                const map = (stats[type] || (stats[type] = new Map()));\n                for (const [key, val] of Object.entries(editorStats)) {\n                    if (key === \"type\") {\n                        continue;\n                    }\n                    let counters = map.get(key);\n                    if (!counters) {\n                        counters = new Map();\n                        map.set(key, counters);\n                    }\n                    const count = (_a = counters.get(val)) !== null && _a !== void 0 ? _a : 0;\n                    counters.set(val, count + 1);\n                }\n            }\n            for (const [type, editor] of typeToEditor) {\n                stats[type] = editor.computeTelemetryFinalData(stats[type]);\n            }\n            return stats;\n        }\n        resetModifiedIds() {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationStorage_modifiedIds, null, \"f\");\n        }\n        /**\n         * @returns {{ids: Set<string>, hash: string}}\n         */\n        get modifiedIds() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_modifiedIds, \"f\")) {\n                return kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_modifiedIds, \"f\");\n            }\n            const ids = [];\n            for (const value of kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_storage, \"f\").values()) {\n                if (!(value instanceof AnnotationEditor) ||\n                    !value.annotationElementId ||\n                    !(value.serialize())) {\n                    continue;\n                }\n                ids.push(value.annotationElementId);\n            }\n            return (kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationStorage_modifiedIds, {\n                ids: new Set(ids),\n                hash: ids.join(\",\"),\n            }, \"f\"));\n        }\n    }\n    _AnnotationStorage_modified = new WeakMap(), _AnnotationStorage_modifiedIds = new WeakMap(), _AnnotationStorage_storage = new WeakMap(), _AnnotationStorage_instances = new WeakSet(), _AnnotationStorage_setModified = function _AnnotationStorage_setModified() {\n        if (!kendo_dateinputsCommon_cmn_chunk_js.a(this, _AnnotationStorage_modified, \"f\")) {\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _AnnotationStorage_modified, true, \"f\");\n            if (typeof this.onSetModified === \"function\") {\n                this.onSetModified();\n            }\n        }\n    };\n    /**\n     * A special `AnnotationStorage` for use during printing, where the serializable\n     * data is *frozen* upon initialization, to prevent scripting from modifying its\n     * contents. (Necessary since printing is triggered synchronously in browsers.)\n     */\n    class PrintAnnotationStorage extends AnnotationStorage {\n        constructor(parent) {\n            super();\n            _PrintAnnotationStorage_serializable.set(this, void 0);\n            const { map, hash, transfer } = parent.serializable;\n            // Create a *copy* of the data, since Objects are passed by reference in JS.\n            const clone = structuredClone(map, transfer ? { transfer } : null);\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PrintAnnotationStorage_serializable, { map: clone, hash, transfer }, \"f\");\n        }\n        /**\n         * @returns {PrintAnnotationStorage}\n         */\n        // eslint-disable-next-line getter-return\n        get print() {\n            // unreachable(\"Should not call PrintAnnotationStorage.print\");\n            return null;\n        }\n        /**\n         * PLEASE NOTE: Only intended for usage within the API itself.\n         * @ignore\n         */\n        get serializable() {\n            return kendo_dateinputsCommon_cmn_chunk_js.a(this, _PrintAnnotationStorage_serializable, \"f\");\n        }\n        get modifiedIds() {\n            return kendo_pdfjs_loader_js.shadow(this, \"modifiedIds\", {\n                ids: new Set(),\n                hash: \"\",\n            });\n        }\n    }\n    _PrintAnnotationStorage_serializable = new WeakMap();\n\n    /* Copyright 2015 Mozilla Foundation\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var _a, _PDFLinkService_isValidExplicitDest;\n    const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n    const LinkTarget = {\n        NONE: 0, // Default value.\n        SELF: 1,\n        BLANK: 2,\n        PARENT: 3,\n        TOP: 4,\n    };\n    /**\n     * @typedef {Object} PDFLinkServiceOptions\n     * @property {EventBus} eventBus - The application event bus.\n     * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n     *   for external links. Must use one of the values from {LinkTarget}.\n     *   Defaults to using no target.\n     * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n     *   external links. Defaults to stripping the referrer.\n     * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n     *   thus preserving the current zoom level in the viewer, when navigating\n     *   to internal destinations. The default value is `false`.\n     */\n    /**\n     * Performs navigation functions inside PDF, such as opening specified page,\n     * or destination.\n     * @implements {IPDFLinkService}\n     */\n    class PDFLinkService {\n        /**\n         * @param {PDFLinkServiceOptions} options\n         */\n        constructor({ eventBus = null, externalLinkTarget = null, externalLinkRel = null, ignoreDestinationZoom = false, } = {}) {\n            // todo: props\n            this.eventBus = null;\n            this.externalLinkTarget = null;\n            this.externalLinkRel = null;\n            this._ignoreDestinationZoom = null;\n            this.baseUrl = null;\n            this.pdfDocument = null;\n            this.pdfViewer = null;\n            this.pdfHistory = null;\n            // todo: props\n            this.externalLinkEnabled = true;\n            this.eventBus = eventBus;\n            this.externalLinkTarget = externalLinkTarget;\n            this.externalLinkRel = externalLinkRel;\n            this._ignoreDestinationZoom = ignoreDestinationZoom;\n            this.baseUrl = null;\n            this.pdfDocument = null;\n            this.pdfViewer = null;\n            this.pdfHistory = null;\n        }\n        setDocument(pdfDocument, baseUrl = null) {\n            this.baseUrl = baseUrl;\n            this.pdfDocument = pdfDocument;\n        }\n        setViewer(pdfViewer) {\n            this.pdfViewer = pdfViewer;\n        }\n        setHistory(pdfHistory) {\n            this.pdfHistory = pdfHistory;\n        }\n        /**\n         * @type {number}\n         */\n        get pagesCount() {\n            return this.pdfDocument ? this.pdfDocument.numPages : 0;\n        }\n        /**\n         * @type {number}\n         */\n        get page() {\n            return this.pdfDocument ? this.pdfViewer.currentPageNumber : 1;\n        }\n        /**\n         * @param {number} value\n         */\n        set page(value) {\n            if (this.pdfDocument) {\n                this.pdfViewer.currentPageNumber = value;\n            }\n        }\n        /**\n         * @type {number}\n         */\n        get rotation() {\n            return this.pdfDocument ? this.pdfViewer.pagesRotation : 0;\n        }\n        /**\n         * @param {number} value\n         */\n        set rotation(value) {\n            if (this.pdfDocument) {\n                this.pdfViewer.pagesRotation = value;\n            }\n        }\n        /**\n         * @type {boolean}\n         */\n        get isInPresentationMode() {\n            return this.pdfDocument ? this.pdfViewer.isInPresentationMode : false;\n        }\n        /**\n         * This method will, when available, also update the browser history.\n         *\n         * @param {string|Array} dest - The named, or explicit, PDF destination.\n         */\n        goToDestination(dest) {\n            return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n                if (!this.pdfDocument) {\n                    return;\n                }\n                let namedDest, explicitDest, pageNumber;\n                if (typeof dest === \"string\") {\n                    namedDest = dest;\n                    explicitDest = yield this.pdfDocument.getDestination(dest);\n                }\n                else {\n                    namedDest = null;\n                    explicitDest = yield dest;\n                }\n                if (!Array.isArray(explicitDest)) {\n                    // console.error(\n                    //     `goToDestination: \"${explicitDest}\" is not a valid destination array, for dest=\"${dest}\".`\n                    // );\n                    return;\n                }\n                // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n                const [destRef] = explicitDest;\n                if (destRef && typeof destRef === \"object\") {\n                    pageNumber = this.pdfDocument.cachedPageNumber(destRef);\n                    if (!pageNumber) {\n                        // Fetch the page reference if it's not yet available. This could\n                        // only occur during loading, before all pages have been resolved.\n                        try {\n                            pageNumber = (yield this.pdfDocument.getPageIndex(destRef)) + 1;\n                        }\n                        catch (_b) {\n                            console.error(`goToDestination: \"${destRef}\" is not a valid page reference, for dest=\"${dest}\".`);\n                            return;\n                        }\n                    }\n                }\n                else if (Number.isInteger(destRef)) {\n                    pageNumber = destRef + 1;\n                }\n                if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n                    console.error(`goToDestination: \"${pageNumber}\" is not a valid page number, for dest=\"${dest}\".`);\n                    return;\n                }\n                if (this.pdfHistory) {\n                    // Update the browser history before scrolling the new destination into\n                    // view, to be able to accurately capture the current document position.\n                    this.pdfHistory.pushCurrentPosition();\n                    this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n                }\n                this.pdfViewer.scrollPageIntoView({\n                    pageNumber,\n                    destArray: explicitDest,\n                    ignoreDestinationZoom: this._ignoreDestinationZoom,\n                });\n            });\n        }\n        /**\n         * This method will, when available, also update the browser history.\n         *\n         * @param {number|string} val - The page number, or page label.\n         */\n        goToPage(val) {\n            if (!this.pdfDocument) {\n                return;\n            }\n            const pageNumber = (typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val)) ||\n                val | 0;\n            if (!(Number.isInteger(pageNumber) &&\n                pageNumber > 0 &&\n                pageNumber <= this.pagesCount)) {\n                console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n                return;\n            }\n            if (this.pdfHistory) {\n                // Update the browser history before scrolling the new page into view,\n                // to be able to accurately capture the current document position.\n                this.pdfHistory.pushCurrentPosition();\n                this.pdfHistory.pushPage(pageNumber);\n            }\n            this.pdfViewer.scrollPageIntoView({ pageNumber });\n        }\n        /**\n         * Adds various attributes (href, title, target, rel) to hyperlinks.\n         * @param {HTMLAnchorElement} link\n         * @param {string} url\n         * @param {boolean} [newWindow]\n         */\n        addLinkAttributes(link, url, newWindow = false) {\n            if (!url || typeof url !== \"string\") {\n                throw new Error('A valid \"url\" parameter must provided.');\n            }\n            const target = newWindow ? LinkTarget.BLANK : this.externalLinkTarget, rel = this.externalLinkRel;\n            if (this.externalLinkEnabled) {\n                link.href = link.title = url;\n            }\n            else {\n                link.href = \"\";\n                link.title = `Disabled: ${url}`;\n                link.onclick = () => false;\n            }\n            let targetStr = \"\"; // LinkTarget.NONE\n            switch (target) {\n                case LinkTarget.NONE:\n                    break;\n                case LinkTarget.SELF:\n                    targetStr = \"_self\";\n                    break;\n                case LinkTarget.BLANK:\n                    targetStr = \"_blank\";\n                    break;\n                case LinkTarget.PARENT:\n                    targetStr = \"_parent\";\n                    break;\n                case LinkTarget.TOP:\n                    targetStr = \"_top\";\n                    break;\n                default: break;\n            }\n            link.target = targetStr;\n            link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n        }\n        /**\n         * @param {string|Array} dest - The PDF destination object.\n         * @returns {string} The hyperlink to the PDF object.\n         */\n        getDestinationHash(dest) {\n            if (typeof dest === \"string\") {\n                if (dest.length > 0) {\n                    return this.getAnchorUrl(\"#\" + escape(dest));\n                }\n            }\n            else if (Array.isArray(dest)) {\n                const str = JSON.stringify(dest);\n                if (str.length > 0) {\n                    return this.getAnchorUrl(\"#\" + escape(str));\n                }\n            }\n            return this.getAnchorUrl(\"\");\n        }\n        /**\n         * Prefix the full url on anchor links to make sure that links are resolved\n         * relative to the current URL instead of the one defined in <base href>.\n         * @param {string} anchor - The anchor hash, including the #.\n         * @returns {string} The hyperlink to the PDF object.\n         */\n        getAnchorUrl(anchor) {\n            return this.baseUrl ? this.baseUrl + anchor : anchor;\n        }\n        /**\n         * @param {string} hash\n         */\n        setHash(hash) {\n            if (!this.pdfDocument) {\n                return;\n            }\n            let pageNumber, dest;\n            if (hash.includes(\"=\")) {\n                const params = parseQueryString(hash);\n                if (params.has(\"search\")) {\n                    const query = params.get(\"search\").replaceAll('\"', \"\"), phrase = params.get(\"phrase\") === \"true\";\n                    this.eventBus.dispatch(\"findfromurlhash\", {\n                        source: this,\n                        query: phrase ? query : query.match(/\\S+/g),\n                    });\n                }\n                // borrowing syntax from \"Parameters for Opening PDF Files\"\n                if (params.has(\"page\")) {\n                    pageNumber = params.get(\"page\") | 0 || 1;\n                }\n                if (params.has(\"zoom\")) {\n                    // Build the destination array.\n                    const zoomArgs = params.get(\"zoom\").split(\",\"); // scale,left,top\n                    const zoomArg = zoomArgs[0];\n                    const zoomArgNumber = parseFloat(zoomArg);\n                    if (!zoomArg.includes(\"Fit\")) {\n                        // If the zoomArg is a number, it has to get divided by 100. If it's\n                        // a string, it should stay as it is.\n                        dest = [\n                            null,\n                            { name: \"XYZ\" },\n                            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n                            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n                            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n                        ];\n                    }\n                    else if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n                        dest = [null, { name: zoomArg }];\n                    }\n                    else if (zoomArg === \"FitH\" ||\n                        zoomArg === \"FitBH\" ||\n                        zoomArg === \"FitV\" ||\n                        zoomArg === \"FitBV\") {\n                        dest = [\n                            null,\n                            { name: zoomArg },\n                            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n                        ];\n                    }\n                    else if (zoomArg === \"FitR\") {\n                        if (zoomArgs.length !== 5) {\n                            console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n                        }\n                        else {\n                            dest = [\n                                null,\n                                { name: zoomArg },\n                                zoomArgs[1] | 0,\n                                zoomArgs[2] | 0,\n                                zoomArgs[3] | 0,\n                                zoomArgs[4] | 0,\n                            ];\n                        }\n                    }\n                    else {\n                        console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not a valid zoom value.`);\n                    }\n                }\n                if (dest) {\n                    this.pdfViewer.scrollPageIntoView({\n                        pageNumber: pageNumber || this.page,\n                        destArray: dest,\n                        allowNegativeOffset: true,\n                    });\n                }\n                else if (pageNumber) {\n                    this.page = pageNumber; // simple page\n                }\n                if (params.has(\"pagemode\")) {\n                    this.eventBus.dispatch(\"pagemode\", {\n                        source: this,\n                        mode: params.get(\"pagemode\"),\n                    });\n                }\n                // Ensure that this parameter is *always* handled last, in order to\n                // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n                if (params.has(\"nameddest\")) {\n                    this.goToDestination(params.get(\"nameddest\"));\n                }\n                // if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n                return;\n                // }\n                // // Support opening of PDF attachments in the Firefox PDF Viewer,\n                // // which uses a couple of non-standard hash parameters; refer to\n                // // `DownloadManager.openOrDownloadData` in the firefoxcom.js file.\n                // if (!params.has(\"filename\") || !params.has(\"filedest\")) {\n                //     return;\n                // }\n                // hash = params.get(\"filedest\");\n            }\n            // Named (or explicit) destination.\n            dest = unescape(hash);\n            try {\n                dest = JSON.parse(dest);\n                if (!Array.isArray(dest)) {\n                    // Avoid incorrectly rejecting a valid named destination, such as\n                    // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n                    dest = dest.toString();\n                }\n            }\n            catch (e) {\n                if (!e) {\n                    return;\n                }\n            }\n            if (typeof dest === \"string\" || kendo_dateinputsCommon_cmn_chunk_js.a(_a, _a, \"m\", _PDFLinkService_isValidExplicitDest).call(_a, dest)) {\n                this.goToDestination(dest);\n                return;\n            }\n            // console.error(\n            //     `PDFLinkService.setHash: \"${unescape(hash)}\" is not a valid destination.`\n            // );\n        }\n        /**\n         * @param {string} action\n         */\n        executeNamedAction(action) {\n            var _b, _c;\n            if (!this.pdfDocument) {\n                return;\n            }\n            // See PDF reference, table 8.45 - Named action\n            switch (action) {\n                case \"GoBack\":\n                    (_b = this.pdfHistory) === null || _b === void 0 ? void 0 : _b.back();\n                    break;\n                case \"GoForward\":\n                    (_c = this.pdfHistory) === null || _c === void 0 ? void 0 : _c.forward();\n                    break;\n                case \"NextPage\":\n                    this.pdfViewer.nextPage();\n                    break;\n                case \"PrevPage\":\n                    this.pdfViewer.previousPage();\n                    break;\n                case \"LastPage\":\n                    this.page = this.pagesCount;\n                    break;\n                case \"FirstPage\":\n                    this.page = 1;\n                    break;\n                default:\n                    break; // No action according to spec\n            }\n            this.eventBus.dispatch(\"namedaction\", {\n                source: this,\n                action,\n            });\n        }\n        /**\n         * @param {Object} action\n         */\n        executeSetOCGState(action) {\n            return kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n                if (!this.pdfDocument) {\n                    return;\n                }\n                const pdfDocument = this.pdfDocument, optionalContentConfig = yield this.pdfViewer.optionalContentConfigPromise;\n                if (pdfDocument !== this.pdfDocument) {\n                    return; // The document was closed while the optional content resolved.\n                }\n                optionalContentConfig.setOCGState(action);\n                this.pdfViewer.optionalContentConfigPromise = Promise.resolve(optionalContentConfig);\n            });\n        }\n    }\n    _a = PDFLinkService, _PDFLinkService_isValidExplicitDest = function _PDFLinkService_isValidExplicitDest(dest) {\n        if (!Array.isArray(dest) || dest.length < 2) {\n            return false;\n        }\n        const [page, zoom, ...args] = dest;\n        if (!(typeof page === \"object\" &&\n            Number.isInteger(page === null || page === void 0 ? void 0 : page.num) &&\n            Number.isInteger(page === null || page === void 0 ? void 0 : page.gen)) &&\n            !Number.isInteger(page)) {\n            return false;\n        }\n        if (!(typeof zoom === \"object\" && typeof (zoom === null || zoom === void 0 ? void 0 : zoom.name) === \"string\")) {\n            return false;\n        }\n        const argsLen = args.length;\n        let allowNull = true;\n        switch (zoom.name) {\n            case \"XYZ\":\n                if (argsLen < 2 || argsLen > 3) {\n                    return false;\n                }\n                break;\n            case \"Fit\":\n            case \"FitB\":\n                return argsLen === 0;\n            case \"FitH\":\n            case \"FitBH\":\n            case \"FitV\":\n            case \"FitBV\":\n                if (argsLen > 1) {\n                    return false;\n                }\n                break;\n            case \"FitR\":\n                if (argsLen !== 4) {\n                    return false;\n                }\n                allowNull = false;\n                break;\n            default:\n                return false;\n        }\n        for (const arg of args) {\n            if (!(typeof arg === \"number\" || (allowNull && arg === null))) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    var PdfViewerInteractionMode;\n    (function (PdfViewerInteractionMode) {\n        PdfViewerInteractionMode[PdfViewerInteractionMode[\"TextSelection\"] = 0] = \"TextSelection\";\n        PdfViewerInteractionMode[PdfViewerInteractionMode[\"Pan\"] = 1] = \"Pan\";\n    })(PdfViewerInteractionMode || (PdfViewerInteractionMode = {}));\n    ;\n\n    var _PdfViewer_instances, _PdfViewer_annotationEditorMode, _PdfViewer_switchAnnotationEditorModeTimeoutId, _PdfViewer_eventAbortController, _PdfViewer_onPageRenderedCallback, _PdfViewer_switchToEditAnnotationMode, _PdfViewer_scrollIntoView;\n    const PDF_JS = \"pdfjs\";\n    const ERROR = \"error\";\n    const ZOOM_START = \"zoomStart\";\n    const ZOOM_END = \"zoomEnd\";\n    const PAGES_LOAD = \"pagesLoad\";\n    const PRINT_END = \"printEnd\";\n    const SCROLL = \"scroll\";\n    const DOWNLOAD = \"download\";\n    const ANNOTATION_EDITOR_TOOLBAR_SHOW = \"annotationEditorToolBarShow\";\n    const ANNOTATION_EDITOR_TOOLBAR_HIDE = \"annotationEditorToolBarHide\";\n    const DEFAULT_ZOOM_LEVEL = 1.25;\n    const FRAMES_PER_SECOND = 1000 / 60;\n    class PdfViewer extends Component {\n        constructor(element, options) {\n            super(element, options);\n            _PdfViewer_instances.add(this);\n            this.options = {\n                pdfServiceType: PDF_JS,\n                // this is a flag used mainly in tests as CSSStyleSheet.replaceSync\n                // fails with jsdom\n                // a better solution is not to load a stylesheet in setHiddenCanvasStyles\n                // but rather create a class like \"k-hidden-canvas-element\"\n                // and override the rendering from pdf.js\n                pdfjsSetHiddenCanvasStyles: true,\n                fileData: [],\n                page: 1,\n                fileDescriptor: null,\n                downloadFileName: \"Document\",\n                minZoom: 0.5,\n                maxZoom: 4,\n                zoomRate: 0.25,\n                zoomLevel: DEFAULT_ZOOM_LEVEL,\n                zoomBeforePrint: false,\n                zoomLevelForPrint: 3,\n                searchMatchScrollLeftOffset: 0,\n                // add some default offset, so that the found match\n                // does not appear on the top edge of the page when navigated to\n                searchMatchScrollTopOffset: -64,\n                // what percentage of the page should be scrolled,\n                // so that the page is considered to be changed to the next one\n                pageChangeScrollThreshold: 0.85,\n                // values higher than 200ms can result in browser zoom\n                pageWheelThrottleDelay: 200,\n                // ported from pdf.js\n                printResolution: 150,\n                loadOnDemand: false,\n                loadOnDemandPageSize: 2,\n                messages: {\n                    freeTextEditorPlaceholder: \"Start typing\",\n                    errorMessages: {\n                        parseError: \"PDF file fails to process.\",\n                        notFound: \"File is not found.\",\n                        popupBlocked: \"Popup is blocked.\"\n                    }\n                },\n                annotations: {\n                    highlight: {\n                        color: \"#ffff00\"\n                    }\n                },\n                elementSelectors: {\n                    pageSelector: \"k-page:not(.k-blank-page)\",\n                    pagesContainerClass: \"k-pdf-viewer-pages\",\n                    pageCanvasWrapper: \"k-canvas-wrapper\",\n                    documentContainerClass: \"k-pdf-viewer-canvas\",\n                    textLayerClass: \"k-text-layer\",\n                    searchHighlightClass: \"k-search-highlight\",\n                    searchHighlightMarkClass: \"k-search-highlight-mark\",\n                    charClass: \"k-text-char\",\n                    textElementSelector: \"span[role='presentation']\",\n                    renderedPageSelector: \"k-page[data-page-number]\",\n                    enabledTextSelectionClass: \"k-enable-text-select\",\n                    enabledPanningClass: \"k-enable-panning\"\n                },\n                events: {\n                    [PAGES_LOAD]: noop,\n                    [PRINT_END]: noop,\n                    [ZOOM_START]: noop,\n                    [ZOOM_END]: noop,\n                    [ERROR]: noop,\n                    [SCROLL]: noop,\n                    [ANNOTATION_EDITOR_TOOLBAR_SHOW]: noop,\n                    [ANNOTATION_EDITOR_TOOLBAR_HIDE]: noop\n                }\n            };\n            // todo: props\n            // isPageEditing = null;\n            this.interactionMode = PdfViewerInteractionMode.TextSelection;\n            this.printContainer = null;\n            // todo: props ported from pdf.js\n            this._scrollMode = ScrollMode.PAGE;\n            this.isInPresentationMode = false;\n            this._currentPageNumber = 1;\n            this.linkService = null;\n            this.annotationStorage = null;\n            this._annotationStorageModified = false;\n            this._hasAnnotationEditors = false;\n            _PdfViewer_annotationEditorMode.set(this, kendo_pdfjs_loader_js.AnnotationEditorType.NONE);\n            this.annotationEditorUIManager = null;\n            _PdfViewer_switchAnnotationEditorModeTimeoutId.set(this, null);\n            // #buffer = null;\n            // #altTextManager = null;\n            // #annotationEditorHighlightColors = null;\n            // #annotationEditorMode = AnnotationEditorType.NONE;\n            // #annotationEditorUIManager = null;\n            // #annotationMode = AnnotationMode.ENABLE_FORMS;\n            // #containerTopLeft = null;\n            // #enableHWA = false;\n            // #enableHighlightFloatingButton = false;\n            // #enablePermissions = false;\n            // #enableUpdatedAddImage = false;\n            // #enableNewAltTextWhenAddingImage = false;\n            _PdfViewer_eventAbortController.set(this, null);\n            // #mlManager = null;\n            _PdfViewer_onPageRenderedCallback.set(this, null);\n            // #switchAnnotationEditorModeTimeoutId = null;\n            // #getAllTextInProgress = false;\n            // #hiddenCopyElement = null;\n            // #interruptCopyCondition = false;\n            // #previousContainerHeight = 0;\n            // #resizeObserver = new ResizeObserver(this.#resizeObserverCallback.bind(this));\n            // #scrollModePageState = null;\n            // #scaleTimeoutId = null;\n            // #textLayerMode = TextLayerMode.ENABLE;\n            // todo: props\n            this.state = {};\n            this.pdfDocument = null;\n            this.pages = [];\n            this.triggerError = (e) => {\n                this.trigger(ERROR, {\n                    error: e\n                });\n            };\n            this.triggerPrintEnd = (e) => {\n                this.trigger(PRINT_END, e);\n            };\n            this.onPagesLoad = (args) => {\n                this.state.pdfDocument = args.pdfDoc;\n                this.state.pdfPages = args.pdfPages;\n                this.clearSearch();\n                this.initSearchService();\n                this.enableDocumentScrollEventsTracking();\n                this.triggerPagesLoad(args);\n            };\n            this.onDocumentScrollerScroll = (e) => {\n                const currentPageIndex = this.getCurrentPageIndex();\n                const pages = this.pages;\n                const page = pages[currentPageIndex];\n                const nextPage = pages[currentPageIndex + 1];\n                const previousPage = pages[currentPageIndex - 1];\n                if (page && page.isBlank()) {\n                    this.drawPageAsync({ pageIndex: currentPageIndex });\n                }\n                if (nextPage && nextPage.isBlank()) {\n                    this.drawPageAsync({ pageIndex: currentPageIndex + 1 });\n                }\n                if (previousPage && previousPage.isBlank()) {\n                    this.drawPageAsync({ pageIndex: currentPageIndex - 1 });\n                }\n                this.tryTriggerScroll(e);\n            };\n            // this is mainly used by blazor to track the page number\n            // as this can only be obtained by JS\n            this.tryTriggerScroll = (e) => {\n                let isPageChanged = false;\n                const pageNumber = currentPage(this.element) + 1;\n                if (pageNumber !== this.state.activePageNumber && (pageNumber >= 1 && pageNumber <= this.state.pdfDocument.numPagesh)) {\n                    isPageChanged = true;\n                    this.state.activePageNumber = pageNumber;\n                }\n                if (this.shouldPreventScroll) {\n                    this.shouldPreventScroll = false;\n                }\n                else {\n                    this.trigger(SCROLL, {\n                        scrollLeft: e.scrollLeft,\n                        scrollTop: e.scrollTop,\n                        pageNumber: this.state.activePageNumber,\n                        isPageChanged: isPageChanged\n                    });\n                }\n            };\n            this.printDocumentAsync = () => {\n                this.initPrintContainer();\n                const pagePrintPromises = this.getPagesPrintContentAsync(this.printContainer);\n                const printPromise = createPromise();\n                Promise.all(pagePrintPromises)\n                    .then(() => {\n                    // print the document during next render task\n                    setTimeout(() => {\n                        this.openPrintDialog();\n                        // @ts-expect-error TS()\n                        printPromise.resolve();\n                    }, FRAMES_PER_SECOND);\n                });\n                return printPromise;\n            };\n            this.onDocumentWheel = (e) => {\n                if (!e.ctrlKey && !e.metaKey) {\n                    return;\n                }\n                e.preventDefault();\n                const wheelDelta = mousewheelDelta(e);\n                const zoomModifier = wheelDelta < 0 ? 1 : -1;\n                const zoomLevel = this.state.zoomLevel + (zoomModifier * this.options.zoomRate);\n                this.triggerZoomStart({\n                    zoomLevel: zoomLevel\n                });\n                this.zoom({\n                    zoomLevel: zoomLevel\n                });\n                this.triggerZoomEnd({\n                    zoomLevel: zoomLevel\n                });\n            };\n            this.extendOptions(options);\n            this.throwIfInvalidOptions();\n            this.wrapper = this.element;\n            this.initEventBus();\n            kendo_dateinputsCommon_cmn_chunk_js._(this, _PdfViewer_eventAbortController, new AbortController(), \"f\");\n            this.resetState();\n            this.bindEvents();\n            this.initLinkService();\n            this.initDocumentContainer();\n            this.loadFile(this.options.fileDescriptor || {\n                data: this.options.fileData,\n                page: this.options.page\n            });\n        }\n        destroy() {\n            this.destroyEventBus();\n            this.unbindEvents();\n            this.destroySearchService();\n            this.destroyAnnotationEditorUIManager();\n            this.destroyDocumentScroller();\n        }\n        throwIfInvalidOptions() {\n            if (this.options.minZoom > this.options.maxZoom) {\n                throw new Error(\"The min zoom should be greater than max zoom\");\n            }\n        }\n        set annotationEditorParams({ type, value }) {\n            if (!this.annotationEditorUIManager) {\n                return;\n            }\n            this.annotationEditorUIManager.updateParams(type, value);\n        }\n        get annotationEditorMode() {\n            return this.annotationEditorUIManager\n                ? kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_annotationEditorMode, \"f\")\n                : kendo_pdfjs_loader_js.AnnotationEditorType.DISABLE;\n        }\n        set annotationEditorMode({ mode, editId = null, isFromKeyboard = false }) {\n            // todo: set isFromKeyboard intentionally to allow editor creation\n            // set annotationEditorMode({ mode, editId = null, isFromKeyboard = true }) {\n            if (!this.annotationEditorUIManager) {\n                // throw new Error(`The AnnotationEditor is not enabled.`);\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_annotationEditorMode, \"f\") === mode) {\n                return; // The AnnotationEditor mode didn't change.\n            }\n            if (!this.isValidAnnotationEditorMode(mode)) {\n                // throw new Error(`Invalid AnnotationEditor mode: ${mode}`);\n                return;\n            }\n            if (!this.pdfDocument) {\n                return;\n            }\n            if (mode === kendo_pdfjs_loader_js.AnnotationEditorType.STAMP) {\n                // this.#mlManager?.loadModel(\"altText\");\n            }\n            const { eventBus } = this;\n            const updater = () => {\n                this.cleanupSwitchAnnotationEditorMode();\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _PdfViewer_annotationEditorMode, mode, \"f\");\n                this.annotationEditorUIManager.updateMode(mode, editId, isFromKeyboard);\n                eventBus.dispatch(\"annotationeditormodechanged\", {\n                    source: this,\n                    mode,\n                });\n            };\n            // // todo: fix\n            // const isEditingPage = (this.pages || []).some(x => x.isEditing);\n            if (mode === kendo_pdfjs_loader_js.AnnotationEditorType.NONE || kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_annotationEditorMode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n                const isEditing = mode !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE;\n                if (!isEditing) {\n                    this.pdfDocument.annotationStorage.resetModifiedIds();\n                }\n                for (const pageView of this.pages) {\n                    pageView.toggleEditingMode(isEditing);\n                }\n                // We must call #switchToEditAnnotationMode unconditionally to ensure that\n                // page is rendered if it's useful or not.\n                const idsToRefresh = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_instances, \"m\", _PdfViewer_switchToEditAnnotationMode).call(this);\n                if (isEditing && idsToRefresh) {\n                    // We're editing so we must switch to editing mode when the rendering is\n                    // done.\n                    this.cleanupSwitchAnnotationEditorMode();\n                    kendo_dateinputsCommon_cmn_chunk_js._(this, _PdfViewer_onPageRenderedCallback, ({ pageNumber }) => {\n                        idsToRefresh.delete(pageNumber);\n                        if (idsToRefresh.size === 0) {\n                            kendo_dateinputsCommon_cmn_chunk_js._(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, setTimeout(updater, 0), \"f\");\n                        }\n                    }, \"f\");\n                    const { signal } = kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_eventAbortController, \"f\");\n                    eventBus._on(\"pagerendered\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_onPageRenderedCallback, \"f\"), { signal });\n                }\n            }\n            updater();\n        }\n        extendOptions(options) {\n            this.options = deepExtend(this.options, options);\n        }\n        setOptions(options) {\n            this.options = options;\n        }\n        bindEvents() {\n            this.bindPagesWheel();\n        }\n        bindPagesWheel() {\n            const documentContainer = this.getDocumentContainer();\n            if (!documentContainer) {\n                return;\n            }\n            if (this.options.pageWheelThrottleDelay > 0) {\n                // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n                this.throttledPagesWheel = throttle(this.onDocumentWheel, this.options.pageWheelThrottleDelay);\n            }\n            else {\n                // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n                this.throttledPagesWheel = this.onDocumentWheel;\n            }\n            // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n            documentContainer.addEventListener(\"wheel\", this.throttledPagesWheel);\n        }\n        unbindEvents() {\n            this.unbindPagesWheel();\n        }\n        unbindPagesWheel() {\n            const documentContainer = this.getDocumentContainer();\n            if (!documentContainer) {\n                return;\n            }\n            // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n            if (this.throttledPagesWheel && this.throttledPagesWheel.cancel) {\n                // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n                this.throttledPagesWheel.cancel();\n            }\n            // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n            documentContainer.removeEventListener(\"wheel\", this.throttledPagesWheel);\n        }\n        setState(newState) {\n            this.state = deepExtend(this.state || {}, newState);\n        }\n        resetState() {\n            this.setState({\n                activePageNumber: 1,\n                visiblePagesCount: 1,\n                pagePromises: [],\n                downloadFilePromise: null,\n                pdfDocument: null,\n                zoomLevel: this.options.zoomLevel,\n                zoomLevelType: this.options.zoomLevelType,\n                zoomLevelBeforePrint: null\n            });\n        }\n        initEventBus() {\n            this.eventBus = new EventBus();\n        }\n        destroyEventBus() {\n        }\n        initLinkService() {\n            var _a;\n            this.linkService = new PDFLinkService({\n                eventBus: this.eventBus,\n                externalLinkTarget: LinkTarget.BLANK,\n                externalLinkRel: \"noopener noreferrer nofollow\",\n                ignoreDestinationZoom: false,\n            });\n            (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.setViewer(this);\n        }\n        initAnnotationEditorUIManager() {\n            this.annotationEditorUIManager = new AnnotationEditorUIManager({\n                container: this.getDocumentContainer(),\n                // todo: pdf.js expects a dom element and not a component\n                viewer: this.element,\n                pdfViewer: this,\n                pdfDocument: this.state.pdfDocument,\n                eventBus: this.eventBus\n            });\n            this.setAnnotationEditorUIManagerScale();\n        }\n        setAnnotationEditorUIManagerScale() {\n            var _a;\n            // this is required when loading a new document\n            // so that annotation editors have correct positions during dragging\n            (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.onScaleChanging({\n                scale: this.options.zoomLevel\n            });\n        }\n        destroyAnnotationEditorUIManager() {\n            var _a;\n            (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        bindEventBusAnnotationsEvents() {\n            const eventBus = this.eventBus = this.eventBus || new EventBus();\n            eventBus._on(\"switchannotationeditorparams\", (evt) => {\n                this.annotationEditorParams = evt;\n            }\n            // { signal }\n            );\n            eventBus._on(\"switchannotationeditormode\", evt => {\n                // todo: inline the call to this.annotationEditorMode = evt;\n                // this.annotationEditorMode = evt;\n                this.annotationEditorUIManager.updateParams(evt.type, evt.value);\n                const { mode, editId, isFromKeyboard } = evt;\n                this.annotationEditorUIManager.annotationEditorMode = evt;\n                this.annotationEditorUIManager.updateMode(mode, editId, isFromKeyboard);\n                eventBus.dispatch(\"annotationeditormodechanged\", {\n                    source: this,\n                    mode,\n                });\n            }\n            // { signal }\n            );\n            eventBus._on(\"kendoAnnotationEditorToolBarShow\", (evt) => {\n                var _a;\n                if (!evt) {\n                    return;\n                }\n                const annotationEditorMode = this.annotationEditorUIManager.getMode();\n                if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ||\n                    annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n                    if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n                        this.addHighlightAnnotation();\n                    }\n                    this.triggerAnnotationEditorToolBarShow(Object.assign(Object.assign({}, evt), { annotationEditorMode: annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ? \"highlight\" : \"freeText\", anchor: evt.anchor || ((_a = this.annotationEditorUIManager.firstSelectedEditor) === null || _a === void 0 ? void 0 : _a.div) }));\n                }\n            }\n            // { signal }\n            );\n            eventBus._on(\"kendoAnnotationEditorToolBarHide\", (evt) => {\n                if (!evt) {\n                    return;\n                }\n                const annotationEditorMode = this.annotationEditorUIManager.getMode();\n                if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ||\n                    annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n                    this.triggerAnnotationEditorToolBarHide(Object.assign(Object.assign({}, evt), { annotationEditorMode: annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ? \"highlight\" : \"freeText\" }));\n                }\n            }\n            // { signal }\n            );\n            eventBus._on(\"showannotationeditorui\", (evt) => {\n                switch (evt.mode) {\n                    case kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT:\n                        // editorHighlightButton.click();\n                        eventBus.dispatch(\"switchannotationeditormode\", {\n                            source: this,\n                            mode: kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT,\n                            // {},...eventDetails,\n                            // evt.detail is the number of clicks.\n                            // isFromKeyboard: evt.detail === 0,\n                            isFromKeyboard: false\n                        });\n                        break;\n                    default: break;\n                }\n            }\n            // { signal }\n            );\n        }\n        unbindEventBusAnnotationsEvents() {\n            // this.eventBus.off();\n        }\n        loadFile(args) {\n            const fileData = args.data;\n            const loadFileOptions = {\n                data: null,\n                url: \"\",\n                arrayBuffer: null,\n                typedArray: null\n            };\n            if (fileData && (fileData.buffer instanceof ArrayBuffer || fileData instanceof ArrayBuffer)) {\n                loadFileOptions.arrayBuffer = fileData.buffer || fileData;\n            }\n            else if (isString(fileData) && fileData !== \"\") {\n                loadFileOptions.data = fileData;\n                loadFileOptions.url = null;\n            }\n            else if (isString(args.url) && args.url !== \"\") {\n                loadFileOptions.data = null;\n                loadFileOptions.url = args.url;\n            }\n            else if (args.typedArray) {\n                loadFileOptions.typedArray = args.typedArray;\n            }\n            if (args.data || args.url || args.arrayBuffer || args.typedArray) {\n                const readOptions = Object.assign({ dom: this.getPagesContainer(), zoom: this.options.zoomLevel }, loadFileOptions);\n                this.disableDocumentScrollEventsTracking();\n                this.clearDocument();\n                this.loadDocument(readOptions);\n                this.setScaleFactor(this.options.zoomLevel);\n            }\n        }\n        loadDocument(options) {\n            const params = this.getDocumentParameters(options);\n            const { zoom } = options;\n            this.clearDocumentState();\n            kendo_pdfjs_loader_js.getDocument(params)\n                .promise.then((pdfDoc) => {\n                var _a;\n                (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.setDocument(pdfDoc);\n                this.initDocumentAnnotationStorage(pdfDoc);\n                this.initAnnotationEditorUIManager();\n                this.bindEventBusAnnotationsEvents();\n                const pagesPromises = [];\n                for (let i = 1; i <= pdfDoc.numPages; i++) {\n                    pagesPromises.push(pdfDoc.getPage(i));\n                }\n                return { pagesPromises: pagesPromises, pdfDoc };\n            })\n                .then(({ pagesPromises: pagesPromises, pdfDoc }) => {\n                this.state.pagesPromises = pagesPromises;\n                this.destroyPageComponents();\n                return this.drawPagesFromPromisesAsync(pagesPromises)\n                    .then((pdfPages) => {\n                    this.setHiddenCanvasStyles();\n                    this.onPagesLoad({ pdfPages, pdfDoc, zoom });\n                })\n                    .catch((e) => {\n                    this.triggerError(e);\n                });\n            })\n                .catch((e) => {\n                this.triggerError(e);\n            });\n        }\n        initDocumentAnnotationStorage(pdfDocument) {\n            this.state.pdfDocument = pdfDocument;\n            this.pdfDocument = pdfDocument;\n            this.annotationStorage = new AnnotationStorage();\n            // todo: intentionally override the default value\n            // as it relies on checks like \"instanceof <something>\"\n            // but the classes from pdf.js are not exported\n            // and thus they are migrated, see https://github.com/mozilla/pdf.js/issues/18656\n            // Object.defineProperty(Object.getPrototypeOf(this.pdfDocument), 'annotationStorage', {\n            //     get: () => {\n            //         if (this.state.isPrintingInProgress) {\n            //             return this.annotationStorage?.print;\n            //         } else {\n            //             return this.annotationStorage;\n            //         }\n            //     },\n            //     set: (value) => {\n            //         this.annotationStorage = value;\n            //     },\n            //     // this is required\n            //     configurable: true\n            // });\n            Object.defineProperty(Object.getPrototypeOf(this.pdfDocument._transport), 'annotationStorage', {\n                get: () => {\n                    var _a;\n                    if (this.state.isPrintingInProgress) {\n                        return (_a = this.annotationStorage) === null || _a === void 0 ? void 0 : _a.print;\n                    }\n                    else {\n                        return this.annotationStorage;\n                    }\n                },\n                set: (value) => {\n                    this.annotationStorage = value;\n                },\n                // this is required\n                configurable: true\n            });\n            this._initializeAnnotationStorageCallbacks(pdfDocument);\n        }\n        _initializeAnnotationStorageCallbacks(pdfDocument) {\n            if (pdfDocument !== this.pdfDocument) {\n                return;\n            }\n            const { annotationStorage } = pdfDocument;\n            annotationStorage.onSetModified = () => {\n                // window.addEventListener(\"beforeunload\", beforeUnload);\n                // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n                this._annotationStorageModified = true;\n                // }\n            };\n            annotationStorage.onResetModified = () => {\n                // window.removeEventListener(\"beforeunload\", beforeUnload);\n                // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n                delete this._annotationStorageModified;\n                // }\n            };\n            annotationStorage.onAnnotationEditor = typeStr => {\n                this._hasAnnotationEditors = !!typeStr;\n                // this.setTitle();\n            };\n        }\n        drawPagesFromPromisesAsync(pagesPromises) {\n            return Promise.all(pagesPromises)\n                .then((pdfPages) => kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n                const pages = yield Promise.all(this.drawPagesAsync(pdfPages));\n                this.appendPages(pages);\n                return pdfPages;\n            }));\n        }\n        drawPagesAsync(pdfPages) {\n            pdfPages = pdfPages || this.state.pdfPages;\n            const hasPages = (this.pages || []).length > 0;\n            if (!hasPages) {\n                this.initPageComponents(pdfPages);\n            }\n            else {\n                for (let i = 0; i < this.pages.length; i++) {\n                    const pageViewport = this.pages[i].getViewport({\n                        scale: this.state.zoomLevel\n                    });\n                    // todo: adjust page viewport manually\n                    // otherwise, loading a document with links to the document\n                    // will not scroll to the specific page on click\n                    // pdf.js handles this in a more complex way\n                    // that will require porting more code\n                    this.pages[i].viewport = pageViewport;\n                }\n            }\n            const pageRenderPromises = [];\n            pdfPages.map((pdfPage, pageIndex) => kendo_dateinputsCommon_cmn_chunk_js.b(this, void 0, void 0, function* () {\n                const page = this.pages[pageIndex];\n                if (this.options.loadOnDemand &&\n                    pageIndex >= this.options.loadOnDemandPageSize &&\n                    !page.element) {\n                    const blankPageElements = this.createBlankPageElements({ pdfPage, zoom: this.state.zoomLevel });\n                    if (page && !page.element) {\n                        page.element = blankPageElements.pageElement;\n                        page.setBlank(true);\n                    }\n                    const pageRenderPromise = createPromise();\n                    pageRenderPromises.push(pageRenderPromise);\n                    pageRenderPromise.then((renderedPage) => {\n                        return renderedPage;\n                    });\n                    pageRenderPromise.resolve(page.element);\n                }\n                else if (this.options.loadOnDemand && page.isBlank()) {\n                    // keep blank pages on reload\n                    const pageRenderPromise = createPromise();\n                    pageRenderPromises.push(pageRenderPromise);\n                    pageRenderPromise.then((renderedPage) => {\n                        return renderedPage;\n                    });\n                    pageRenderPromise.resolve(page.element);\n                }\n                else {\n                    const pageRenderPromise = this.drawPageAsync({ pageIndex });\n                    pageRenderPromises.push(pageRenderPromise);\n                    pageRenderPromise.then((renderedPage) => {\n                        return renderedPage;\n                    });\n                }\n            }));\n            return pageRenderPromises;\n        }\n        createBlankPageElements({ pdfPage, zoom }) {\n            const pageElements = this.createPageElements({ pdfPage, zoom });\n            pageElements.canvasWrapper.appendChild(pageElements.canvas);\n            pageElements.pageElement.appendChild(pageElements.canvasWrapper);\n            return pageElements;\n        }\n        getDocumentParameters(options) {\n            let params = {\n                verbosity: 0,\n                isEvalSupported: true\n            };\n            if (typeof options.data === 'string' && options.data !== \"\") {\n                params.data = parsePdfFromBase64String(options.data);\n            }\n            else if (typeof options.url === 'string' && options.url !== \"\") {\n                params.url = options.url;\n            }\n            else if (options.arrayBuffer instanceof ArrayBuffer) {\n                params = options.arrayBuffer;\n            }\n            else if (options.typedArray) {\n                params = options.typedArray;\n            }\n            return params;\n        }\n        appendPages(pages) {\n            pages.forEach(page => this.appendPage(page));\n        }\n        appendPage(page, pageIndex = null) {\n            const pagesContainer = this.getPagesContainer();\n            if (hasValue(pageIndex)) {\n                pagesContainer === null || pagesContainer === void 0 ? void 0 : pagesContainer.insertBefore(page, pagesContainer.children[pageIndex]);\n            }\n            else {\n                pagesContainer === null || pagesContainer === void 0 ? void 0 : pagesContainer.appendChild(page);\n            }\n        }\n        drawPageAsync({ pageIndex = 0 }) {\n            var _a;\n            const index = clamp(pageIndex, 0, Math.max(0, this.state.pdfDocument.numPages - 1));\n            return (_a = this.pages[index]) === null || _a === void 0 ? void 0 : _a.draw().then(() => {\n                return this.pages[index].element;\n            });\n        }\n        createPageElements({ pdfPage = null, zoom = 1, }) {\n            if (zoom <= 0) {\n                return;\n            }\n            const viewportScale = scale();\n            const scaleNum = zoom || viewportScale;\n            const viewport = pdfPage === null || pdfPage === void 0 ? void 0 : pdfPage.getViewport({ scale: viewportScale });\n            const { adjustedWidth, adjustedHeight, adjustRatio } = adjustCanvasSize(viewport.width, viewport.height);\n            // const styles = {\n            //     width: Math.floor(viewport.width / scaleNum) * zoom + 'pt',\n            //     height: Math.floor(viewport.height / scaleNum) * zoom + 'pt'\n            // };\n            // use PageView.setLayerDimensions\n            const { pageWidth, pageHeight } = viewport.rawDims;\n            const styles = {\n                // \"round\" is supported in all browsers since May 2024\n                // https://developer.mozilla.org/en-US/docs/Web/CSS/round#browser_compatibility\n                width: `round(var(--scale-factor) * ${pageWidth}px, 1px)`,\n                height: `round(var(--scale-factor) * ${pageHeight}px, 1px)`\n            };\n            const pageElement = createElement(\"div\", \"k-page\", styles);\n            const canvas = createElement(\"canvas\", '', {\n                width: \"100%\",\n                height: \"100%\"\n            });\n            canvas.height = adjustedHeight;\n            canvas.width = adjustedWidth;\n            const canvasContext = canvas.getContext(\"2d\");\n            const canvasWrapper = convertToHtml(`\n            <div class=\"${this.options.elementSelectors.pageCanvasWrapper}\"></div>\n        `);\n            // canvasWrapper.appendChild(canvas);\n            // pageElement.appendChild(canvasWrapper);\n            const adjustedScale = adjustRatio * scaleNum;\n            viewport.width = adjustedWidth;\n            viewport.height = adjustedHeight;\n            viewport.scale = adjustedScale;\n            return {\n                canvasContext,\n                canvasWrapper,\n                canvas,\n                viewport,\n                scaleNum,\n                pageElement,\n                styles,\n            };\n        }\n        triggerPagesLoad(e) {\n            this.trigger(PAGES_LOAD, e);\n        }\n        triggerZoomStart(e) {\n            this.trigger(ZOOM_START, e);\n        }\n        triggerZoomEnd(e) {\n            this.trigger(ZOOM_END, e);\n        }\n        triggerDownload(e) {\n            return this.trigger(DOWNLOAD, e);\n        }\n        triggerAnnotationEditorToolBarShow(e) {\n            this.trigger(ANNOTATION_EDITOR_TOOLBAR_SHOW, e);\n        }\n        triggerAnnotationEditorToolBarHide(e) {\n            this.trigger(ANNOTATION_EDITOR_TOOLBAR_HIDE, e);\n        }\n        clearDocument() {\n            var _a;\n            this.clearPagesElements();\n            this.clearDocumentState();\n            (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.setDocument(null);\n        }\n        clearDocumentState() {\n            this.state.pdfDocument = null;\n            this.state.pdfPages = [];\n            this.pages.forEach(x => x.destroy());\n            this.pages = [];\n        }\n        initPageComponents(pdfPages) {\n            // const scale = this.currentScale;\n            // const currentScale = scale();\n            const currentScale = this.options.zoomLevel;\n            const viewport = pdfPages[0].getViewport({\n                scale: currentScale * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS,\n            });\n            for (let pageNum = 1; pageNum <= pdfPages.length; pageNum++) {\n                const pageIndex = pageNum - 1;\n                const pageView = new Page(null, {\n                    pdfViewer: this,\n                    container: this.element,\n                    eventBus: this.eventBus,\n                    id: pageNum,\n                    scale: currentScale,\n                    viewport: viewport,\n                    defaultViewport: viewport,\n                    // optionalContentConfigPromise,\n                    // renderingQueue: this.renderingQueue,\n                    textLayerMode: TextLayerMode.ENABLE,\n                    annotationMode: AnnotationMode.ENABLE,\n                    // imageResourcesPath: this.imageResourcesPath,\n                    // maxCanvasPixels: this.maxCanvasPixels,\n                    // pageColors,\n                    // l10n: this.l10n,\n                    layerProperties: this._layerProperties,\n                    // enableHWA: this.#enableHWA,\n                });\n                this.pages.push(pageView);\n                this.pages[pageIndex].setPdfPage(pdfPages[pageIndex]);\n            }\n        }\n        destroyPageComponents() {\n            this.pages.forEach(x => x.destroy());\n            this.pages = [];\n        }\n        clearPagesElements() {\n            const documentContainer = this.getDocumentContainer();\n            const pagesContainer = this.getPagesContainer();\n            if (!documentContainer || !pagesContainer || !this.hasDocument()) {\n                return;\n            }\n            const pages = this.getPagesElements();\n            pages.forEach(page => {\n                // @ts-expect-error TS(2345): Argument of type 'unknown' is not assignable to pa... Remove this comment to see the full error message\n                pagesContainer.removeChild(page);\n            });\n        }\n        initDocumentContainer() {\n            if (this.documentContainer) {\n                return;\n            }\n            this.documentContainer = this.getDocumentContainer();\n            this.initDocumentScroller(this.documentContainer);\n        }\n        initDocumentScroller(element) {\n            if (this.documentScroller || !element) {\n                return;\n            }\n            this.documentScroller = this.createDocumentScroller(element, {\n                filter: toClassSelector$1(this.options.elementSelectors.pageSelector),\n                events: {\n                    [SCROLL]: this.onDocumentScrollerScroll\n                }\n            });\n        }\n        createDocumentScroller(element, options) {\n            return new Scroller(element, options);\n        }\n        destroyDocumentScroller() {\n            if (!this.documentScroller) {\n                return;\n            }\n            this.documentScroller.destroy();\n            this.documentScroller = null;\n        }\n        enableDocumentScrollEventsTracking() {\n            var _a;\n            (_a = this.documentScroller) === null || _a === void 0 ? void 0 : _a.enableScrollEventsTracking();\n        }\n        disableDocumentScrollEventsTracking() {\n            var _a;\n            (_a = this.documentScroller) === null || _a === void 0 ? void 0 : _a.disableScrollEventsTracking();\n        }\n        getCurrentPageIndex() {\n            return currentPage(this.element) || 0;\n        }\n        downloadFile({ fileName, saveOptions = {} }) {\n            this.downloadDocument({\n                options: {\n                    pdf: this.state.pdfDocument\n                },\n                fileName: fileName || this.options.downloadFileName,\n                saveOptions: saveOptions\n            });\n        }\n        downloadDocument({ options, fileName = \"Document\", saveOptions = {}, }) {\n            if (options.pdf) {\n                let exportMethod = options.pdf.getData.bind(options.pdf);\n                let serializedAnnotationStorage = {};\n                let originalAnnotationStorage = {};\n                if (options.pdf.annotationStorage.size > 0) {\n                    exportMethod = options.pdf.saveDocument.bind(options.pdf);\n                    // saveDocument() has checks that test \"editor instanceof AnnotationEditor\", but they fail\n                    // because AnnotationEditor from \"pdfjs-dist/legacy/build/pdf.mjs\" is not exported\n                    // thus replace instances of editors with their serialized version\n                    // and then revert\n                    serializedAnnotationStorage = {};\n                    originalAnnotationStorage = options.pdf.annotationStorage.getAll();\n                    Object.keys(originalAnnotationStorage).forEach((key) => {\n                        serializedAnnotationStorage[key] = originalAnnotationStorage[key].toJSON();\n                    });\n                    Object.keys(originalAnnotationStorage).forEach((key) => {\n                        options.pdf.annotationStorage.remove(key);\n                    });\n                    Object.keys(serializedAnnotationStorage).forEach((key) => {\n                        options.pdf.annotationStorage.setValue(key, serializedAnnotationStorage[key]);\n                    });\n                }\n                exportMethod()\n                    .then((data) => {\n                    return new Blob([data], { type: 'application/pdf' });\n                })\n                    .then((blob) => {\n                    if (!this.triggerDownload({ blob, fileName, saveOptions })) {\n                        this.saveFile(blob, fileName, saveOptions);\n                    }\n                })\n                    .catch((e) => {\n                    this.triggerError(e);\n                })\n                    .finally(() => {\n                    var _a;\n                    if (((_a = options.pdf) === null || _a === void 0 ? void 0 : _a.annotationStorage.size) <= 0) {\n                        return;\n                    }\n                    const currentAnnotationStorage = options.pdf.annotationStorage.getAll();\n                    Object.keys(currentAnnotationStorage).forEach((key) => {\n                        options.pdf.annotationStorage.remove(key);\n                    });\n                    Object.keys(originalAnnotationStorage).forEach((key) => {\n                        options.pdf.annotationStorage.setValue(key, originalAnnotationStorage[key]);\n                    });\n                });\n            }\n        }\n        ;\n        saveFile(blob, fileName, saveOptions) {\n            try {\n                kendo_fileSaver_cmn_chunk_js.s(blob, fileName, saveOptions);\n            }\n            catch (_a) {\n                return false;\n            }\n            return true;\n        }\n        hasDocument() {\n            return hasValue(this.state.pdfDocument);\n        }\n        zoom(args) {\n            args.zoomLevel = this.calculateZoomLevel({\n                zoomLevel: args.zoomLevel,\n                zoomLevelType: args.zoomLevelType,\n                currentZoom: this.options.zoomLevel,\n            });\n            this.options.zoomLevel = args.zoomLevel;\n            this.state.zoomLevel = args.zoomLevel;\n            this.eventBus.dispatch(\"scalechanging\", {\n                source: this,\n                scale: this.options.zoomLevel,\n            });\n            this.reloadFile(this.state.pdfDocument);\n        }\n        calculateZoomLevel({ zoomLevel, zoomLevelType, currentZoom }) {\n            const documentContainer = this.getDocumentContainer();\n            const page = documentContainer.querySelector(toClassSelector$1(this.options.elementSelectors.pageSelector));\n            const pageSize = { width: page.offsetWidth, height: page.offsetHeight };\n            let calculatedZoomLevel = clamp(zoomLevel || DEFAULT_ZOOM_LEVEL, this.options.minZoom, this.options.maxZoom);\n            if (zoomLevelType === \"ActualWidth\" || zoomLevelType === \"actualWidth\") {\n                calculatedZoomLevel = 1;\n            }\n            else if (zoomLevelType === \"FitToWidth\" || zoomLevelType === \"fitToWidth\") {\n                calculatedZoomLevel = documentContainer.offsetWidth / (pageSize.width / currentZoom);\n            }\n            else if (zoomLevelType === \"FitToPage\" || zoomLevelType === \"fitToPage\") {\n                calculatedZoomLevel = documentContainer.offsetHeight / (pageSize.height / currentZoom);\n            }\n            return calculatedZoomLevel;\n        }\n        reloadFile(pdfDoc) {\n            const pagesPromises = [];\n            for (let i = 1; i <= pdfDoc.numPages; i++) {\n                pagesPromises.push(pdfDoc.getPage(i));\n            }\n            this.disableDocumentScrollEventsTracking();\n            this.drawPagesFromPromisesAsync(pagesPromises)\n                .then((pdfPages) => {\n                this.setHiddenCanvasStyles();\n                this.onPagesLoad({ pdfPages, pdfDoc });\n            })\n                .catch((e) => {\n                this.triggerError(e);\n            });\n            this.setScaleFactor(this.state.zoomLevel);\n        }\n        setHiddenCanvasStyles() {\n            if (!this.options.pdfjsSetHiddenCanvasStyles) {\n                return;\n            }\n            // required after pdf.js 4.x version\n            const sheet = new CSSStyleSheet();\n            sheet.replaceSync(`.hiddenCanvasElement {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 0;\n            height: 0;\n            display: none;\n        }`);\n            this.getPagesContainer().ownerDocument.adoptedStyleSheets = [sheet];\n        }\n        printFile() {\n            if (!this.hasDocument()) {\n                return;\n            }\n            this.setState({\n                isPrintingInProgress: true\n            });\n            if (this.options.zoomBeforePrint) {\n                // such option existed in the Kendo jQuery version internally\n                this.cacheZoomLevelBeforePrint();\n                this.loadDocumentForPrintAsync({\n                    zoomLevel: this.options.zoomLevelBeforePrint,\n                    force: true\n                })\n                    .then(() => {\n                    this.printDocumentAsync()\n                        .then(() => {\n                        this.trigger(PRINT_END);\n                    });\n                })\n                    .catch(this.triggerError)\n                    .finally(() => {\n                    this.setState({\n                        isPrintingInProgress: false\n                    });\n                    this.restoreZoomLevelBeforePrint();\n                });\n            }\n            else {\n                this.loadDocumentForPrintAsync({\n                    zoomLevel: this.state.zoomLevel,\n                    force: true\n                })\n                    .then(() => {\n                    this.printDocumentAsync()\n                        .then(() => {\n                        this.trigger(PRINT_END);\n                    });\n                })\n                    .catch(this.triggerError)\n                    .finally(() => {\n                    this.setState({\n                        isPrintingInProgress: false\n                    });\n                });\n            }\n        }\n        loadDocumentForPrintAsync({ zoomLevel = DEFAULT_ZOOM_LEVEL, force = false }) {\n            const pages = this.pages;\n            const pageLoadPromises = [];\n            const loadPromise = createPromise();\n            for (let i = 0; i < pages.length; i++) {\n                const pageLoadPromise = pages[i].loadForPrintAsync({\n                    zoomLevel: zoomLevel,\n                    force: force\n                });\n                pageLoadPromises.push(pageLoadPromise);\n            }\n            Promise.all(pageLoadPromises)\n                .then(() => {\n                // @ts-expect-error TS()\n                loadPromise.resolve();\n            });\n            return loadPromise;\n        }\n        getPagesPrintContentAsync(printContainer) {\n            const pages = this.pages;\n            const pagePrintPromises = [];\n            for (let i = 0; i < pages.length; i++) {\n                const pagePrintPromise = pages[i].getPrintContentAsync();\n                pagePrintPromise.then((pagePrintContent) => {\n                    const pageWrapper = convertToHtml(`<div></div>`);\n                    pageWrapper.appendChild(pagePrintContent);\n                    printContainer.appendChild(pageWrapper);\n                });\n                pagePrintPromises.push(pagePrintPromise);\n            }\n            return pagePrintPromises;\n        }\n        initPrintContainer() {\n            this.printContainer = convertToHtml(`<div></div>`);\n        }\n        openPrintDialog() {\n            const pages = this.pages;\n            const width = pages[0].rawWidth;\n            const height = pages[0].rawHeight;\n            const printDialog = window.open('', '', 'innerWidth=' + width + ',innerHeight=' + height + 'location=no,titlebar=no,toolbar=no');\n            if (!printDialog || !printDialog.document) {\n                this.triggerError({\n                    message: this.options.messages.errorMessages.popupBlocked\n                });\n                return;\n            }\n            printDialog.document.body.style.margin = '0';\n            printDialog.document.body.appendChild(this.printContainer);\n            const afterPrintHandler = () => {\n                printDialog.removeEventListener(\"afterprint\", afterPrintHandler);\n                printDialog.close();\n            };\n            printDialog.addEventListener(\"afterprint\", afterPrintHandler);\n            printDialog.focus();\n            printDialog.print();\n            // setTimeout(() => {\n            // printDialog.print();\n            // done();\n            // });\n        }\n        cacheZoomLevelBeforePrint() {\n            this.setState({\n                zoomLevelBeforePrint: this.state.zoomLevel\n            });\n        }\n        restoreZoomLevelBeforePrint() {\n            if (this.state.zoomLevelBeforePrint === this.state.zoomLevel) {\n                return;\n            }\n            this.zoom({\n                zoomLevel: this.state.zoomLevelBeforePrint,\n                zoomLevelType: this.state.zoomLevelType,\n                currentZoom: this.state.zoomLevel\n            });\n        }\n        searchText(options = { text: \"\", matchCase: false }) {\n            var _a;\n            this.initSearchService();\n            const matches = (_a = this.searchService) === null || _a === void 0 ? void 0 : _a.search(options);\n            return matches;\n        }\n        clearSearch() {\n            this.destroySearchService();\n        }\n        initSearchService() {\n            const textLayers = Array.from(this.wrapper.querySelectorAll(toClassSelector$1(this.options.elementSelectors.textLayerClass)) || []);\n            if (this.searchService) {\n                // refresh text nodes as text layers have changed\n                if (textLayers.every((x, i) => x === this.searchService.options.textContainers[i])) {\n                    return;\n                }\n                else {\n                    this.destroySearchService();\n                }\n            }\n            this.searchService = new SearchService({\n                textContainers: textLayers,\n                highlightClass: this.options.elementSelectors.searchHighlightClass,\n                highlightMarkClass: this.options.elementSelectors.searchHighlightMarkClass,\n                charClass: this.options.elementSelectors.charClass\n            });\n        }\n        destroySearchService() {\n            if (!this.searchService) {\n                return;\n            }\n            this.searchService.destroy();\n            this.searchService = null;\n        }\n        goToNextSearchMatch() {\n            if (!this.searchService) {\n                return;\n            }\n            this.searchService.markNextMatch();\n            const matchElement = this.searchService.getActiveMatchElement();\n            this.scrollToSearchMatch(matchElement);\n        }\n        goToPreviousSearchMatch() {\n            if (!this.searchService) {\n                return;\n            }\n            this.searchService.markPreviousMatch();\n            const matchElement = this.searchService.getActiveMatchElement();\n            this.scrollToSearchMatch(matchElement);\n        }\n        getPagesContainer() {\n            return this.element.querySelector(toClassSelector$1(this.options.elementSelectors.pagesContainerClass));\n        }\n        getDocumentContainer() {\n            return this.wrapper.querySelector(toClassSelector$1(this.options.elementSelectors.documentContainerClass));\n        }\n        getPagesElements() {\n            const documentContainer = this.getDocumentContainer();\n            if (!documentContainer) {\n                return [];\n            }\n            return toArray(documentContainer.querySelectorAll(toClassSelector$1(this.options.elementSelectors.pageSelector)));\n        }\n        scrollToSearchMatch(matchElement) {\n            if (!matchElement) {\n                return;\n            }\n            const closestCharElement = matchElement.closest('.k-text-char');\n            const closestTextElement = closestCharElement\n                ? closestCharElement.closest('span[role=\"presentation\"]')\n                : null;\n            if (!closestTextElement) {\n                return;\n            }\n            const closestPageElement = closestTextElement.closest('.k-page');\n            if (!closestPageElement) {\n                return;\n            }\n            const scrollLeft = closestPageElement.offsetLeft +\n                -1 * this.documentScroller.element.offsetLeft +\n                closestTextElement.offsetLeft +\n                this.options.searchMatchScrollLeftOffset;\n            const scrollTop = closestPageElement.offsetTop +\n                -1 * this.documentScroller.element.offsetTop +\n                closestTextElement.offsetTop +\n                this.options.searchMatchScrollTopOffset;\n            this.documentScroller.scrollTo(scrollLeft, scrollTop, { trackScrollEvent: false });\n        }\n        resetInteractionMode() {\n            this.setInteractionMode({\n                mode: PdfViewerInteractionMode.TextSelection\n            });\n        }\n        setInteractionMode(args) {\n            this.interactionMode = args.mode;\n            if (this.interactionMode === PdfViewerInteractionMode.TextSelection) {\n                this.disableScrollerEventsTracking();\n                addClass(this.options.elementSelectors.enabledTextSelectionClass, this.documentScroller.element);\n                removeClass(this.options.elementSelectors.enabledPanningClass, this.documentScroller.element);\n            }\n            else if (this.interactionMode === PdfViewerInteractionMode.Pan) {\n                this.enableScrollerEventsTracking();\n                removeClass(this.options.elementSelectors.enabledTextSelectionClass, this.documentScroller.element);\n                addClass(this.options.elementSelectors.enabledPanningClass, this.documentScroller.element);\n            }\n        }\n        enableScrollerEventsTracking() {\n            if (!this.documentScroller) {\n                return;\n            }\n            this.documentScroller.enablePanEventsTracking();\n        }\n        disableScrollerEventsTracking() {\n            if (!this.documentScroller) {\n                return;\n            }\n            this.documentScroller.disablePanEventsTracking();\n        }\n        setScaleFactor(scaleFactor) {\n            this.element.style.setProperty('--scale-factor', String(scaleFactor * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS));\n        }\n        activatePageNumber(pageNumber) {\n            const page = this.getPageByNumber(pageNumber);\n            if (!page) {\n                return;\n            }\n            const pageIndex = pageNumber - 1;\n            if (this.state.activePageNumber === pageNumber) {\n                return;\n            }\n            this.state.activePageNumber = pageNumber;\n            if (page.isBlank()) {\n                this.drawPageAsync({ pageIndex: pageIndex })\n                    .then(() => {\n                    this.scrollToPage({\n                        pageNumber\n                    });\n                });\n            }\n            else {\n                this.scrollToPage({\n                    pageNumber\n                });\n            }\n        }\n        scrollToPage({ pageNumber }) {\n            const { left, top } = this.getPageNumberScrollOffset(pageNumber);\n            this.scrollDocument({\n                left: left,\n                top: top\n            });\n        }\n        scrollDocument({ left, top }) {\n            var _a;\n            (_a = this.documentScroller) === null || _a === void 0 ? void 0 : _a.scrollTo(left, top, {\n                // as we are manually scrolling to the page\n                // we want to ignore the scroller's element scroll event\n                // to avoid double handling of the scrolling\n                trackScrollEvent: false\n            });\n        }\n        getPageNumberScrollOffset(pageNumber) {\n            const page = this.getPageByNumber(pageNumber);\n            if (!page) {\n                return {\n                    left: 0,\n                    top: 0\n                };\n            }\n            // pages might have different sizes\n            // although pdf.js does not fully support this\n            const previousPages = this.pages.slice(0, Math.max(0, pageNumber - 1));\n            const previousPagesScrollOffset = previousPages\n                .map(x => {\n                const pageScrollOffset = this.getPageScrollOffset(x);\n                return pageScrollOffset;\n            })\n                .reduce((sum, pageScrollOffset) => sum + pageScrollOffset, 0);\n            return {\n                left: 0,\n                top: previousPagesScrollOffset\n            };\n        }\n        getPageScrollOffset(page) {\n            var _a;\n            const pageHeight = ((_a = page === null || page === void 0 ? void 0 : page.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().height) || 0;\n            const computedStyles = getComputedStyle(page.element);\n            const pageMarginTop = parseFloat(computedStyles.marginTop) || 0;\n            return pageHeight + pageMarginTop;\n        }\n        getPageByNumber(pageNumber) {\n            const page = this.pages && this.pages[pageNumber - 1];\n            return page;\n        }\n        addHighlightAnnotation() {\n            var _a;\n            (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.highlightSelection();\n        }\n        setHighlightColor(color) {\n            this.executeAnnotationCommand({\n                commandType: kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n                commandValue: color\n            });\n        }\n        deleteAnnotation() {\n            var _a;\n            (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.delete();\n        }\n        resetAnnotationEditorMode() {\n            this.setAnnotationEditorMode({\n                mode: kendo_pdfjs_loader_js.AnnotationEditorType.NONE,\n                editId: null,\n                isFromKeyboard: false\n            });\n        }\n        setAnnotationEditorMode(modeDescriptor) {\n            this.annotationEditorMode = modeDescriptor;\n        }\n        setFreeTextColor(color) {\n            this.executeAnnotationCommand({\n                commandType: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR,\n                commandValue: color\n            });\n        }\n        setFreeTextFontSize(fontSize) {\n            this.executeAnnotationCommand({\n                commandType: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE,\n                commandValue: parseFloat(fontSize)\n            });\n        }\n        executeAnnotationCommand({ commandType, commandValue }) {\n            this.eventBus.dispatch(\"switchannotationeditorparams\", {\n                source: this,\n                type: commandType,\n                value: commandValue\n            });\n        }\n        // todo: ported from pdf.js\n        isValidAnnotationEditorMode(mode) {\n            return Object.values(kendo_pdfjs_loader_js.AnnotationEditorType).includes(mode) && mode !== kendo_pdfjs_loader_js.AnnotationEditorType.DISABLE;\n        }\n        cleanupSwitchAnnotationEditorMode() {\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_onPageRenderedCallback, \"f\")) {\n                this.eventBus._off(\"pagerendered\", kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_onPageRenderedCallback, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _PdfViewer_onPageRenderedCallback, null, \"f\");\n            }\n            if (kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, \"f\") !== null) {\n                clearTimeout(kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, \"f\"));\n                kendo_dateinputsCommon_cmn_chunk_js._(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, null, \"f\");\n            }\n        }\n        _getVisiblePages() {\n            // const views =\n            //     this._scrollMode === ScrollMode.PAGE\n            //         ? this.#scrollModePageState.pages\n            //         : this._pages,\n            //     horizontal = this._scrollMode === ScrollMode.HORIZONTAL,\n            //     rtl = horizontal && this._isContainerRtl;\n            // return getVisibleElements({\n            //     scrollEl: this.container,\n            //     views,\n            //     sortByVisibility: true,\n            //     horizontal,\n            //     rtl,\n            // });\n            return this.pages;\n        }\n        get _layerProperties() {\n            const self = this;\n            return kendo_pdfjs_loader_js.shadow(this, \"_layerProperties\", {\n                get annotationEditorUIManager() {\n                    return self.annotationEditorUIManager;\n                },\n                get annotationStorage() {\n                    var _a;\n                    return (_a = self.pdfDocument) === null || _a === void 0 ? void 0 : _a.annotationStorage;\n                },\n                // get downloadManager() {\n                //     return self.downloadManager;\n                // },\n                // get enableScripting() {\n                //     return !!self._scriptingManager;\n                // },\n                // get fieldObjectsPromise() {\n                //     return self.pdfDocument?.getFieldObjects();\n                // },\n                // get findController() {\n                //     return self.findController;\n                // },\n                // get hasJSActionsPromise() {\n                //     return self.pdfDocument?.hasJSActions();\n                // },\n                get linkService() {\n                    return self.linkService;\n                },\n            });\n        }\n        /**\n         * Scrolls page into view.\n         * @param {ScrollPageIntoViewParameters} params\n         */\n        scrollPageIntoView({ pageNumber, destArray = null, allowNegativeOffset = false, ignoreDestinationZoom = false, }) {\n            if (!this.pdfDocument) {\n                return;\n            }\n            const pageView = Number.isInteger(pageNumber) && this.pages[pageNumber - 1];\n            if (!pageView) {\n                // console.error(\n                //     `scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`\n                // );\n                return;\n            }\n            if (this.isInPresentationMode || !destArray) {\n                this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n                return;\n            }\n            let x = 0, y = 0;\n            const width = 0, height = 0;\n            // widthScale,\n            // heightScale;\n            const changeOrientation = pageView.rotation % 180 !== 0;\n            // const pageWidth =\n            //     (changeOrientation ? pageView.height : pageView.width) /\n            //     pageView.scale /\n            //     PixelsPerInch.PDF_TO_CSS_UNITS;\n            const pageHeight = (changeOrientation ? pageView.rawWidth : pageView.rawHeight) /\n                pageView.scale /\n                kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS;\n            // let scale: any = 0;\n            switch (destArray[1].name) {\n                case \"XYZ\":\n                    x = destArray[2];\n                    y = destArray[3];\n                    // scale = destArray[4];\n                    // If x and/or y coordinates are not supplied, default to\n                    // _top_ left of the page (not the obvious bottom left,\n                    // since aligning the bottom of the intended page with the\n                    // top of the window is rarely helpful).\n                    x = x !== null ? x : 0;\n                    y = y !== null ? y : pageHeight;\n                    break;\n                // case \"Fit\":\n                // case \"FitB\":\n                //     scale = \"page-fit\";\n                //     break;\n                // case \"FitH\":\n                // case \"FitBH\":\n                //     y = destArray[2];\n                //     scale = \"page-width\";\n                //     // According to the PDF spec, section 12.3.2.2, a `null` value in the\n                //     // parameter should maintain the position relative to the new page.\n                //     if (y === null && this._location) {\n                //         x = this._location.left;\n                //         y = this._location.top;\n                //     } else if (typeof y !== \"number\" || y < 0) {\n                //         // The \"top\" value isn't optional, according to the spec, however some\n                //         // bad PDF generators will pretend that it is (fixes bug 1663390).\n                //         y = pageHeight;\n                //     }\n                //     break;\n                // case \"FitV\":\n                // case \"FitBV\":\n                //     x = destArray[2];\n                //     width = pageWidth;\n                //     height = pageHeight;\n                //     scale = \"page-height\";\n                //     break;\n                // case \"FitR\":\n                //     x = destArray[2];\n                //     y = destArray[3];\n                //     width = destArray[4] - x;\n                //     height = destArray[5] - y;\n                //     let hPadding = SCROLLBAR_PADDING,\n                //         vPadding = VERTICAL_PADDING;\n                //     if (\n                //         (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n                //         this.removePageBorders\n                //     ) {\n                //         hPadding = vPadding = 0;\n                //     }\n                //     widthScale =\n                //         (this.container.clientWidth - hPadding) /\n                //         width /\n                //         PixelsPerInch.PDF_TO_CSS_UNITS;\n                //     heightScale =\n                //         (this.container.clientHeight - vPadding) /\n                //         height /\n                //         PixelsPerInch.PDF_TO_CSS_UNITS;\n                //     scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n                //     break;\n                default:\n                    // console.error(\n                    //     `scrollPageIntoView: \"${destArray[1].name}\" is not a valid destination type.`\n                    // );\n                    return;\n            }\n            if (!ignoreDestinationZoom) {\n                // if (scale && scale !== this.options.zoomLevel) {\n                // }\n                // if (scale && scale !== this._currentScale) {\n                // this.currentScaleValue = scale;\n                // } else if (this._currentScale === UNKNOWN_SCALE) {\n                // this.currentScaleValue = DEFAULT_SCALE_VALUE;\n                // }\n            }\n            // if (scale === \"page-fit\" && !destArray[4]) {\n            //     this.#scrollIntoView(pageView);\n            //     return;\n            // }\n            const boundingRect = [\n                pageView.viewport.convertToViewportPoint(x, y),\n                pageView.viewport.convertToViewportPoint(x + width, y + height),\n            ];\n            let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n            let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n            if (!allowNegativeOffset) {\n                // Some bad PDF generators will create destinations with e.g. top values\n                // that exceeds the page height. Ensure that offsets are not negative,\n                // to prevent a previous page from becoming visible (fixes bug 874482).\n                left = Math.max(left, 0);\n                top = Math.max(top, 0);\n            }\n            // left *= scale || this.state.zoomLevel;\n            // top *= scale || this.state.zoomLevel;\n            kendo_dateinputsCommon_cmn_chunk_js.a(this, _PdfViewer_instances, \"m\", _PdfViewer_scrollIntoView).call(this, pageView, /* pageSpot = */ { left, top });\n        }\n        /**\n         * @returns {boolean} Whether the pageNumber is valid (within bounds).\n         * @private\n         */\n        _setCurrentPageNumber(val, resetCurrentPageView = false) {\n            if (this._currentPageNumber === val) {\n                if (resetCurrentPageView) {\n                    // this.#resetCurrentPageView();\n                }\n                return true;\n            }\n            // if (!(0 < val && val <= this.pagesCount)) {\n            if (!(0 < val && val <= this.state.pdfDocument.numPages)) {\n                return false;\n            }\n            const previous = this._currentPageNumber;\n            this._currentPageNumber = val;\n            this.eventBus.dispatch(\"pagechanging\", {\n                source: this,\n                pageNumber: val,\n                // pageLabel: this._pageLabels?.[val - 1] ?? null,\n                previous,\n            });\n            // if (resetCurrentPageView) {\n            //     this.#resetCurrentPageView();\n            // }\n            return true;\n        }\n    }\n    _PdfViewer_annotationEditorMode = new WeakMap(), _PdfViewer_switchAnnotationEditorModeTimeoutId = new WeakMap(), _PdfViewer_eventAbortController = new WeakMap(), _PdfViewer_onPageRenderedCallback = new WeakMap(), _PdfViewer_instances = new WeakSet(), _PdfViewer_switchToEditAnnotationMode = function _PdfViewer_switchToEditAnnotationMode() {\n        // const visible = this._getVisiblePages();\n        // const visible = this._getVisiblePages();\n        const pagesToRefresh = [];\n        // const { ids, views } = visible;\n        // for (const page of views) {\n        const ids = new Set();\n        this.pages.forEach(x => {\n            ids.add(x.id);\n        });\n        for (const page of this.pages) {\n            // const { view } = page;\n            const view = page;\n            if (!view.hasEditableAnnotations()) {\n                ids.delete(view.id);\n                continue;\n            }\n            pagesToRefresh.push(page);\n        }\n        if (pagesToRefresh.length === 0) {\n            return null;\n        }\n        // this.renderingQueue.renderHighestPriority({\n        //     first: pagesToRefresh[0],\n        //     last: pagesToRefresh.at(-1),\n        //     views: pagesToRefresh,\n        //     ids,\n        // });\n        // todo: render pages instead of using renderingQueue\n        // as this will require porting more code\n        this.drawPagesAsync(this.state.pdfPages);\n        return ids;\n    }, _PdfViewer_scrollIntoView = function _PdfViewer_scrollIntoView(pageView, pageSpot = null) {\n        const { div, id } = pageView;\n        // Ensure that `this._currentPageNumber` is correct, when `#scrollIntoView`\n        // is called directly (and not from `#resetCurrentPageView`).\n        if (this._currentPageNumber !== id) {\n            this._setCurrentPageNumber(id);\n        }\n        // if (this._scrollMode === ScrollMode.PAGE) {\n        //     this.#ensurePageViewVisible();\n        //     // Ensure that rendering always occurs, to avoid showing a blank page,\n        //     // even if the current position doesn't change when the page is scrolled.\n        //     this.update();\n        // }\n        if (!pageSpot && !this.isInPresentationMode) {\n            const left = div.offsetLeft + div.clientLeft, right = left + div.clientWidth;\n            // const { scrollLeft, clientWidth } = this.container;\n            const { scrollLeft, clientWidth } = this.element;\n            if (this._scrollMode === ScrollMode.HORIZONTAL ||\n                left < scrollLeft ||\n                right > scrollLeft + clientWidth) {\n                pageSpot = { left: 0, top: 0 };\n            }\n        }\n        scrollIntoView(div, pageSpot);\n        // // Ensure that the correct *initial* document position is set, when any\n        // // OpenParameters are used, for documents with non-default Scroll/Spread\n        // // modes (fixes issue 15695). This is necessary since the scroll-handler\n        // // invokes the `update`-method asynchronously, and `this._location` could\n        // // thus be wrong when the initial zooming occurs in the default viewer.\n        // if (!this._currentScaleValue && this._location) {\n        //     this._location = null;\n        // }\n    };\n\n    exports.D = DEFAULT_ZOOM_LEVEL$2;\n    exports.S = SearchService;\n    exports.__meta__ = __meta__;\n    exports.a = goToPreviousSearchMatch;\n    exports.b = calculateZoomLevel;\n    exports.c = currentPage;\n    exports.d = download;\n    exports.e = Scroller;\n    exports.f = renderPage;\n    exports.g = goToNextSearchMatch;\n    exports.l = loadPDF;\n    exports.p = print;\n    exports.r = reloadDocument;\n    exports.s = scrollToPage;\n\n}));\n"]}