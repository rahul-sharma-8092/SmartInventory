{"version":3,"sources":["raw-js/kendo.numerictextbox.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Numerictextbox","Core","Userevents","Floatinglabel","HtmlButton","Icons","PrefixSuffixContainersChunk","this","kendo_core_js","kendo_userevents_js","kendo_floatinglabel_js","kendo_html_button_js","kendo_icons_js","kendo_prefixSuffixContainers_chunk_js","$","undefined$1","window","caret","keys","html","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","parseFloat","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","HOVEREVENTS","FOCUSED","HOVER","FOCUS","POINT","SELECTED","STATEDISABLED","STATEINVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","isPlainObject","extend","NumericTextBox","init","element","options","min","max","step","value","inputType","that","isStep","fn","call","on","_focusout","bind","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_focusin","selectValue","_click","factor","format","val","enable","is","parents","readonly","_label","_ariaLabel","_applyCssClasses","a","widget","wrapper","prefixInsertBefore","suffixInsertAfter","_validationIcon","floatingLabel","refresh","notify","name","decimals","autoAdjust","restrictDecimals","round","culture","spinners","selectOnFocus","upArrowText","downArrowText","label","size","fillMode","rounded","prefixOptions","separator","suffixOptions","events","_editable","disable","text","add","off","_toggleText","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","prop","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","focus","setOptions","_placeholder","destroy","_arrowsWrap","remove","_floatingLabelContainer","unwrap","Boolean","_value","_form","_resetHandler","_option","_adjust","_update","_old","arrows","_release","clearTimeout","_spinning","siblings","buttonHtml","appendTo","wrapAll","parent","toggle","eq","UserEvents","release","icon","iconClass","insertAfter","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","substring","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","select","_getFactorValue","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","show","accessKey","find","first","insertBefore","setAttribute","type","title","tabIndex","style","cssText","className","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","UP","ENTER","TAB","_cachedCaret","_step","decimalSeparator","minInvalid","charAt","_isPasted","toString","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","precision","fractionRule","_separator","_oldPrecision","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","toggleClass","removeAttr","_round","truncate","isNotNull","floating","labelText","id","content","wrap","FloatingLabel","isFunction","guid","DOMElement","hide","width","css","formId","form","closest","direction","dir","renderButton","shape","parts","split","join","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.numerictextbox.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.userevents.js'), require('kendo.floatinglabel.js'), require('kendo.html.button.js'), require('kendo.icons.js'), require('kendo.prefix-suffix-containers.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.userevents', 'kendo.floatinglabel', 'kendo.html.button', 'kendo.icons', 'kendo.prefix-suffix-containers.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Numerictextbox = {}), global.kendo._globals.Core, global.kendo._globals.Userevents, global.kendo._globals.Floatinglabel, global.kendo._globals.HtmlButton, global.kendo._globals.Icons, global.kendo._globals.PrefixSuffixContainersChunk));\n})(this, (function (exports, kendo_core_js, kendo_userevents_js, kendo_floatinglabel_js, kendo_html_button_js, kendo_icons_js, kendo_prefixSuffixContainers_chunk_js) {\n    const __meta__ = {\n        id: \"numerictextbox\",\n        name: \"NumericTextBox\",\n        category: \"web\",\n        description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n        depends: [\"core\", \"userevents\", \"floatinglabel\", \"html.button\", \"icons\", \"prefix-suffix-containers.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            caret = kendo.caret,\n            keys = kendo.keys,\n            html = kendo.html,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            parse = kendo.parseFloat,\n            placeholderSupported = kendo.support.placeholder,\n            getCulture = kendo.getCulture,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            SPIN = \"spin\",\n            ns = \".kendoNumericTextBox\",\n            TOUCHEND = \"touchend\",\n            MOUSELEAVE = \"mouseleave\" + ns,\n            HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            FOCUS = \"focus\",\n            POINT = \".\",\n            SYMBOL = \"symbol\",\n            CLASS_ICON = \"k-icon\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            STATEINVALID = \"k-invalid\",\n            ARIA_DISABLED = \"aria-disabled\",\n            INTEGER_REGEXP = /^(-)?(\\d*)$/,\n            NULL = null,\n            isPlainObject = $.isPlainObject,\n            extend = $.extend;\n\n        var NumericTextBox = Widget.extend({\n             init: function(element, options) {\n                 var that = this,\n                 isStep = options && options.step !== undefined$1,\n                 min, max, step, value, disabled;\n                 var inputType;\n\n                 Widget.fn.init.call(that, element, options);\n\n                 options = that.options;\n                 element = that.element\n                               .on(\"focusout\" + ns, that._focusout.bind(that))\n                               .attr(\"role\", \"spinbutton\");\n\n                 options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n                 min = that.min(element.attr(\"min\"));\n                 max = that.max(element.attr(\"max\"));\n                 step = that._parse(element.attr(\"step\"));\n\n                 if (options.min === NULL && min !== NULL) {\n                     options.min = min;\n                 }\n\n                 if (options.max === NULL && max !== NULL) {\n                     options.max = max;\n                 }\n\n                 if (!isStep && step !== NULL) {\n                     options.step = step;\n                 }\n\n                 that._initialOptions = extend({}, options);\n\n                 inputType = element.attr(\"type\");\n\n                 that._reset();\n                 that._wrapper();\n                 that._arrows();\n                 that._validation();\n                 that._input();\n\n                 if (!kendo.support.mobileOS) {\n                     that._text.on(FOCUS + ns, that._click.bind(that));\n                 } else {\n                     that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                         if (kendo.support.browser.edge) {\n                             that._text.one(FOCUS + ns, function() {\n                                that._focusin();\n                             });\n                         } else {\n                            that._focusin();\n                         }\n                         that.selectValue();\n                     });\n                 }\n\n                 element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                        .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n                 options.format = extractFormat(options.format);\n\n                 value = options.value;\n\n                 if (value == NULL) {\n                     if (inputType == \"number\") {\n                        value = parseFloat(element.val());\n                     } else {\n                         value = element.val();\n                     }\n                 }\n\n                 that.value(value);\n\n                 disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n                 if (disabled) {\n                     that.enable(false);\n                 } else {\n                     that.readonly(element.is(\"[readonly]\"));\n                 }\n\n                 that._label();\n                 that._ariaLabel(that._text);\n                 that._applyCssClasses();\n\n                 kendo_prefixSuffixContainers_chunk_js.a({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._text, suffixInsertAfter: that._validationIcon });\n                 if (that.floatingLabel) {\n                     that.floatingLabel.refresh();\n                 }\n\n                 kendo.notify(that);\n             },\n\n            options: {\n                name: \"NumericTextBox\",\n                decimals: NULL,\n                autoAdjust: true,\n                enable: true,\n                restrictDecimals: false,\n                min: NULL,\n                max: NULL,\n                value: NULL,\n                step: 1,\n                round: true,\n                culture: \"\",\n                format: \"n\",\n                spinners: true,\n                placeholder: \"\",\n                selectOnFocus: false,\n                factor: 1,\n                upArrowText: \"Increase value\",\n                downArrowText: \"Decrease value\",\n                label: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n            events: [\n                CHANGE,\n                SPIN\n            ],\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    text = that._text.add(element),\n                    wrapper = that.wrapper.off(HOVEREVENTS);\n\n                that._toggleText(true);\n\n                that._upArrowEventHandler.unbind(\"press\");\n                that._downArrowEventHandler.unbind(\"press\");\n                element\n                    .off(\"keydown\" + ns)\n                    .off(\"keyup\" + ns)\n                    .off(\"input\" + ns)\n                    .off(\"paste\" + ns);\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                }\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    text.prop(DISABLED, false)\n                        .prop(READONLY, false)\n                        .attr(ARIA_DISABLED, false);\n\n                    that._upArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(1);\n                        that._upArrow.addClass(SELECTED);\n                    });\n\n                    that._downArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(-1);\n                        that._downArrow.addClass(SELECTED);\n                    });\n\n                    that.element\n                        .on(\"keydown\" + ns, that._keydown.bind(that))\n                        .on(\"keyup\" + ns, that._keyup.bind(that))\n                        .on(\"paste\" + ns, that._paste.bind(that))\n                        .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                    if (that._inputLabel) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    text.attr(DISABLED, disable)\n                        .attr(READONLY, readonly)\n                        .attr(ARIA_DISABLED, disable);\n                }\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n\n                that._text.prop(\"placeholder\", that.options.placeholder);\n                that._placeholder(that.options.placeholder);\n                that.element.attr({\n                    \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                    \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n                });\n\n                that.options.format = extractFormat(that.options.format);\n                that._upArrowEventHandler.destroy();\n                that._upArrowEventHandler = null;\n                that._downArrowEventHandler.destroy();\n                that._downArrowEventHandler = null;\n                that._arrowsWrap.remove();\n                that._arrows();\n\n                that._applyCssClasses();\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                    that._inputLabel.remove();\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                        if (that._floatingLabelContainer) {\n                            that.wrapper.unwrap();\n                        }\n                    }\n                }\n\n                that._label();\n\n                if (options.enable !== undefined$1 || options.readonly !== undefined$1) {\n                    that._editable({\n                        readonly: options.readonly,\n                        disable: !options.enable\n                    });\n                } else {\n                    that._editable({\n                        readonly: that.element.attr(\"readonly\") !== undefined$1 ? Boolean(that.element.attr(\"readonly\")) : that.options.readonly,\n                        disable: that.element.attr(\"disabled\") !== undefined$1 ? Boolean(that.element.attr(\"disabled\")) : !that.options.enable\n                    });\n                }\n\n                if (options.value !== undefined$1) {\n                    that.value(options.value);\n                } else if (that._value !== undefined$1) {\n                    that.value(that._value);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                    }\n                }\n\n                that.element\n                    .add(that._text)\n                    .add(that._upArrow)\n                    .add(that._downArrow)\n                    .off(ns);\n\n                that._upArrowEventHandler.destroy();\n                that._downArrowEventHandler.destroy();\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            min: function(value) {\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            step: function(value) {\n                return this._option(\"step\", value);\n            },\n\n            value: function(value) {\n                var that = this, adjusted;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._parse(value);\n                adjusted = that._adjust(value);\n\n                if (value !== adjusted) {\n                    value = NULL;\n                }\n\n                that._update(value);\n                that._old = that._value;\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            focus: function() {\n                this._focusin();\n                this.selectValue();\n            },\n\n            _adjust: function(value) {\n                let that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max,\n                    autoAdjust = options.autoAdjust;\n\n                if (value === NULL || !autoAdjust) {\n                    return value;\n                }\n\n                if (min !== NULL && value < min) {\n                    value = min;\n                } else if (max !== NULL && value > max) {\n                    value = max;\n                }\n\n                return value;\n            },\n\n            _arrows: function() {\n                var that = this,\n                arrows,\n                _release = function() {\n                    clearTimeout( that._spinning );\n                    arrows.removeClass(SELECTED);\n                },\n                options = that.options,\n                spinners = options.spinners,\n                element = that.element;\n\n                arrows = element.siblings(\".k-icon-button\");\n\n                if (!arrows[0]) {\n                    arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                            .appendTo(that.wrapper);\n\n                    that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n                }\n\n                if (!spinners) {\n                    arrows.parent().toggle(spinners);\n                }\n\n                that._upArrow = arrows.eq(0);\n                that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n                that._downArrow = arrows.eq(1);\n                that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n            },\n\n            _validation: function() {\n                var that = this;\n                var element = that.element;\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                that._toggleText(true);\n\n                that._change(that.element.val());\n            },\n\n            _click: function(e) {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that._focusing = setTimeout(function() {\n                    var input = e.target,\n                        idx = caret(input)[0],\n                        value = input.value.substring(0, idx),\n                        format = that._format(that.options.format),\n                        group = format[\",\"],\n                        result, groupRegExp, extractRegExp,\n                        caretPosition = 0;\n\n                    if (group) {\n                        groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                        extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                    }\n\n                    if (extractRegExp) {\n                        result = extractRegExp.exec(value);\n                    }\n\n                    if (result) {\n                        caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                        if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                            caretPosition++;\n                        }\n                    }\n\n                    that._focusin();\n\n                    caret(that.element[0], caretPosition);\n                    that.selectValue();\n                });\n            },\n\n            selectValue: function() {\n                if (this.options.selectOnFocus) {\n                    this.element[0].select();\n                }\n            },\n\n            _getFactorValue: function(value) {\n                var that = this,\n                    factor = that.options.factor;\n\n                if (factor && factor !== 1) {\n                    value = kendo.parseFloat(value);\n                    if (value !== null) {\n                        value = value / factor;\n                    }\n                }\n\n                return value;\n            },\n\n            _change: function(value) {\n                var that = this;\n\n                value = that._getFactorValue(value);\n                that._update(value);\n                value = that._value;\n\n                if (that._old != value) {\n                    that._old = value;\n\n                    if (!that._typing) {\n                        // trigger the DOM change event so any subscriber gets notified\n                        that.element.trigger(CHANGE);\n                    }\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _culture: function(culture) {\n                return culture || getCulture(this.options.culture);\n            },\n\n            _focusin: function() {\n                var that = this;\n                that.wrapper.addClass(FOCUSED);\n                that._toggleText(false);\n                that.element[0].focus();\n            },\n\n            _focusout: function() {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n                that._blur();\n                that._removeInvalidState();\n            },\n\n            _format: function(format, culture) {\n                var numberFormat = this._culture(culture).numberFormat;\n\n                format = format.toLowerCase();\n\n                if (format.indexOf(\"c\") > -1) {\n                    numberFormat = numberFormat.currency;\n                } else if (format.indexOf(\"p\") > -1) {\n                    numberFormat = numberFormat.percent;\n                }\n\n                return numberFormat;\n            },\n\n            _input: function() {\n                var that = this,\n                    options = that.options,\n                    element = that.element.addClass(INPUT).show()[0],\n                    accessKey = element.accessKey,\n                    wrapper = that.wrapper,\n                    inputs = wrapper.find(POINT + INPUT),\n                    text;\n\n                text = inputs.first();\n\n                if (text.length < 2) {\n                    text = $('<input type=\"text\"/>')\n                            .attr(kendo.attr(\"validate\"), \"false\")\n                            .insertBefore(element);\n                }\n\n                try {\n                    element.setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element.type = \"text\";\n                }\n\n                text[0].title = element.title;\n                text[0].tabIndex = element.tabIndex;\n                text[0].style.cssText = element.style.cssText;\n                text.prop(\"placeholder\", options.placeholder);\n\n                if (accessKey) {\n                    text.attr(\"accesskey\", accessKey);\n                    element.accessKey = \"\";\n                }\n\n\n                that._text = text.addClass(element.className)\n                                 .attr({\n                                     \"role\": \"spinbutton\",\n                                     \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                     \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                     \"autocomplete\": \"off\"\n                                 });\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode;\n\n                if (key === keys.NUMPAD_DOT) {\n                    that._numPadDot = true;\n                }\n\n                if (key == keys.DOWN) {\n                    that._step(-1);\n                    return;\n                } else if (key == keys.UP) {\n                    that._step(1);\n                    return;\n                } else if (key == keys.ENTER) {\n                    that._change(that.element.val());\n                    return;\n                }\n\n                if (key != keys.TAB) {\n                    that._typing = true;\n                }\n                that._cachedCaret = caret(that.element);\n            },\n\n            _keyup: function() {\n                this._removeInvalidState();\n            },\n\n            _inputHandler: function() {\n                var element = this.element;\n                var value = element.val();\n                var min = this.options.min;\n                var numberFormat = this._format(this.options.format);\n                var decimalSeparator = numberFormat[POINT];\n                var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n                if (this._numPadDot && decimalSeparator !== POINT) {\n                    value = value.replace(POINT, decimalSeparator);\n                    this.element.val(value);\n                    this._numPadDot = false;\n                }\n\n                if (this._isPasted && this._parse(value)) {\n                    value = this._parse(value)\n                        .toString()\n                        .replace(POINT, numberFormat[POINT]);\n                }\n\n                if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                    this._oldText = value;\n                } else {\n                    this._blinkInvalidState();\n                    this.element.val(this._oldText);\n                    if (this._cachedCaret) {\n                        caret(element, this._cachedCaret[0]);\n                        this._cachedCaret = null;\n                    }\n                }\n\n                this._isPasted = false;\n            },\n\n            _blinkInvalidState: function() {\n                var that = this;\n\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n            },\n\n            _addInvalidState: function() {\n                var that = this;\n\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass('k-hidden');\n            },\n\n            _removeInvalidState: function() {\n                var that = this;\n\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass('k-hidden');\n                that._invalidStateTimeout = null;\n            },\n\n            _numericRegex: function(numberFormat) {\n                var that = this;\n                var separator = numberFormat[POINT];\n                var precision = that.options.decimals;\n                var fractionRule = \"*\";\n\n                if (separator === POINT) {\n                    separator = \"\\\\\" + separator;\n                }\n\n                if (precision === NULL) {\n                    precision = numberFormat.decimals;\n                }\n\n                if (precision === 0 && that.options.restrictDecimals) {\n                    return INTEGER_REGEXP;\n                }\n\n                if (that.options.restrictDecimals) {\n                    fractionRule = \"{0,\" + precision + \"}\";\n                }\n\n                if (that._separator !== separator || that._oldPrecision !== precision) {\n                    that._separator = separator;\n                    that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n                    that._oldPrecision = precision;\n                }\n\n                return that._floatRegExp;\n            },\n\n            _paste: function(e) {\n                var that = this;\n                var element = e.target;\n                var value = element.value;\n                var numberFormat = that._format(that.options.format);\n\n                that._isPasted = true;\n\n               setTimeout(function() {\n                    var result = that._parse(element.value);\n\n                    if (result === NULL) {\n                        that._update(value);\n                    } else {\n                        element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                        if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                            value = that._getFactorValue(element.value);\n                            that._update(value);\n                        }\n                    }\n                });\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    element = that.element,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = that._parse(value);\n\n                if (!value && option === \"step\") {\n                    return;\n                }\n\n                options[option] = value;\n                element\n                    .add(that._text)\n                    .attr(\"aria-value\" + option, value);\n\n                element.attr(option, value);\n            },\n\n            _spin: function(step, timeout) {\n                var that = this;\n\n                timeout = timeout || 500;\n\n                clearTimeout( that._spinning );\n                that._spinning = setTimeout(function() {\n                    that._spin(step, 50);\n                }, timeout );\n\n                that._step(step);\n            },\n\n            _step: function(step) {\n                var that = this,\n                    element = that.element,\n                    originalValue = that._value,\n                    value = that._parse(element.val()) || 0,\n                    precision = that.options.decimals || 2;\n\n                if (activeElement() != element[0]) {\n                    that._focusin();\n                }\n\n                if (that.options.factor && value) {\n                    value = value / that.options.factor;\n                }\n\n                value = +(value + that.options.step * step).toFixed(precision);\n                value = that._adjust(value);\n                that._update(value);\n                that._typing = false;\n\n                if (originalValue !== value) {\n                    that.trigger(SPIN);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _toggleText: function(toggle) {\n                var that = this;\n\n                that._text.toggle(toggle);\n                if (toggle) {\n                    that._text.removeAttr(\"aria-hidden\");\n                } else {\n                    that._text.attr(\"aria-hidden\", \"true\");\n                }\n                that.element.toggle(!toggle);\n            },\n\n            _parse: function(value, culture) {\n                return parse(value, this._culture(culture), this.options.format);\n            },\n\n            _round: function(value, precision) {\n                var rounder = this.options.round ? kendo._round : truncate;\n\n                return rounder(value, precision);\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    factor = options.factor,\n                    format = options.format,\n                    decimals = options.decimals,\n                    culture = that._culture(),\n                    numberFormat = that._format(format, culture),\n                    originalValue,\n                    isNotNull;\n\n                if (decimals === NULL) {\n                    decimals = numberFormat.decimals;\n                }\n\n                value = that._parse(value, culture);\n\n                isNotNull = value !== NULL;\n\n                if (isNotNull) {\n                    value = parseFloat(that._round(value, decimals), 10);\n                }\n\n                that._value = value = that._adjust(value);\n                that._placeholder(kendo.toString(value, format, culture));\n\n                if (isNotNull) {\n                    if (factor) {\n                        value = parseFloat(that._round(value * factor, decimals), 10);\n                    }\n                    value = value.toString();\n                    if (value.indexOf(\"e\") !== -1) {\n                        value = that._round(+value, decimals);\n                    }\n                    originalValue = value;\n                    value = value.replace(POINT, numberFormat[POINT]);\n                } else {\n                    value = null;\n                    originalValue = null;\n                }\n\n                that.element.val(value);\n                that._oldText = value;\n                that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n            },\n\n            _placeholder: function(value) {\n                var input = this._text;\n\n                input.val(value);\n                if (!placeholderSupported && !value) {\n                    input.val(this.options.placeholder);\n                }\n\n                input.attr(\"title\", this.element.attr(\"title\") || input.val());\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n\n                    if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    DOMElement = element[0],\n                    wrapper;\n\n                wrapper = element.parents(\".k-numerictextbox\");\n\n                if (!wrapper.is(\"span.k-numerictextbox\")) {\n                    wrapper = element.hide().wrap(\"<span/>\").parent();\n                }\n\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n                that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                      .addClass(DOMElement.className)\n                                      .removeClass('input-validation-error')\n                                      .css(\"display\", \"\");\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(element[0].value);\n                            that.max(that._initialOptions.max);\n                            that.min(that._initialOptions.min);\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        function buttonHtml(direction, text, options) {\n            var className = direction === \"increase\" ? \"caret-alt-up\" : \"caret-alt-down\";\n            var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n            return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n                icon: className,\n                shape: null,\n                rounded: null\n            }));\n        }\n\n        function truncate(value, precision) {\n            var parts = parseFloat(value, 10).toString().split(POINT);\n\n            if (parts[1]) {\n                parts[1] = parts[1].substring(0, precision);\n            }\n\n            return parts.join(POINT);\n\n        }\n\n        ui.plugin(NumericTextBox);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}